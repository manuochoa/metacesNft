{
	"id": "6a027ac543d1479e211bc9391332b821",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ncontract AcesStaking is Ownable, Pausable {\n    // Address of the token for the staking.\n    IERC20 public acceptedToken;\n    \n    // Struc with user details.\n    struct User {\n        uint256 balance;\n        uint256 started;\n        uint256 unlockTime;\n    }  \n\n    struct Level {\n        uint256 APY;\n        uint256 lockPeriod;\n    } \n    \n    // Mapping for user details of  each class.\n    mapping(address => mapping(uint256 => User)) userLevelDeposit;\n    mapping(uint256 => Level) levelInfo;\n\n    // Events.\n    event Deposit (address user, uint256 class, uint256 amount);\n    event Withdraw (address user, uint256 class, uint256 amount);\n    event Claim (address user, uint256 class, uint256 amount);\n    event Compound (address user, uint256 class, uint256 amount);\n \n    // Set the token to be staked and Router.\n    constructor(address _token ) {\n        acceptedToken = IERC20(_token);\n    }   \n    \n    // Pause and Unpause the contract\n    function pause () public onlyOwner {\n        _pause();\n    }\n    \n    function unpause () public onlyOwner {\n        _unpause();\n    } \n\n    // function setNewAPY ( uint256 _level0APY, uint256 _level1APY, uint256 _vipLevelAPY) external onlyOwner{\n    //     level0APY = _level0APY;\n    //     level1APY = _level1APY;\n    //     vipLevelAPY = _vipLevelAPY;\n    // }\n\n    function deposit (uint256 _amount, uint256 _level) public whenNotPaused {\n        address _msgSender = msg.sender;       \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        userLevelDeposit[_msgSender][_level].balance += _amount;\n        userLevelDeposit[_msgSender][_level].started += block.timestamp;\n        userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod;\n\n        emit Deposit (_msgSender, _level, _amount);\n    }\n\n    function withdraw (uint256 _amount, uint256 _level) public  {\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\");\n        require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n        \n        userLevelDeposit[_msgSender][_level].balance -= _amount;\n\n        acceptedToken.transfer(_msgSender, _amount + rewards);\n\n        emit Withdraw(_msgSender, 0, _amount);\n    }\n\n    function claim (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        acceptedToken.transfer(_msgSender, rewards);\n\n        emit Claim (_msgSender, _level, rewards);\n    }\n\n    function compound (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        userLevelDeposit[_msgSender][_level].balance += rewards;\n\n        emit Compound (_msgSender, _level, rewards);\n    }\n\n    function calculateRewards (address _user, uint256 _level) public view returns (uint256){\n        uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].started;\n        uint256 balance = userLevelDeposit[_user][_level].balance; \n        uint256 APY = levelInfo[_level].APY;\n\n        uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days;\n        uint256 rewardsEarned = timeStaked * rewardsPerSecond;\n\n        return rewardsEarned;\n    }    \n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"AcesStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Compound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptedToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":224:3818  contract AcesStaking is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":1052:1128  constructor(address _token ) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  tag_9\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:950  _msgSender */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":940:952  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":991:996  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:988  _paused */\n  dup1\n  0x14\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"staking.sol\":1114:1120  _token */\n  dup1\n    /* \"staking.sol\":1091:1104  acceptedToken */\n  0x01\n  0x00\n    /* \"staking.sol\":1091:1121  acceptedToken = IERC20(_token) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"staking.sol\":1052:1128  constructor(address _token ) {... */\n  pop\n    /* \"staking.sol\":224:3818  contract AcesStaking is Ownable, Pausable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_10:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:150   */\ntag_18:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_20\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_24\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":243:362   */\ntag_23:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_26\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_18\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_29:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_31\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_32:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_25:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_21:\n    /* \"#utility.yul\":1147:1171   */\n  tag_38\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_29\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_39:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"staking.sol\":224:3818  contract AcesStaking is Ownable, Pausable {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":224:3818  contract AcesStaking is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xaa5f7e26\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbeb8314c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x379607f5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x451c3d80\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":2627:2973  function claim (uint256 _level) external{... */\n    tag_3:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n    tag_16:\n      stop\n        /* \"staking.sol\":1249:1313  function unpause () public onlyOwner {... */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      stop\n        /* \"staking.sol\":2053:2621  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_5:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"staking.sol\":1179:1239  function pause () public onlyOwner {... */\n    tag_9:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":2979:3343  function compound (uint256 _level) external{... */\n    tag_11:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"staking.sol\":3349:3812  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_12:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":1549:2047  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_13:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"staking.sol\":2627:2973  function claim (uint256 _level) external{... */\n    tag_19:\n        /* \"staking.sol\":2677:2695  address _msgSender */\n      0x00\n        /* \"staking.sol\":2698:2708  msg.sender */\n      caller\n        /* \"staking.sol\":2677:2708  address _msgSender = msg.sender */\n      swap1\n      pop\n        /* \"staking.sol\":2773:2774  0 */\n      0x00\n        /* \"staking.sol\":2726:2742  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2726:2754  userLevelDeposit[_msgSender] */\n      0x00\n        /* \"staking.sol\":2743:2753  _msgSender */\n      dup4\n        /* \"staking.sol\":2726:2754  userLevelDeposit[_msgSender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2726:2762  userLevelDeposit[_msgSender][_level] */\n      0x00\n        /* \"staking.sol\":2755:2761  _level */\n      dup5\n        /* \"staking.sol\":2726:2762  userLevelDeposit[_msgSender][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2726:2770  userLevelDeposit[_msgSender][_level].balance */\n      0x00\n      add\n      sload\n        /* \"staking.sol\":2726:2774  userLevelDeposit[_msgSender][_level].balance > 0 */\n      gt\n        /* \"staking.sol\":2718:2796  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"staking.sol\":2807:2822  uint256 rewards */\n      0x00\n        /* \"staking.sol\":2825:2861  calculateRewards(_msgSender, _level) */\n      tag_62\n        /* \"staking.sol\":2842:2852  _msgSender */\n      dup3\n        /* \"staking.sol\":2854:2860  _level */\n      dup5\n        /* \"staking.sol\":2825:2841  calculateRewards */\n      tag_48\n        /* \"staking.sol\":2825:2861  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_62:\n        /* \"staking.sol\":2807:2861  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap1\n      pop\n        /* \"staking.sol\":2872:2885  acceptedToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":2872:2894  acceptedToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"staking.sol\":2895:2905  _msgSender */\n      dup4\n        /* \"staking.sol\":2907:2914  rewards */\n      dup4\n        /* \"staking.sol\":2872:2915  acceptedToken.transfer(_msgSender, rewards) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      pop\n        /* \"staking.sol\":2931:2966  Claim (_msgSender, _level, rewards) */\n      0x34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7\n        /* \"staking.sol\":2938:2948  _msgSender */\n      dup3\n        /* \"staking.sol\":2950:2956  _level */\n      dup5\n        /* \"staking.sol\":2958:2965  rewards */\n      dup4\n        /* \"staking.sol\":2931:2966  Claim (_msgSender, _level, rewards) */\n      mload(0x40)\n      tag_70\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":2667:2973  {... */\n      pop\n      pop\n        /* \"staking.sol\":2627:2973  function claim (uint256 _level) external{... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":1249:1313  function unpause () public onlyOwner {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_75\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"staking.sol\":1296:1306  _unpause() */\n      tag_80\n        /* \"staking.sol\":1296:1304  _unpause */\n      tag_81\n        /* \"staking.sol\":1296:1306  _unpause() */\n      jump\t// in\n    tag_80:\n        /* \"staking.sol\":1249:1313  function unpause () public onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":2053:2621  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_25:\n        /* \"staking.sol\":2123:2141  address _msgSender */\n      0x00\n        /* \"staking.sol\":2144:2154  msg.sender */\n      caller\n        /* \"staking.sol\":2123:2154  address _msgSender = msg.sender */\n      swap1\n      pop\n        /* \"staking.sol\":2220:2227  _amount */\n      dup3\n        /* \"staking.sol\":2172:2188  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2172:2200  userLevelDeposit[_msgSender] */\n      0x00\n        /* \"staking.sol\":2189:2199  _msgSender */\n      dup4\n        /* \"staking.sol\":2172:2200  userLevelDeposit[_msgSender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2172:2208  userLevelDeposit[_msgSender][_level] */\n      0x00\n        /* \"staking.sol\":2201:2207  _level */\n      dup5\n        /* \"staking.sol\":2172:2208  userLevelDeposit[_msgSender][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2172:2216  userLevelDeposit[_msgSender][_level].balance */\n      0x00\n      add\n      sload\n        /* \"staking.sol\":2172:2227  userLevelDeposit[_msgSender][_level].balance >= _amount */\n      lt\n      iszero\n        /* \"staking.sol\":2164:2250  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"staking.sol\":2319:2334  block.timestamp */\n      timestamp\n        /* \"staking.sol\":2268:2284  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2268:2296  userLevelDeposit[_msgSender] */\n      0x00\n        /* \"staking.sol\":2285:2295  _msgSender */\n      dup4\n        /* \"staking.sol\":2268:2296  userLevelDeposit[_msgSender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2268:2304  userLevelDeposit[_msgSender][_level] */\n      0x00\n        /* \"staking.sol\":2297:2303  _level */\n      dup5\n        /* \"staking.sol\":2268:2304  userLevelDeposit[_msgSender][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2268:2315  userLevelDeposit[_msgSender][_level].unlockTime */\n      0x02\n      add\n      sload\n        /* \"staking.sol\":2268:2334  userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp */\n      gt\n      iszero\n        /* \"staking.sol\":2260:2363  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"staking.sol\":2374:2389  uint256 rewards */\n      0x00\n        /* \"staking.sol\":2392:2428  calculateRewards(_msgSender, _level) */\n      tag_89\n        /* \"staking.sol\":2409:2419  _msgSender */\n      dup3\n        /* \"staking.sol\":2421:2427  _level */\n      dup5\n        /* \"staking.sol\":2392:2408  calculateRewards */\n      tag_48\n        /* \"staking.sol\":2392:2428  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_89:\n        /* \"staking.sol\":2374:2428  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap1\n      pop\n        /* \"staking.sol\":2495:2502  _amount */\n      dup4\n        /* \"staking.sol\":2447:2463  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2447:2475  userLevelDeposit[_msgSender] */\n      0x00\n        /* \"staking.sol\":2464:2474  _msgSender */\n      dup5\n        /* \"staking.sol\":2447:2475  userLevelDeposit[_msgSender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2447:2483  userLevelDeposit[_msgSender][_level] */\n      0x00\n        /* \"staking.sol\":2476:2482  _level */\n      dup6\n        /* \"staking.sol\":2447:2483  userLevelDeposit[_msgSender][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":2447:2491  userLevelDeposit[_msgSender][_level].balance */\n      0x00\n      add\n      0x00\n        /* \"staking.sol\":2447:2502  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      dup3\n      dup3\n      sload\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2513:2526  acceptedToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":2513:2535  acceptedToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"staking.sol\":2536:2546  _msgSender */\n      dup4\n        /* \"staking.sol\":2558:2565  rewards */\n      dup4\n        /* \"staking.sol\":2548:2555  _amount */\n      dup8\n        /* \"staking.sol\":2548:2565  _amount + rewards */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"staking.sol\":2513:2566  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_98:\n      pop\n        /* \"staking.sol\":2582:2614  Withdraw(_msgSender, 0, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"staking.sol\":2591:2601  _msgSender */\n      dup3\n        /* \"staking.sol\":2603:2604  0 */\n      0x00\n        /* \"staking.sol\":2606:2613  _amount */\n      dup7\n        /* \"staking.sol\":2582:2614  Withdraw(_msgSender, 0, _amount) */\n      mload(0x40)\n      tag_99\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":2113:2621  {... */\n      pop\n      pop\n        /* \"staking.sol\":2053:2621  function withdraw (uint256 _amount, uint256 _level) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n    tag_27:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1161:1175  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_106\n      swap1\n      tag_78\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_108\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":1179:1239  function pause () public onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_78\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"staking.sol\":1224:1232  _pause() */\n      tag_116\n        /* \"staking.sol\":1224:1230  _pause */\n      tag_117\n        /* \"staking.sol\":1224:1232  _pause() */\n      jump\t// in\n    tag_116:\n        /* \"staking.sol\":1179:1239  function pause () public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1101:1114  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"staking.sol\":2979:3343  function compound (uint256 _level) external{... */\n    tag_44:\n        /* \"staking.sol\":3032:3050  address _msgSender */\n      0x00\n        /* \"staking.sol\":3053:3063  msg.sender */\n      caller\n        /* \"staking.sol\":3032:3063  address _msgSender = msg.sender */\n      swap1\n      pop\n        /* \"staking.sol\":3128:3129  0 */\n      0x00\n        /* \"staking.sol\":3081:3097  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3081:3109  userLevelDeposit[_msgSender] */\n      0x00\n        /* \"staking.sol\":3098:3108  _msgSender */\n      dup4\n        /* \"staking.sol\":3081:3109  userLevelDeposit[_msgSender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3081:3117  userLevelDeposit[_msgSender][_level] */\n      0x00\n        /* \"staking.sol\":3110:3116  _level */\n      dup5\n        /* \"staking.sol\":3081:3117  userLevelDeposit[_msgSender][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3081:3125  userLevelDeposit[_msgSender][_level].balance */\n      0x00\n      add\n      sload\n        /* \"staking.sol\":3081:3129  userLevelDeposit[_msgSender][_level].balance > 0 */\n      gt\n        /* \"staking.sol\":3073:3151  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_61\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"staking.sol\":3162:3177  uint256 rewards */\n      0x00\n        /* \"staking.sol\":3180:3216  calculateRewards(_msgSender, _level) */\n      tag_122\n        /* \"staking.sol\":3197:3207  _msgSender */\n      dup3\n        /* \"staking.sol\":3209:3215  _level */\n      dup5\n        /* \"staking.sol\":3180:3196  calculateRewards */\n      tag_48\n        /* \"staking.sol\":3180:3216  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_122:\n        /* \"staking.sol\":3162:3216  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap1\n      pop\n        /* \"staking.sol\":3275:3282  rewards */\n      dup1\n        /* \"staking.sol\":3227:3243  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3227:3255  userLevelDeposit[_msgSender] */\n      0x00\n        /* \"staking.sol\":3244:3254  _msgSender */\n      dup5\n        /* \"staking.sol\":3227:3255  userLevelDeposit[_msgSender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3227:3263  userLevelDeposit[_msgSender][_level] */\n      0x00\n        /* \"staking.sol\":3256:3262  _level */\n      dup6\n        /* \"staking.sol\":3227:3263  userLevelDeposit[_msgSender][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3227:3271  userLevelDeposit[_msgSender][_level].balance */\n      0x00\n      add\n      0x00\n        /* \"staking.sol\":3227:3282  userLevelDeposit[_msgSender][_level].balance += rewards */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":3298:3336  Compound (_msgSender, _level, rewards) */\n      0x0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d186873\n        /* \"staking.sol\":3308:3318  _msgSender */\n      dup3\n        /* \"staking.sol\":3320:3326  _level */\n      dup5\n        /* \"staking.sol\":3328:3335  rewards */\n      dup4\n        /* \"staking.sol\":3298:3336  Compound (_msgSender, _level, rewards) */\n      mload(0x40)\n      tag_124\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":3022:3343  {... */\n      pop\n      pop\n        /* \"staking.sol\":2979:3343  function compound (uint256 _level) external{... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":3349:3812  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_48:\n        /* \"staking.sol\":3428:3435  uint256 */\n      0x00\n        /* \"staking.sol\":3446:3464  uint256 timeStaked */\n      dup1\n        /* \"staking.sol\":3485:3501  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3485:3508  userLevelDeposit[_user] */\n      0x00\n        /* \"staking.sol\":3502:3507  _user */\n      dup6\n        /* \"staking.sol\":3485:3508  userLevelDeposit[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3485:3516  userLevelDeposit[_user][_level] */\n      0x00\n        /* \"staking.sol\":3509:3515  _level */\n      dup5\n        /* \"staking.sol\":3485:3516  userLevelDeposit[_user][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3485:3524  userLevelDeposit[_user][_level].started */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":3467:3482  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3467:3524  block.timestamp - userLevelDeposit[_user][_level].started */\n      tag_126\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_126:\n        /* \"staking.sol\":3446:3524  uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].started */\n      swap1\n      pop\n        /* \"staking.sol\":3534:3549  uint256 balance */\n      0x00\n        /* \"staking.sol\":3552:3568  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3552:3575  userLevelDeposit[_user] */\n      0x00\n        /* \"staking.sol\":3569:3574  _user */\n      dup7\n        /* \"staking.sol\":3552:3575  userLevelDeposit[_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3552:3583  userLevelDeposit[_user][_level] */\n      0x00\n        /* \"staking.sol\":3576:3582  _level */\n      dup6\n        /* \"staking.sol\":3552:3583  userLevelDeposit[_user][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3552:3591  userLevelDeposit[_user][_level].balance */\n      0x00\n      add\n      sload\n        /* \"staking.sol\":3534:3591  uint256 balance = userLevelDeposit[_user][_level].balance */\n      swap1\n      pop\n        /* \"staking.sol\":3602:3613  uint256 APY */\n      0x00\n        /* \"staking.sol\":3616:3625  levelInfo */\n      0x03\n        /* \"staking.sol\":3616:3633  levelInfo[_level] */\n      0x00\n        /* \"staking.sol\":3626:3632  _level */\n      dup7\n        /* \"staking.sol\":3616:3633  levelInfo[_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":3616:3637  levelInfo[_level].APY */\n      0x00\n      add\n      sload\n        /* \"staking.sol\":3602:3637  uint256 APY = levelInfo[_level].APY */\n      swap1\n      pop\n        /* \"staking.sol\":3648:3672  uint256 rewardsPerSecond */\n      0x00\n        /* \"staking.sol\":3703:3711  365 days */\n      0x01e13380\n        /* \"staking.sol\":3694:3699  10000 */\n      0x2710\n        /* \"staking.sol\":3687:3690  APY */\n      dup4\n        /* \"staking.sol\":3677:3684  balance */\n      dup6\n        /* \"staking.sol\":3677:3690  balance * APY */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"staking.sol\":3676:3699  (balance * APY) / 10000 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"staking.sol\":3675:3711  ((balance * APY) / 10000) / 365 days */\n      tag_131\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_131:\n        /* \"staking.sol\":3648:3711  uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days */\n      swap1\n      pop\n        /* \"staking.sol\":3721:3742  uint256 rewardsEarned */\n      0x00\n        /* \"staking.sol\":3758:3774  rewardsPerSecond */\n      dup2\n        /* \"staking.sol\":3745:3755  timeStaked */\n      dup6\n        /* \"staking.sol\":3745:3774  timeStaked * rewardsPerSecond */\n      tag_132\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_132:\n        /* \"staking.sol\":3721:3774  uint256 rewardsEarned = timeStaked * rewardsPerSecond */\n      swap1\n      pop\n        /* \"staking.sol\":3792:3805  rewardsEarned */\n      dup1\n        /* \"staking.sol\":3785:3805  return rewardsEarned */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":3349:3812  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":1549:2047  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1412:1420  paused() */\n      tag_134\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1412:1418  paused */\n      tag_31\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1412:1420  paused() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"staking.sol\":1631:1649  address _msgSender */\n      0x00\n        /* \"staking.sol\":1652:1662  msg.sender */\n      caller\n        /* \"staking.sol\":1631:1662  address _msgSender = msg.sender */\n      swap1\n      pop\n        /* \"staking.sol\":1680:1693  acceptedToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"staking.sol\":1680:1706  acceptedToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"staking.sol\":1707:1717  _msgSender */\n      dup3\n        /* \"staking.sol\":1727:1731  this */\n      address\n        /* \"staking.sol\":1734:1741  _amount */\n      dup7\n        /* \"staking.sol\":1680:1742  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_144:\n      pop\n        /* \"staking.sol\":1801:1808  _amount */\n      dup3\n        /* \"staking.sol\":1753:1769  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1753:1781  userLevelDeposit[_msgSender] */\n      0x00\n        /* \"staking.sol\":1770:1780  _msgSender */\n      dup4\n        /* \"staking.sol\":1753:1781  userLevelDeposit[_msgSender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1753:1789  userLevelDeposit[_msgSender][_level] */\n      0x00\n        /* \"staking.sol\":1782:1788  _level */\n      dup5\n        /* \"staking.sol\":1753:1789  userLevelDeposit[_msgSender][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1753:1797  userLevelDeposit[_msgSender][_level].balance */\n      0x00\n      add\n      0x00\n        /* \"staking.sol\":1753:1808  userLevelDeposit[_msgSender][_level].balance += _amount */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1866:1881  block.timestamp */\n      timestamp\n        /* \"staking.sol\":1818:1834  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1818:1846  userLevelDeposit[_msgSender] */\n      0x00\n        /* \"staking.sol\":1835:1845  _msgSender */\n      dup4\n        /* \"staking.sol\":1818:1846  userLevelDeposit[_msgSender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1818:1854  userLevelDeposit[_msgSender][_level] */\n      0x00\n        /* \"staking.sol\":1847:1853  _level */\n      dup5\n        /* \"staking.sol\":1818:1854  userLevelDeposit[_msgSender][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1818:1862  userLevelDeposit[_msgSender][_level].started */\n      0x01\n      add\n      0x00\n        /* \"staking.sol\":1818:1881  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      dup3\n      dup3\n      sload\n      tag_146\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_146:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":1959:1968  levelInfo */\n      0x03\n        /* \"staking.sol\":1959:1976  levelInfo[_level] */\n      0x00\n        /* \"staking.sol\":1969:1975  _level */\n      dup4\n        /* \"staking.sol\":1959:1976  levelInfo[_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1959:1987  levelInfo[_level].lockPeriod */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":1941:1956  block.timestamp */\n      timestamp\n        /* \"staking.sol\":1941:1987  block.timestamp + levelInfo[_level].lockPeriod */\n      tag_147\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_147:\n        /* \"staking.sol\":1891:1907  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1891:1919  userLevelDeposit[_msgSender] */\n      0x00\n        /* \"staking.sol\":1908:1918  _msgSender */\n      dup4\n        /* \"staking.sol\":1891:1919  userLevelDeposit[_msgSender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1891:1927  userLevelDeposit[_msgSender][_level] */\n      0x00\n        /* \"staking.sol\":1920:1926  _level */\n      dup5\n        /* \"staking.sol\":1891:1927  userLevelDeposit[_msgSender][_level] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"staking.sol\":1891:1938  userLevelDeposit[_msgSender][_level].unlockTime */\n      0x02\n      add\n        /* \"staking.sol\":1891:1987  userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"staking.sol\":2003:2040  Deposit (_msgSender, _level, _amount) */\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"staking.sol\":2012:2022  _msgSender */\n      dup2\n        /* \"staking.sol\":2024:2030  _level */\n      dup4\n        /* \"staking.sol\":2032:2039  _amount */\n      dup6\n        /* \"staking.sol\":2003:2040  Deposit (_msgSender, _level, _amount) */\n      mload(0x40)\n      tag_148\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":1621:2047  {... */\n      pop\n        /* \"staking.sol\":1549:2047  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1269  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1259:1271  _msgSender() */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1253  owner */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1255  owner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_78\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2026:2027  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2014  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_158:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1677:1685  paused() */\n      tag_161\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1677:1683  paused */\n      tag_31\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1677:1685  paused() */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2178:2183  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2175  _paused */\n      dup1\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2183  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n      tag_166\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2217  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_167\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2368  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2387:2395  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2384  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2441:2449  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2431:2439  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1412:1420  paused() */\n      tag_170\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1412:1418  paused */\n      tag_31\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1412:1420  paused() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_137\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1932:1936  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1929  _paused */\n      0x00\n      0x14\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1968  _msgSender */\n      tag_74\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      mload(0x40)\n      tag_175\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_177:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_179\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_180\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:289   */\n    tag_181:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":237:243   */\n      dup2\n        /* \"#utility.yul\":231:244   */\n      mload\n        /* \"#utility.yul\":222:244   */\n      swap1\n      pop\n        /* \"#utility.yul\":253:283   */\n      tag_183\n        /* \"#utility.yul\":277:282   */\n      dup2\n        /* \"#utility.yul\":253:283   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":152:289   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":295:434   */\n    tag_185:\n        /* \"#utility.yul\":341:346   */\n      0x00\n        /* \"#utility.yul\":379:385   */\n      dup2\n        /* \"#utility.yul\":366:386   */\n      calldataload\n        /* \"#utility.yul\":357:386   */\n      swap1\n      pop\n        /* \"#utility.yul\":395:428   */\n      tag_187\n        /* \"#utility.yul\":422:427   */\n      dup2\n        /* \"#utility.yul\":395:428   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":295:434   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":440:769   */\n    tag_56:\n        /* \"#utility.yul\":499:505   */\n      0x00\n        /* \"#utility.yul\":548:550   */\n      0x20\n        /* \"#utility.yul\":536:545   */\n      dup3\n        /* \"#utility.yul\":527:534   */\n      dup5\n        /* \"#utility.yul\":523:546   */\n      sub\n        /* \"#utility.yul\":519:551   */\n      slt\n        /* \"#utility.yul\":516:635   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":554:633   */\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":516:635   */\n    tag_190:\n        /* \"#utility.yul\":674:675   */\n      0x00\n        /* \"#utility.yul\":699:752   */\n      tag_193\n        /* \"#utility.yul\":744:751   */\n      dup5\n        /* \"#utility.yul\":735:741   */\n      dup3\n        /* \"#utility.yul\":724:733   */\n      dup6\n        /* \"#utility.yul\":720:742   */\n      add\n        /* \"#utility.yul\":699:752   */\n      tag_177\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":689:752   */\n      swap2\n      pop\n        /* \"#utility.yul\":645:762   */\n      pop\n        /* \"#utility.yul\":440:769   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":775:1249   */\n    tag_47:\n        /* \"#utility.yul\":843:849   */\n      0x00\n        /* \"#utility.yul\":851:857   */\n      dup1\n        /* \"#utility.yul\":900:902   */\n      0x40\n        /* \"#utility.yul\":888:897   */\n      dup4\n        /* \"#utility.yul\":879:886   */\n      dup6\n        /* \"#utility.yul\":875:898   */\n      sub\n        /* \"#utility.yul\":871:903   */\n      slt\n        /* \"#utility.yul\":868:987   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":906:985   */\n      tag_196\n      tag_192\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":868:987   */\n    tag_195:\n        /* \"#utility.yul\":1026:1027   */\n      0x00\n        /* \"#utility.yul\":1051:1104   */\n      tag_197\n        /* \"#utility.yul\":1096:1103   */\n      dup6\n        /* \"#utility.yul\":1087:1093   */\n      dup3\n        /* \"#utility.yul\":1076:1085   */\n      dup7\n        /* \"#utility.yul\":1072:1094   */\n      add\n        /* \"#utility.yul\":1051:1104   */\n      tag_177\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":1041:1104   */\n      swap3\n      pop\n        /* \"#utility.yul\":997:1114   */\n      pop\n        /* \"#utility.yul\":1153:1155   */\n      0x20\n        /* \"#utility.yul\":1179:1232   */\n      tag_198\n        /* \"#utility.yul\":1224:1231   */\n      dup6\n        /* \"#utility.yul\":1215:1221   */\n      dup3\n        /* \"#utility.yul\":1204:1213   */\n      dup7\n        /* \"#utility.yul\":1200:1222   */\n      add\n        /* \"#utility.yul\":1179:1232   */\n      tag_185\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":1169:1232   */\n      swap2\n      pop\n        /* \"#utility.yul\":1124:1242   */\n      pop\n        /* \"#utility.yul\":775:1249   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1255:1600   */\n    tag_69:\n        /* \"#utility.yul\":1322:1328   */\n      0x00\n        /* \"#utility.yul\":1371:1373   */\n      0x20\n        /* \"#utility.yul\":1359:1368   */\n      dup3\n        /* \"#utility.yul\":1350:1357   */\n      dup5\n        /* \"#utility.yul\":1346:1369   */\n      sub\n        /* \"#utility.yul\":1342:1374   */\n      slt\n        /* \"#utility.yul\":1339:1458   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":1377:1456   */\n      tag_201\n      tag_192\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1339:1458   */\n    tag_200:\n        /* \"#utility.yul\":1497:1498   */\n      0x00\n        /* \"#utility.yul\":1522:1583   */\n      tag_202\n        /* \"#utility.yul\":1575:1582   */\n      dup5\n        /* \"#utility.yul\":1566:1572   */\n      dup3\n        /* \"#utility.yul\":1555:1564   */\n      dup6\n        /* \"#utility.yul\":1551:1573   */\n      add\n        /* \"#utility.yul\":1522:1583   */\n      tag_181\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1512:1583   */\n      swap2\n      pop\n        /* \"#utility.yul\":1468:1593   */\n      pop\n        /* \"#utility.yul\":1255:1600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1606:1935   */\n    tag_18:\n        /* \"#utility.yul\":1665:1671   */\n      0x00\n        /* \"#utility.yul\":1714:1716   */\n      0x20\n        /* \"#utility.yul\":1702:1711   */\n      dup3\n        /* \"#utility.yul\":1693:1700   */\n      dup5\n        /* \"#utility.yul\":1689:1712   */\n      sub\n        /* \"#utility.yul\":1685:1717   */\n      slt\n        /* \"#utility.yul\":1682:1801   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":1720:1799   */\n      tag_205\n      tag_192\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1682:1801   */\n    tag_204:\n        /* \"#utility.yul\":1840:1841   */\n      0x00\n        /* \"#utility.yul\":1865:1918   */\n      tag_206\n        /* \"#utility.yul\":1910:1917   */\n      dup5\n        /* \"#utility.yul\":1901:1907   */\n      dup3\n        /* \"#utility.yul\":1890:1899   */\n      dup6\n        /* \"#utility.yul\":1886:1908   */\n      add\n        /* \"#utility.yul\":1865:1918   */\n      tag_185\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":1855:1918   */\n      swap2\n      pop\n        /* \"#utility.yul\":1811:1928   */\n      pop\n        /* \"#utility.yul\":1606:1935   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1941:2415   */\n    tag_24:\n        /* \"#utility.yul\":2009:2015   */\n      0x00\n        /* \"#utility.yul\":2017:2023   */\n      dup1\n        /* \"#utility.yul\":2066:2068   */\n      0x40\n        /* \"#utility.yul\":2054:2063   */\n      dup4\n        /* \"#utility.yul\":2045:2052   */\n      dup6\n        /* \"#utility.yul\":2041:2064   */\n      sub\n        /* \"#utility.yul\":2037:2069   */\n      slt\n        /* \"#utility.yul\":2034:2153   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":2072:2151   */\n      tag_209\n      tag_192\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":2034:2153   */\n    tag_208:\n        /* \"#utility.yul\":2192:2193   */\n      0x00\n        /* \"#utility.yul\":2217:2270   */\n      tag_210\n        /* \"#utility.yul\":2262:2269   */\n      dup6\n        /* \"#utility.yul\":2253:2259   */\n      dup3\n        /* \"#utility.yul\":2242:2251   */\n      dup7\n        /* \"#utility.yul\":2238:2260   */\n      add\n        /* \"#utility.yul\":2217:2270   */\n      tag_185\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":2207:2270   */\n      swap3\n      pop\n        /* \"#utility.yul\":2163:2280   */\n      pop\n        /* \"#utility.yul\":2319:2321   */\n      0x20\n        /* \"#utility.yul\":2345:2398   */\n      tag_211\n        /* \"#utility.yul\":2390:2397   */\n      dup6\n        /* \"#utility.yul\":2381:2387   */\n      dup3\n        /* \"#utility.yul\":2370:2379   */\n      dup7\n        /* \"#utility.yul\":2366:2388   */\n      add\n        /* \"#utility.yul\":2345:2398   */\n      tag_185\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2335:2398   */\n      swap2\n      pop\n        /* \"#utility.yul\":2290:2408   */\n      pop\n        /* \"#utility.yul\":1941:2415   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2421:2539   */\n    tag_212:\n        /* \"#utility.yul\":2508:2532   */\n      tag_214\n        /* \"#utility.yul\":2526:2531   */\n      dup2\n        /* \"#utility.yul\":2508:2532   */\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2503:2506   */\n      dup3\n        /* \"#utility.yul\":2496:2533   */\n      mstore\n        /* \"#utility.yul\":2421:2539   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2545:2654   */\n    tag_216:\n        /* \"#utility.yul\":2626:2647   */\n      tag_218\n        /* \"#utility.yul\":2641:2646   */\n      dup2\n        /* \"#utility.yul\":2626:2647   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2621:2624   */\n      dup3\n        /* \"#utility.yul\":2614:2648   */\n      mstore\n        /* \"#utility.yul\":2545:2654   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2660:2819   */\n    tag_220:\n        /* \"#utility.yul\":2761:2812   */\n      tag_222\n        /* \"#utility.yul\":2806:2811   */\n      dup2\n        /* \"#utility.yul\":2761:2812   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":2756:2759   */\n      dup3\n        /* \"#utility.yul\":2749:2813   */\n      mstore\n        /* \"#utility.yul\":2660:2819   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2825:2972   */\n    tag_224:\n        /* \"#utility.yul\":2920:2965   */\n      tag_226\n        /* \"#utility.yul\":2959:2964   */\n      dup2\n        /* \"#utility.yul\":2920:2965   */\n      tag_227\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2915:2918   */\n      dup3\n        /* \"#utility.yul\":2908:2966   */\n      mstore\n        /* \"#utility.yul\":2825:2972   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2978:3344   */\n    tag_228:\n        /* \"#utility.yul\":3120:3123   */\n      0x00\n        /* \"#utility.yul\":3141:3208   */\n      tag_230\n        /* \"#utility.yul\":3205:3207   */\n      0x14\n        /* \"#utility.yul\":3200:3203   */\n      dup4\n        /* \"#utility.yul\":3141:3208   */\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":3134:3208   */\n      swap2\n      pop\n        /* \"#utility.yul\":3217:3310   */\n      tag_232\n        /* \"#utility.yul\":3306:3309   */\n      dup3\n        /* \"#utility.yul\":3217:3310   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3335:3337   */\n      0x20\n        /* \"#utility.yul\":3330:3333   */\n      dup3\n        /* \"#utility.yul\":3326:3338   */\n      add\n        /* \"#utility.yul\":3319:3338   */\n      swap1\n      pop\n        /* \"#utility.yul\":2978:3344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3350:3716   */\n    tag_234:\n        /* \"#utility.yul\":3492:3495   */\n      0x00\n        /* \"#utility.yul\":3513:3580   */\n      tag_236\n        /* \"#utility.yul\":3577:3579   */\n      0x26\n        /* \"#utility.yul\":3572:3575   */\n      dup4\n        /* \"#utility.yul\":3513:3580   */\n      tag_231\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3506:3580   */\n      swap2\n      pop\n        /* \"#utility.yul\":3589:3682   */\n      tag_237\n        /* \"#utility.yul\":3678:3681   */\n      dup3\n        /* \"#utility.yul\":3589:3682   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3707:3709   */\n      0x40\n        /* \"#utility.yul\":3702:3705   */\n      dup3\n        /* \"#utility.yul\":3698:3710   */\n      add\n        /* \"#utility.yul\":3691:3710   */\n      swap1\n      pop\n        /* \"#utility.yul\":3350:3716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3722:4088   */\n    tag_239:\n        /* \"#utility.yul\":3864:3867   */\n      0x00\n        /* \"#utility.yul\":3885:3952   */\n      tag_241\n        /* \"#utility.yul\":3949:3951   */\n      0x18\n        /* \"#utility.yul\":3944:3947   */\n      dup4\n        /* \"#utility.yul\":3885:3952   */\n      tag_231\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":3878:3952   */\n      swap2\n      pop\n        /* \"#utility.yul\":3961:4054   */\n      tag_242\n        /* \"#utility.yul\":4050:4053   */\n      dup3\n        /* \"#utility.yul\":3961:4054   */\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":4079:4081   */\n      0x20\n        /* \"#utility.yul\":4074:4077   */\n      dup3\n        /* \"#utility.yul\":4070:4082   */\n      add\n        /* \"#utility.yul\":4063:4082   */\n      swap1\n      pop\n        /* \"#utility.yul\":3722:4088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4094:4460   */\n    tag_244:\n        /* \"#utility.yul\":4236:4239   */\n      0x00\n        /* \"#utility.yul\":4257:4324   */\n      tag_246\n        /* \"#utility.yul\":4321:4323   */\n      0x10\n        /* \"#utility.yul\":4316:4319   */\n      dup4\n        /* \"#utility.yul\":4257:4324   */\n      tag_231\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4250:4324   */\n      swap2\n      pop\n        /* \"#utility.yul\":4333:4426   */\n      tag_247\n        /* \"#utility.yul\":4422:4425   */\n      dup3\n        /* \"#utility.yul\":4333:4426   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4451:4453   */\n      0x20\n        /* \"#utility.yul\":4446:4449   */\n      dup3\n        /* \"#utility.yul\":4442:4454   */\n      add\n        /* \"#utility.yul\":4435:4454   */\n      swap1\n      pop\n        /* \"#utility.yul\":4094:4460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4466:4832   */\n    tag_249:\n        /* \"#utility.yul\":4608:4611   */\n      0x00\n        /* \"#utility.yul\":4629:4696   */\n      tag_251\n        /* \"#utility.yul\":4693:4695   */\n      0x20\n        /* \"#utility.yul\":4688:4691   */\n      dup4\n        /* \"#utility.yul\":4629:4696   */\n      tag_231\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":4622:4696   */\n      swap2\n      pop\n        /* \"#utility.yul\":4705:4798   */\n      tag_252\n        /* \"#utility.yul\":4794:4797   */\n      dup3\n        /* \"#utility.yul\":4705:4798   */\n      tag_253\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":4823:4825   */\n      0x20\n        /* \"#utility.yul\":4818:4821   */\n      dup3\n        /* \"#utility.yul\":4814:4826   */\n      add\n        /* \"#utility.yul\":4807:4826   */\n      swap1\n      pop\n        /* \"#utility.yul\":4466:4832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4838:5204   */\n    tag_254:\n        /* \"#utility.yul\":4980:4983   */\n      0x00\n        /* \"#utility.yul\":5001:5068   */\n      tag_256\n        /* \"#utility.yul\":5065:5067   */\n      0x11\n        /* \"#utility.yul\":5060:5063   */\n      dup4\n        /* \"#utility.yul\":5001:5068   */\n      tag_231\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":4994:5068   */\n      swap2\n      pop\n        /* \"#utility.yul\":5077:5170   */\n      tag_257\n        /* \"#utility.yul\":5166:5169   */\n      dup3\n        /* \"#utility.yul\":5077:5170   */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5195:5197   */\n      0x20\n        /* \"#utility.yul\":5190:5193   */\n      dup3\n        /* \"#utility.yul\":5186:5198   */\n      add\n        /* \"#utility.yul\":5179:5198   */\n      swap1\n      pop\n        /* \"#utility.yul\":4838:5204   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5210:5576   */\n    tag_259:\n        /* \"#utility.yul\":5352:5355   */\n      0x00\n        /* \"#utility.yul\":5373:5440   */\n      tag_261\n        /* \"#utility.yul\":5437:5439   */\n      0x12\n        /* \"#utility.yul\":5432:5435   */\n      dup4\n        /* \"#utility.yul\":5373:5440   */\n      tag_231\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":5366:5440   */\n      swap2\n      pop\n        /* \"#utility.yul\":5449:5542   */\n      tag_262\n        /* \"#utility.yul\":5538:5541   */\n      dup3\n        /* \"#utility.yul\":5449:5542   */\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":5567:5569   */\n      0x20\n        /* \"#utility.yul\":5562:5565   */\n      dup3\n        /* \"#utility.yul\":5558:5570   */\n      add\n        /* \"#utility.yul\":5551:5570   */\n      swap1\n      pop\n        /* \"#utility.yul\":5210:5576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5582:5700   */\n    tag_264:\n        /* \"#utility.yul\":5669:5693   */\n      tag_266\n        /* \"#utility.yul\":5687:5692   */\n      dup2\n        /* \"#utility.yul\":5669:5693   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":5664:5667   */\n      dup3\n        /* \"#utility.yul\":5657:5694   */\n      mstore\n        /* \"#utility.yul\":5582:5700   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5706:5928   */\n    tag_41:\n        /* \"#utility.yul\":5799:5803   */\n      0x00\n        /* \"#utility.yul\":5837:5839   */\n      0x20\n        /* \"#utility.yul\":5826:5835   */\n      dup3\n        /* \"#utility.yul\":5822:5840   */\n      add\n        /* \"#utility.yul\":5814:5840   */\n      swap1\n      pop\n        /* \"#utility.yul\":5850:5921   */\n      tag_269\n        /* \"#utility.yul\":5918:5919   */\n      0x00\n        /* \"#utility.yul\":5907:5916   */\n      dup4\n        /* \"#utility.yul\":5903:5920   */\n      add\n        /* \"#utility.yul\":5894:5900   */\n      dup5\n        /* \"#utility.yul\":5850:5921   */\n      tag_212\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":5706:5928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5934:6376   */\n    tag_140:\n        /* \"#utility.yul\":6083:6087   */\n      0x00\n        /* \"#utility.yul\":6121:6123   */\n      0x60\n        /* \"#utility.yul\":6110:6119   */\n      dup3\n        /* \"#utility.yul\":6106:6124   */\n      add\n        /* \"#utility.yul\":6098:6124   */\n      swap1\n      pop\n        /* \"#utility.yul\":6134:6205   */\n      tag_271\n        /* \"#utility.yul\":6202:6203   */\n      0x00\n        /* \"#utility.yul\":6191:6200   */\n      dup4\n        /* \"#utility.yul\":6187:6204   */\n      add\n        /* \"#utility.yul\":6178:6184   */\n      dup7\n        /* \"#utility.yul\":6134:6205   */\n      tag_212\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":6215:6287   */\n      tag_272\n        /* \"#utility.yul\":6283:6285   */\n      0x20\n        /* \"#utility.yul\":6272:6281   */\n      dup4\n        /* \"#utility.yul\":6268:6286   */\n      add\n        /* \"#utility.yul\":6259:6265   */\n      dup6\n        /* \"#utility.yul\":6215:6287   */\n      tag_212\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":6297:6369   */\n      tag_273\n        /* \"#utility.yul\":6365:6367   */\n      0x40\n        /* \"#utility.yul\":6354:6363   */\n      dup4\n        /* \"#utility.yul\":6350:6368   */\n      add\n        /* \"#utility.yul\":6341:6347   */\n      dup5\n        /* \"#utility.yul\":6297:6369   */\n      tag_264\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":5934:6376   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6382:6840   */\n    tag_100:\n        /* \"#utility.yul\":6539:6543   */\n      0x00\n        /* \"#utility.yul\":6577:6579   */\n      0x60\n        /* \"#utility.yul\":6566:6575   */\n      dup3\n        /* \"#utility.yul\":6562:6580   */\n      add\n        /* \"#utility.yul\":6554:6580   */\n      swap1\n      pop\n        /* \"#utility.yul\":6590:6661   */\n      tag_275\n        /* \"#utility.yul\":6658:6659   */\n      0x00\n        /* \"#utility.yul\":6647:6656   */\n      dup4\n        /* \"#utility.yul\":6643:6660   */\n      add\n        /* \"#utility.yul\":6634:6640   */\n      dup7\n        /* \"#utility.yul\":6590:6661   */\n      tag_212\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":6671:6751   */\n      tag_276\n        /* \"#utility.yul\":6747:6749   */\n      0x20\n        /* \"#utility.yul\":6736:6745   */\n      dup4\n        /* \"#utility.yul\":6732:6750   */\n      add\n        /* \"#utility.yul\":6723:6729   */\n      dup6\n        /* \"#utility.yul\":6671:6751   */\n      tag_224\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":6761:6833   */\n      tag_277\n        /* \"#utility.yul\":6829:6831   */\n      0x40\n        /* \"#utility.yul\":6818:6827   */\n      dup4\n        /* \"#utility.yul\":6814:6832   */\n      add\n        /* \"#utility.yul\":6805:6811   */\n      dup5\n        /* \"#utility.yul\":6761:6833   */\n      tag_264\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":6382:6840   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6846:7178   */\n    tag_64:\n        /* \"#utility.yul\":6967:6971   */\n      0x00\n        /* \"#utility.yul\":7005:7007   */\n      0x40\n        /* \"#utility.yul\":6994:7003   */\n      dup3\n        /* \"#utility.yul\":6990:7008   */\n      add\n        /* \"#utility.yul\":6982:7008   */\n      swap1\n      pop\n        /* \"#utility.yul\":7018:7089   */\n      tag_279\n        /* \"#utility.yul\":7086:7087   */\n      0x00\n        /* \"#utility.yul\":7075:7084   */\n      dup4\n        /* \"#utility.yul\":7071:7088   */\n      add\n        /* \"#utility.yul\":7062:7068   */\n      dup6\n        /* \"#utility.yul\":7018:7089   */\n      tag_212\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":7099:7171   */\n      tag_280\n        /* \"#utility.yul\":7167:7169   */\n      0x20\n        /* \"#utility.yul\":7156:7165   */\n      dup4\n        /* \"#utility.yul\":7152:7170   */\n      add\n        /* \"#utility.yul\":7143:7149   */\n      dup5\n        /* \"#utility.yul\":7099:7171   */\n      tag_264\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":6846:7178   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7184:7626   */\n    tag_71:\n        /* \"#utility.yul\":7333:7337   */\n      0x00\n        /* \"#utility.yul\":7371:7373   */\n      0x60\n        /* \"#utility.yul\":7360:7369   */\n      dup3\n        /* \"#utility.yul\":7356:7374   */\n      add\n        /* \"#utility.yul\":7348:7374   */\n      swap1\n      pop\n        /* \"#utility.yul\":7384:7455   */\n      tag_282\n        /* \"#utility.yul\":7452:7453   */\n      0x00\n        /* \"#utility.yul\":7441:7450   */\n      dup4\n        /* \"#utility.yul\":7437:7454   */\n      add\n        /* \"#utility.yul\":7428:7434   */\n      dup7\n        /* \"#utility.yul\":7384:7455   */\n      tag_212\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":7465:7537   */\n      tag_283\n        /* \"#utility.yul\":7533:7535   */\n      0x20\n        /* \"#utility.yul\":7522:7531   */\n      dup4\n        /* \"#utility.yul\":7518:7536   */\n      add\n        /* \"#utility.yul\":7509:7515   */\n      dup6\n        /* \"#utility.yul\":7465:7537   */\n      tag_264\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":7547:7619   */\n      tag_284\n        /* \"#utility.yul\":7615:7617   */\n      0x40\n        /* \"#utility.yul\":7604:7613   */\n      dup4\n        /* \"#utility.yul\":7600:7618   */\n      add\n        /* \"#utility.yul\":7591:7597   */\n      dup5\n        /* \"#utility.yul\":7547:7619   */\n      tag_264\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":7184:7626   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7632:7842   */\n    tag_33:\n        /* \"#utility.yul\":7719:7723   */\n      0x00\n        /* \"#utility.yul\":7757:7759   */\n      0x20\n        /* \"#utility.yul\":7746:7755   */\n      dup3\n        /* \"#utility.yul\":7742:7760   */\n      add\n        /* \"#utility.yul\":7734:7760   */\n      swap1\n      pop\n        /* \"#utility.yul\":7770:7835   */\n      tag_286\n        /* \"#utility.yul\":7832:7833   */\n      0x00\n        /* \"#utility.yul\":7821:7830   */\n      dup4\n        /* \"#utility.yul\":7817:7834   */\n      add\n        /* \"#utility.yul\":7808:7814   */\n      dup5\n        /* \"#utility.yul\":7770:7835   */\n      tag_216\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":7632:7842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7848:8098   */\n    tag_29:\n        /* \"#utility.yul\":7955:7959   */\n      0x00\n        /* \"#utility.yul\":7993:7995   */\n      0x20\n        /* \"#utility.yul\":7982:7991   */\n      dup3\n        /* \"#utility.yul\":7978:7996   */\n      add\n        /* \"#utility.yul\":7970:7996   */\n      swap1\n      pop\n        /* \"#utility.yul\":8006:8091   */\n      tag_288\n        /* \"#utility.yul\":8088:8089   */\n      0x00\n        /* \"#utility.yul\":8077:8086   */\n      dup4\n        /* \"#utility.yul\":8073:8090   */\n      add\n        /* \"#utility.yul\":8064:8070   */\n      dup5\n        /* \"#utility.yul\":8006:8091   */\n      tag_220\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":7848:8098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8523   */\n    tag_164:\n        /* \"#utility.yul\":8270:8274   */\n      0x00\n        /* \"#utility.yul\":8308:8310   */\n      0x20\n        /* \"#utility.yul\":8297:8306   */\n      dup3\n        /* \"#utility.yul\":8293:8311   */\n      add\n        /* \"#utility.yul\":8285:8311   */\n      swap1\n      pop\n        /* \"#utility.yul\":8357:8366   */\n      dup2\n        /* \"#utility.yul\":8351:8355   */\n      dup2\n        /* \"#utility.yul\":8347:8367   */\n      sub\n        /* \"#utility.yul\":8343:8344   */\n      0x00\n        /* \"#utility.yul\":8332:8341   */\n      dup4\n        /* \"#utility.yul\":8328:8345   */\n      add\n        /* \"#utility.yul\":8321:8368   */\n      mstore\n        /* \"#utility.yul\":8385:8516   */\n      tag_290\n        /* \"#utility.yul\":8511:8515   */\n      dup2\n        /* \"#utility.yul\":8385:8516   */\n      tag_228\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":8377:8516   */\n      swap1\n      pop\n        /* \"#utility.yul\":8104:8523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8529:8948   */\n    tag_157:\n        /* \"#utility.yul\":8695:8699   */\n      0x00\n        /* \"#utility.yul\":8733:8735   */\n      0x20\n        /* \"#utility.yul\":8722:8731   */\n      dup3\n        /* \"#utility.yul\":8718:8736   */\n      add\n        /* \"#utility.yul\":8710:8736   */\n      swap1\n      pop\n        /* \"#utility.yul\":8782:8791   */\n      dup2\n        /* \"#utility.yul\":8776:8780   */\n      dup2\n        /* \"#utility.yul\":8772:8792   */\n      sub\n        /* \"#utility.yul\":8768:8769   */\n      0x00\n        /* \"#utility.yul\":8757:8766   */\n      dup4\n        /* \"#utility.yul\":8753:8770   */\n      add\n        /* \"#utility.yul\":8746:8793   */\n      mstore\n        /* \"#utility.yul\":8810:8941   */\n      tag_292\n        /* \"#utility.yul\":8936:8940   */\n      dup2\n        /* \"#utility.yul\":8810:8941   */\n      tag_234\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":8802:8941   */\n      swap1\n      pop\n        /* \"#utility.yul\":8529:8948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8954:9373   */\n    tag_88:\n        /* \"#utility.yul\":9120:9124   */\n      0x00\n        /* \"#utility.yul\":9158:9160   */\n      0x20\n        /* \"#utility.yul\":9147:9156   */\n      dup3\n        /* \"#utility.yul\":9143:9161   */\n      add\n        /* \"#utility.yul\":9135:9161   */\n      swap1\n      pop\n        /* \"#utility.yul\":9207:9216   */\n      dup2\n        /* \"#utility.yul\":9201:9205   */\n      dup2\n        /* \"#utility.yul\":9197:9217   */\n      sub\n        /* \"#utility.yul\":9193:9194   */\n      0x00\n        /* \"#utility.yul\":9182:9191   */\n      dup4\n        /* \"#utility.yul\":9178:9195   */\n      add\n        /* \"#utility.yul\":9171:9218   */\n      mstore\n        /* \"#utility.yul\":9235:9366   */\n      tag_294\n        /* \"#utility.yul\":9361:9365   */\n      dup2\n        /* \"#utility.yul\":9235:9366   */\n      tag_239\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":9227:9366   */\n      swap1\n      pop\n        /* \"#utility.yul\":8954:9373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9379:9798   */\n    tag_137:\n        /* \"#utility.yul\":9545:9549   */\n      0x00\n        /* \"#utility.yul\":9583:9585   */\n      0x20\n        /* \"#utility.yul\":9572:9581   */\n      dup3\n        /* \"#utility.yul\":9568:9586   */\n      add\n        /* \"#utility.yul\":9560:9586   */\n      swap1\n      pop\n        /* \"#utility.yul\":9632:9641   */\n      dup2\n        /* \"#utility.yul\":9626:9630   */\n      dup2\n        /* \"#utility.yul\":9622:9642   */\n      sub\n        /* \"#utility.yul\":9618:9619   */\n      0x00\n        /* \"#utility.yul\":9607:9616   */\n      dup4\n        /* \"#utility.yul\":9603:9620   */\n      add\n        /* \"#utility.yul\":9596:9643   */\n      mstore\n        /* \"#utility.yul\":9660:9791   */\n      tag_296\n        /* \"#utility.yul\":9786:9790   */\n      dup2\n        /* \"#utility.yul\":9660:9791   */\n      tag_244\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":9652:9791   */\n      swap1\n      pop\n        /* \"#utility.yul\":9379:9798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9804:10223   */\n    tag_78:\n        /* \"#utility.yul\":9970:9974   */\n      0x00\n        /* \"#utility.yul\":10008:10010   */\n      0x20\n        /* \"#utility.yul\":9997:10006   */\n      dup3\n        /* \"#utility.yul\":9993:10011   */\n      add\n        /* \"#utility.yul\":9985:10011   */\n      swap1\n      pop\n        /* \"#utility.yul\":10057:10066   */\n      dup2\n        /* \"#utility.yul\":10051:10055   */\n      dup2\n        /* \"#utility.yul\":10047:10067   */\n      sub\n        /* \"#utility.yul\":10043:10044   */\n      0x00\n        /* \"#utility.yul\":10032:10041   */\n      dup4\n        /* \"#utility.yul\":10028:10045   */\n      add\n        /* \"#utility.yul\":10021:10068   */\n      mstore\n        /* \"#utility.yul\":10085:10216   */\n      tag_298\n        /* \"#utility.yul\":10211:10215   */\n      dup2\n        /* \"#utility.yul\":10085:10216   */\n      tag_249\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":10077:10216   */\n      swap1\n      pop\n        /* \"#utility.yul\":9804:10223   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10229:10648   */\n    tag_61:\n        /* \"#utility.yul\":10395:10399   */\n      0x00\n        /* \"#utility.yul\":10433:10435   */\n      0x20\n        /* \"#utility.yul\":10422:10431   */\n      dup3\n        /* \"#utility.yul\":10418:10436   */\n      add\n        /* \"#utility.yul\":10410:10436   */\n      swap1\n      pop\n        /* \"#utility.yul\":10482:10491   */\n      dup2\n        /* \"#utility.yul\":10476:10480   */\n      dup2\n        /* \"#utility.yul\":10472:10492   */\n      sub\n        /* \"#utility.yul\":10468:10469   */\n      0x00\n        /* \"#utility.yul\":10457:10466   */\n      dup4\n        /* \"#utility.yul\":10453:10470   */\n      add\n        /* \"#utility.yul\":10446:10493   */\n      mstore\n        /* \"#utility.yul\":10510:10641   */\n      tag_300\n        /* \"#utility.yul\":10636:10640   */\n      dup2\n        /* \"#utility.yul\":10510:10641   */\n      tag_254\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":10502:10641   */\n      swap1\n      pop\n        /* \"#utility.yul\":10229:10648   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10654:11073   */\n    tag_85:\n        /* \"#utility.yul\":10820:10824   */\n      0x00\n        /* \"#utility.yul\":10858:10860   */\n      0x20\n        /* \"#utility.yul\":10847:10856   */\n      dup3\n        /* \"#utility.yul\":10843:10861   */\n      add\n        /* \"#utility.yul\":10835:10861   */\n      swap1\n      pop\n        /* \"#utility.yul\":10907:10916   */\n      dup2\n        /* \"#utility.yul\":10901:10905   */\n      dup2\n        /* \"#utility.yul\":10897:10917   */\n      sub\n        /* \"#utility.yul\":10893:10894   */\n      0x00\n        /* \"#utility.yul\":10882:10891   */\n      dup4\n        /* \"#utility.yul\":10878:10895   */\n      add\n        /* \"#utility.yul\":10871:10918   */\n      mstore\n        /* \"#utility.yul\":10935:11066   */\n      tag_302\n        /* \"#utility.yul\":11061:11065   */\n      dup2\n        /* \"#utility.yul\":10935:11066   */\n      tag_259\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10927:11066   */\n      swap1\n      pop\n        /* \"#utility.yul\":10654:11073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11079:11301   */\n    tag_50:\n        /* \"#utility.yul\":11172:11176   */\n      0x00\n        /* \"#utility.yul\":11210:11212   */\n      0x20\n        /* \"#utility.yul\":11199:11208   */\n      dup3\n        /* \"#utility.yul\":11195:11213   */\n      add\n        /* \"#utility.yul\":11187:11213   */\n      swap1\n      pop\n        /* \"#utility.yul\":11223:11294   */\n      tag_304\n        /* \"#utility.yul\":11291:11292   */\n      0x00\n        /* \"#utility.yul\":11280:11289   */\n      dup4\n        /* \"#utility.yul\":11276:11293   */\n      add\n        /* \"#utility.yul\":11267:11273   */\n      dup5\n        /* \"#utility.yul\":11223:11294   */\n      tag_264\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":11079:11301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11388:11557   */\n    tag_231:\n        /* \"#utility.yul\":11472:11483   */\n      0x00\n        /* \"#utility.yul\":11506:11512   */\n      dup3\n        /* \"#utility.yul\":11501:11504   */\n      dup3\n        /* \"#utility.yul\":11494:11513   */\n      mstore\n        /* \"#utility.yul\":11546:11550   */\n      0x20\n        /* \"#utility.yul\":11541:11544   */\n      dup3\n        /* \"#utility.yul\":11537:11551   */\n      add\n        /* \"#utility.yul\":11522:11551   */\n      swap1\n      pop\n        /* \"#utility.yul\":11388:11557   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11563:11868   */\n    tag_93:\n        /* \"#utility.yul\":11603:11606   */\n      0x00\n        /* \"#utility.yul\":11622:11642   */\n      tag_309\n        /* \"#utility.yul\":11640:11641   */\n      dup3\n        /* \"#utility.yul\":11622:11642   */\n      tag_267\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11617:11642   */\n      swap2\n      pop\n        /* \"#utility.yul\":11656:11676   */\n      tag_310\n        /* \"#utility.yul\":11674:11675   */\n      dup4\n        /* \"#utility.yul\":11656:11676   */\n      tag_267\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":11651:11676   */\n      swap3\n      pop\n        /* \"#utility.yul\":11810:11811   */\n      dup3\n        /* \"#utility.yul\":11742:11808   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11738:11812   */\n      sub\n        /* \"#utility.yul\":11735:11736   */\n      dup3\n        /* \"#utility.yul\":11732:11813   */\n      gt\n        /* \"#utility.yul\":11729:11836   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":11816:11834   */\n      tag_312\n      tag_313\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":11729:11836   */\n    tag_311:\n        /* \"#utility.yul\":11860:11861   */\n      dup3\n        /* \"#utility.yul\":11857:11858   */\n      dup3\n        /* \"#utility.yul\":11853:11862   */\n      add\n        /* \"#utility.yul\":11846:11862   */\n      swap1\n      pop\n        /* \"#utility.yul\":11563:11868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11874:12059   */\n    tag_130:\n        /* \"#utility.yul\":11914:11915   */\n      0x00\n        /* \"#utility.yul\":11931:11951   */\n      tag_315\n        /* \"#utility.yul\":11949:11950   */\n      dup3\n        /* \"#utility.yul\":11931:11951   */\n      tag_267\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":11926:11951   */\n      swap2\n      pop\n        /* \"#utility.yul\":11965:11985   */\n      tag_316\n        /* \"#utility.yul\":11983:11984   */\n      dup4\n        /* \"#utility.yul\":11965:11985   */\n      tag_267\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":11960:11985   */\n      swap3\n      pop\n        /* \"#utility.yul\":12004:12005   */\n      dup3\n        /* \"#utility.yul\":11994:12029   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":12009:12027   */\n      tag_318\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":11994:12029   */\n    tag_317:\n        /* \"#utility.yul\":12051:12052   */\n      dup3\n        /* \"#utility.yul\":12048:12049   */\n      dup3\n        /* \"#utility.yul\":12044:12053   */\n      div\n        /* \"#utility.yul\":12039:12053   */\n      swap1\n      pop\n        /* \"#utility.yul\":11874:12059   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12065:12413   */\n    tag_128:\n        /* \"#utility.yul\":12105:12112   */\n      0x00\n        /* \"#utility.yul\":12128:12148   */\n      tag_321\n        /* \"#utility.yul\":12146:12147   */\n      dup3\n        /* \"#utility.yul\":12128:12148   */\n      tag_267\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":12123:12148   */\n      swap2\n      pop\n        /* \"#utility.yul\":12162:12182   */\n      tag_322\n        /* \"#utility.yul\":12180:12181   */\n      dup4\n        /* \"#utility.yul\":12162:12182   */\n      tag_267\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":12157:12182   */\n      swap3\n      pop\n        /* \"#utility.yul\":12350:12351   */\n      dup2\n        /* \"#utility.yul\":12282:12348   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12278:12352   */\n      div\n        /* \"#utility.yul\":12275:12276   */\n      dup4\n        /* \"#utility.yul\":12272:12353   */\n      gt\n        /* \"#utility.yul\":12267:12268   */\n      dup3\n        /* \"#utility.yul\":12260:12269   */\n      iszero\n        /* \"#utility.yul\":12253:12270   */\n      iszero\n        /* \"#utility.yul\":12249:12354   */\n      and\n        /* \"#utility.yul\":12246:12377   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":12357:12375   */\n      tag_324\n      tag_313\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":12246:12377   */\n    tag_323:\n        /* \"#utility.yul\":12405:12406   */\n      dup3\n        /* \"#utility.yul\":12402:12403   */\n      dup3\n        /* \"#utility.yul\":12398:12407   */\n      mul\n        /* \"#utility.yul\":12387:12407   */\n      swap1\n      pop\n        /* \"#utility.yul\":12065:12413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12419:12610   */\n    tag_91:\n        /* \"#utility.yul\":12459:12463   */\n      0x00\n        /* \"#utility.yul\":12479:12499   */\n      tag_326\n        /* \"#utility.yul\":12497:12498   */\n      dup3\n        /* \"#utility.yul\":12479:12499   */\n      tag_267\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":12474:12499   */\n      swap2\n      pop\n        /* \"#utility.yul\":12513:12533   */\n      tag_327\n        /* \"#utility.yul\":12531:12532   */\n      dup4\n        /* \"#utility.yul\":12513:12533   */\n      tag_267\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":12508:12533   */\n      swap3\n      pop\n        /* \"#utility.yul\":12552:12553   */\n      dup3\n        /* \"#utility.yul\":12549:12550   */\n      dup3\n        /* \"#utility.yul\":12546:12554   */\n      lt\n        /* \"#utility.yul\":12543:12577   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":12557:12575   */\n      tag_329\n      tag_313\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":12543:12577   */\n    tag_328:\n        /* \"#utility.yul\":12602:12603   */\n      dup3\n        /* \"#utility.yul\":12599:12600   */\n      dup3\n        /* \"#utility.yul\":12595:12604   */\n      sub\n        /* \"#utility.yul\":12587:12604   */\n      swap1\n      pop\n        /* \"#utility.yul\":12419:12610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12616:12712   */\n    tag_215:\n        /* \"#utility.yul\":12653:12660   */\n      0x00\n        /* \"#utility.yul\":12682:12706   */\n      tag_331\n        /* \"#utility.yul\":12700:12705   */\n      dup3\n        /* \"#utility.yul\":12682:12706   */\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":12671:12706   */\n      swap1\n      pop\n        /* \"#utility.yul\":12616:12712   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12718:12808   */\n    tag_219:\n        /* \"#utility.yul\":12752:12759   */\n      0x00\n        /* \"#utility.yul\":12795:12800   */\n      dup2\n        /* \"#utility.yul\":12788:12801   */\n      iszero\n        /* \"#utility.yul\":12781:12802   */\n      iszero\n        /* \"#utility.yul\":12770:12802   */\n      swap1\n      pop\n        /* \"#utility.yul\":12718:12808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12814:12940   */\n    tag_332:\n        /* \"#utility.yul\":12851:12858   */\n      0x00\n        /* \"#utility.yul\":12891:12933   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12884:12889   */\n      dup3\n        /* \"#utility.yul\":12880:12934   */\n      and\n        /* \"#utility.yul\":12869:12934   */\n      swap1\n      pop\n        /* \"#utility.yul\":12814:12940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12946:13023   */\n    tag_267:\n        /* \"#utility.yul\":12983:12990   */\n      0x00\n        /* \"#utility.yul\":13012:13017   */\n      dup2\n        /* \"#utility.yul\":13001:13017   */\n      swap1\n      pop\n        /* \"#utility.yul\":12946:13023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13029:13169   */\n    tag_223:\n        /* \"#utility.yul\":13093:13102   */\n      0x00\n        /* \"#utility.yul\":13126:13163   */\n      tag_337\n        /* \"#utility.yul\":13157:13162   */\n      dup3\n        /* \"#utility.yul\":13126:13163   */\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13113:13163   */\n      swap1\n      pop\n        /* \"#utility.yul\":13029:13169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13175:13296   */\n    tag_227:\n        /* \"#utility.yul\":13233:13242   */\n      0x00\n        /* \"#utility.yul\":13266:13290   */\n      tag_340\n        /* \"#utility.yul\":13284:13289   */\n      dup3\n        /* \"#utility.yul\":13266:13290   */\n      tag_267\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":13253:13290   */\n      swap1\n      pop\n        /* \"#utility.yul\":13175:13296   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13302:13428   */\n    tag_338:\n        /* \"#utility.yul\":13352:13361   */\n      0x00\n        /* \"#utility.yul\":13385:13422   */\n      tag_342\n        /* \"#utility.yul\":13416:13421   */\n      dup3\n        /* \"#utility.yul\":13385:13422   */\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":13372:13422   */\n      swap1\n      pop\n        /* \"#utility.yul\":13302:13428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13434:13547   */\n    tag_343:\n        /* \"#utility.yul\":13484:13493   */\n      0x00\n        /* \"#utility.yul\":13517:13541   */\n      tag_345\n        /* \"#utility.yul\":13535:13540   */\n      dup3\n        /* \"#utility.yul\":13517:13541   */\n      tag_332\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":13504:13541   */\n      swap1\n      pop\n        /* \"#utility.yul\":13434:13547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13553:13733   */\n    tag_313:\n        /* \"#utility.yul\":13601:13678   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13598:13599   */\n      0x00\n        /* \"#utility.yul\":13591:13679   */\n      mstore\n        /* \"#utility.yul\":13698:13702   */\n      0x11\n        /* \"#utility.yul\":13695:13696   */\n      0x04\n        /* \"#utility.yul\":13688:13703   */\n      mstore\n        /* \"#utility.yul\":13722:13726   */\n      0x24\n        /* \"#utility.yul\":13719:13720   */\n      0x00\n        /* \"#utility.yul\":13712:13727   */\n      revert\n        /* \"#utility.yul\":13739:13919   */\n    tag_319:\n        /* \"#utility.yul\":13787:13864   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13784:13785   */\n      0x00\n        /* \"#utility.yul\":13777:13865   */\n      mstore\n        /* \"#utility.yul\":13884:13888   */\n      0x12\n        /* \"#utility.yul\":13881:13882   */\n      0x04\n        /* \"#utility.yul\":13874:13889   */\n      mstore\n        /* \"#utility.yul\":13908:13912   */\n      0x24\n        /* \"#utility.yul\":13905:13906   */\n      0x00\n        /* \"#utility.yul\":13898:13913   */\n      revert\n        /* \"#utility.yul\":14048:14165   */\n    tag_192:\n        /* \"#utility.yul\":14157:14158   */\n      0x00\n        /* \"#utility.yul\":14154:14155   */\n      dup1\n        /* \"#utility.yul\":14147:14159   */\n      revert\n        /* \"#utility.yul\":14171:14341   */\n    tag_233:\n        /* \"#utility.yul\":14311:14333   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":14307:14308   */\n      0x00\n        /* \"#utility.yul\":14299:14305   */\n      dup3\n        /* \"#utility.yul\":14295:14309   */\n      add\n        /* \"#utility.yul\":14288:14334   */\n      mstore\n        /* \"#utility.yul\":14171:14341   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14347:14572   */\n    tag_238:\n        /* \"#utility.yul\":14487:14521   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":14483:14484   */\n      0x00\n        /* \"#utility.yul\":14475:14481   */\n      dup3\n        /* \"#utility.yul\":14471:14485   */\n      add\n        /* \"#utility.yul\":14464:14522   */\n      mstore\n        /* \"#utility.yul\":14556:14564   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14551:14553   */\n      0x20\n        /* \"#utility.yul\":14543:14549   */\n      dup3\n        /* \"#utility.yul\":14539:14554   */\n      add\n        /* \"#utility.yul\":14532:14565   */\n      mstore\n        /* \"#utility.yul\":14347:14572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14578:14752   */\n    tag_243:\n        /* \"#utility.yul\":14718:14744   */\n      0x4465706f736974206e6f7420756e6c6f636b6564207965740000000000000000\n        /* \"#utility.yul\":14714:14715   */\n      0x00\n        /* \"#utility.yul\":14706:14712   */\n      dup3\n        /* \"#utility.yul\":14702:14716   */\n      add\n        /* \"#utility.yul\":14695:14745   */\n      mstore\n        /* \"#utility.yul\":14578:14752   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14758:14924   */\n    tag_248:\n        /* \"#utility.yul\":14898:14916   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":14894:14895   */\n      0x00\n        /* \"#utility.yul\":14886:14892   */\n      dup3\n        /* \"#utility.yul\":14882:14896   */\n      add\n        /* \"#utility.yul\":14875:14917   */\n      mstore\n        /* \"#utility.yul\":14758:14924   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14930:15112   */\n    tag_253:\n        /* \"#utility.yul\":15070:15104   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":15066:15067   */\n      0x00\n        /* \"#utility.yul\":15058:15064   */\n      dup3\n        /* \"#utility.yul\":15054:15068   */\n      add\n        /* \"#utility.yul\":15047:15105   */\n      mstore\n        /* \"#utility.yul\":14930:15112   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15118:15285   */\n    tag_258:\n        /* \"#utility.yul\":15258:15277   */\n      0x4e6f20616374697665206465706f736974000000000000000000000000000000\n        /* \"#utility.yul\":15254:15255   */\n      0x00\n        /* \"#utility.yul\":15246:15252   */\n      dup3\n        /* \"#utility.yul\":15242:15256   */\n      add\n        /* \"#utility.yul\":15235:15278   */\n      mstore\n        /* \"#utility.yul\":15118:15285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15291:15459   */\n    tag_263:\n        /* \"#utility.yul\":15431:15451   */\n      0x4e6f7420656e6f756768206465706f7369740000000000000000000000000000\n        /* \"#utility.yul\":15427:15428   */\n      0x00\n        /* \"#utility.yul\":15419:15425   */\n      dup3\n        /* \"#utility.yul\":15415:15429   */\n      add\n        /* \"#utility.yul\":15408:15452   */\n      mstore\n        /* \"#utility.yul\":15291:15459   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15465:15587   */\n    tag_180:\n        /* \"#utility.yul\":15538:15562   */\n      tag_359\n        /* \"#utility.yul\":15556:15561   */\n      dup2\n        /* \"#utility.yul\":15538:15562   */\n      tag_215\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":15531:15536   */\n      dup2\n        /* \"#utility.yul\":15528:15563   */\n      eq\n        /* \"#utility.yul\":15518:15581   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":15577:15578   */\n      0x00\n        /* \"#utility.yul\":15574:15575   */\n      dup1\n        /* \"#utility.yul\":15567:15579   */\n      revert\n        /* \"#utility.yul\":15518:15581   */\n    tag_360:\n        /* \"#utility.yul\":15465:15587   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15593:15709   */\n    tag_184:\n        /* \"#utility.yul\":15663:15684   */\n      tag_362\n        /* \"#utility.yul\":15678:15683   */\n      dup2\n        /* \"#utility.yul\":15663:15684   */\n      tag_219\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":15656:15661   */\n      dup2\n        /* \"#utility.yul\":15653:15685   */\n      eq\n        /* \"#utility.yul\":15643:15703   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":15699:15700   */\n      0x00\n        /* \"#utility.yul\":15696:15697   */\n      dup1\n        /* \"#utility.yul\":15689:15701   */\n      revert\n        /* \"#utility.yul\":15643:15703   */\n    tag_363:\n        /* \"#utility.yul\":15593:15709   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15715:15837   */\n    tag_188:\n        /* \"#utility.yul\":15788:15812   */\n      tag_365\n        /* \"#utility.yul\":15806:15811   */\n      dup2\n        /* \"#utility.yul\":15788:15812   */\n      tag_267\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":15781:15786   */\n      dup2\n        /* \"#utility.yul\":15778:15813   */\n      eq\n        /* \"#utility.yul\":15768:15831   */\n      tag_366\n      jumpi\n        /* \"#utility.yul\":15827:15828   */\n      0x00\n        /* \"#utility.yul\":15824:15825   */\n      dup1\n        /* \"#utility.yul\":15817:15829   */\n      revert\n        /* \"#utility.yul\":15768:15831   */\n    tag_366:\n        /* \"#utility.yul\":15715:15837   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203462af7ffad9ea1fb2482d6b17b0a036d8241a00fd0ba8013a23ae69f8c76d4d64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_376": {
									"entryPoint": null,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": 185,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 193,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:5"
															},
															"nodeType": "YulIf",
															"src": "243:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:5",
														"type": ""
													}
												],
												"src": "156:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:5",
														"type": ""
													}
												],
												"src": "513:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:5",
														"type": ""
													}
												],
												"src": "594:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:5",
														"type": ""
													}
												],
												"src": "696:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:5"
															},
															"nodeType": "YulIf",
															"src": "1127:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:5",
														"type": ""
													}
												],
												"src": "1074:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162001ad738038062001ad783398181016040528101906200003791906200019c565b620000576200004b620000b960201b60201c565b620000c160201b60201c565b60008060146101000a81548160ff02191690831515021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000221565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050620001968162000207565b92915050565b600060208284031215620001b557620001b462000202565b5b6000620001c58482850162000185565b91505092915050565b6000620001db82620001e2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200021281620001ce565b81146200021e57600080fd5b50565b6118a680620002316000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638456cb59116100715780638456cb59146101415780638da5cb5b1461014b578063aa5f7e2614610169578063beb8314c14610185578063e2bbb158146101b5578063f2fde38b146101d1576100b4565b8063379607f5146100b95780633f4ba83a146100d5578063441a3e70146100df578063451c3d80146100fb5780635c975abb14610119578063715018a614610137575b600080fd5b6100d360048036038101906100ce9190611106565b6101ed565b005b6100dd610386565b005b6100f960048036038101906100f49190611133565b61040c565b005b6101036106b2565b60405161011091906113b7565b60405180910390f35b6101216106d8565b60405161012e919061139c565b60405180910390f35b61013f6106ee565b005b610149610776565b005b6101536107fc565b60405161016091906112b3565b60405180910390f35b610183600480360381019061017e9190611106565b610825565b005b61019f600480360381019061019a9190611099565b610978565b6040516101ac91906114b2565b60405180910390f35b6101cf60048036038101906101ca9190611133565b610a99565b005b6101eb60048036038101906101e6919061106c565b610d25565b005b60003390506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000015411610288576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161027f90611472565b60405180910390fd5b60006102948284610978565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b81526004016102f392919061133c565b602060405180830381600087803b15801561030d57600080fd5b505af1158015610321573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034591906110d9565b507f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf782848360405161037993929190611365565b60405180910390a1505050565b61038e610e1d565b73ffffffffffffffffffffffffffffffffffffffff166103ac6107fc565b73ffffffffffffffffffffffffffffffffffffffff1614610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f990611452565b60405180910390fd5b61040a610e25565b565b600033905082600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000015410156104a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049e90611492565b60405180910390fd5b42600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060020154111561053d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053490611412565b60405180910390fd5b60006105498284610978565b905083600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000160008282546105ae91906115bf565b92505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83838761060091906114de565b6040518363ffffffff1660e01b815260040161061d92919061133c565b602060405180830381600087803b15801561063757600080fd5b505af115801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f91906110d9565b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568826000866040516106a493929190611305565b60405180910390a150505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060149054906101000a900460ff16905090565b6106f6610e1d565b73ffffffffffffffffffffffffffffffffffffffff166107146107fc565b73ffffffffffffffffffffffffffffffffffffffff161461076a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076190611452565b60405180910390fd5b6107746000610ec6565b565b61077e610e1d565b73ffffffffffffffffffffffffffffffffffffffff1661079c6107fc565b73ffffffffffffffffffffffffffffffffffffffff16146107f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e990611452565b60405180910390fd5b6107fa610f8a565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60003390506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000154116108c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b790611472565b60405180910390fd5b60006108cc8284610978565b905080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858152602001908152602001600020600001600082825461093191906114de565b925050819055507f0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d18687382848360405161096b93929190611365565b60405180910390a1505050565b600080600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060010154426109da91906115bf565b90506000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000154905060006003600086815260200190815260200160002060000154905060006301e133806127108385610a659190611565565b610a6f9190611534565b610a799190611534565b905060008185610a899190611565565b9050809550505050505092915050565b610aa16106d8565b15610ae1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad890611432565b60405180910390fd5b6000339050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8230866040518463ffffffff1660e01b8152600401610b45939291906112ce565b602060405180830381600087803b158015610b5f57600080fd5b505af1158015610b73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9791906110d9565b5082600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000016000828254610bfb91906114de565b9250508190555042600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206001016000828254610c6591906114de565b92505081905550600360008381526020019081526020016000206001015442610c8e91906114de565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600201819055507f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15818385604051610d1893929190611365565b60405180910390a1505050565b610d2d610e1d565b73ffffffffffffffffffffffffffffffffffffffff16610d4b6107fc565b73ffffffffffffffffffffffffffffffffffffffff1614610da1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9890611452565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610e11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e08906113f2565b60405180910390fd5b610e1a81610ec6565b50565b600033905090565b610e2d6106d8565b610e6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e63906113d2565b60405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610eaf610e1d565b604051610ebc91906112b3565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610f926106d8565b15610fd2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fc990611432565b60405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611016610e1d565b60405161102391906112b3565b60405180910390a1565b60008135905061103c8161182b565b92915050565b60008151905061105181611842565b92915050565b60008135905061106681611859565b92915050565b600060208284031215611082576110816116e1565b5b60006110908482850161102d565b91505092915050565b600080604083850312156110b0576110af6116e1565b5b60006110be8582860161102d565b92505060206110cf85828601611057565b9150509250929050565b6000602082840312156110ef576110ee6116e1565b5b60006110fd84828501611042565b91505092915050565b60006020828403121561111c5761111b6116e1565b5b600061112a84828501611057565b91505092915050565b6000806040838503121561114a576111496116e1565b5b600061115885828601611057565b925050602061116985828601611057565b9150509250929050565b61117c816115f3565b82525050565b61118b81611605565b82525050565b61119a8161163b565b82525050565b6111a98161164d565b82525050565b60006111bc6014836114cd565b91506111c7826116e6565b602082019050919050565b60006111df6026836114cd565b91506111ea8261170f565b604082019050919050565b60006112026018836114cd565b915061120d8261175e565b602082019050919050565b60006112256010836114cd565b915061123082611787565b602082019050919050565b60006112486020836114cd565b9150611253826117b0565b602082019050919050565b600061126b6011836114cd565b9150611276826117d9565b602082019050919050565b600061128e6012836114cd565b915061129982611802565b602082019050919050565b6112ad81611631565b82525050565b60006020820190506112c86000830184611173565b92915050565b60006060820190506112e36000830186611173565b6112f06020830185611173565b6112fd60408301846112a4565b949350505050565b600060608201905061131a6000830186611173565b61132760208301856111a0565b61133460408301846112a4565b949350505050565b60006040820190506113516000830185611173565b61135e60208301846112a4565b9392505050565b600060608201905061137a6000830186611173565b61138760208301856112a4565b61139460408301846112a4565b949350505050565b60006020820190506113b16000830184611182565b92915050565b60006020820190506113cc6000830184611191565b92915050565b600060208201905081810360008301526113eb816111af565b9050919050565b6000602082019050818103600083015261140b816111d2565b9050919050565b6000602082019050818103600083015261142b816111f5565b9050919050565b6000602082019050818103600083015261144b81611218565b9050919050565b6000602082019050818103600083015261146b8161123b565b9050919050565b6000602082019050818103600083015261148b8161125e565b9050919050565b600060208201905081810360008301526114ab81611281565b9050919050565b60006020820190506114c760008301846112a4565b92915050565b600082825260208201905092915050565b60006114e982611631565b91506114f483611631565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561152957611528611683565b5b828201905092915050565b600061153f82611631565b915061154a83611631565b92508261155a576115596116b2565b5b828204905092915050565b600061157082611631565b915061157b83611631565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115b4576115b3611683565b5b828202905092915050565b60006115ca82611631565b91506115d583611631565b9250828210156115e8576115e7611683565b5b828203905092915050565b60006115fe82611611565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006116468261165f565b9050919050565b600061165882611631565b9050919050565b600061166a82611671565b9050919050565b600061167c82611611565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4465706f736974206e6f7420756e6c6f636b6564207965740000000000000000600082015250565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4e6f20616374697665206465706f736974000000000000000000000000000000600082015250565b7f4e6f7420656e6f756768206465706f7369740000000000000000000000000000600082015250565b611834816115f3565b811461183f57600080fd5b50565b61184b81611605565b811461185657600080fd5b50565b61186281611631565b811461186d57600080fd5b5056fea26469706673582212203462af7ffad9ea1fb2482d6b17b0a036d8241a00fd0ba8013a23ae69f8c76d4d64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1AD7 CODESIZE SUB DUP1 PUSH3 0x1AD7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x19C JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xB9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x221 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x196 DUP2 PUSH3 0x207 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x1B5 JUMPI PUSH3 0x1B4 PUSH3 0x202 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x1C5 DUP5 DUP3 DUP6 ADD PUSH3 0x185 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DB DUP3 PUSH3 0x1E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x212 DUP2 PUSH3 0x1CE JUMP JUMPDEST DUP2 EQ PUSH3 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x18A6 DUP1 PUSH3 0x231 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D1 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x379607F5 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x137 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x13B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x6EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH2 0x776 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST PUSH2 0xA99 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x294 DUP3 DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP3 SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x379 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0xE1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AC PUSH2 0x7FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40A PUSH2 0xE25 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP1 PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x534 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x549 DUP3 DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 DUP8 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61D SWAP3 SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0xE1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x714 PUSH2 0x7FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x761 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x774 PUSH1 0x0 PUSH2 0xEC6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x77E PUSH2 0xE1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x79C PUSH2 0x7FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FA PUSH2 0xF8A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8CC DUP3 DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x96B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH2 0x2710 DUP4 DUP6 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP6 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA1 PUSH2 0x6D8 JUMP JUMPDEST ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB45 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC65 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD18 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xD2D PUSH2 0xE1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD4B PUSH2 0x7FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE08 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE1A DUP2 PUSH2 0xEC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE2D PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE63 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xEAF PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF92 PUSH2 0x6D8 JUMP JUMPDEST ISZERO PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC9 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1016 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1023 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103C DUP2 PUSH2 0x182B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1051 DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1066 DUP2 PUSH2 0x1859 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1090 DUP5 DUP3 DUP6 ADD PUSH2 0x102D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B0 JUMPI PUSH2 0x10AF PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BE DUP6 DUP3 DUP7 ADD PUSH2 0x102D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10CF DUP6 DUP3 DUP7 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x10EE PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10FD DUP5 DUP3 DUP6 ADD PUSH2 0x1042 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111C JUMPI PUSH2 0x111B PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x112A DUP5 DUP3 DUP6 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114A JUMPI PUSH2 0x1149 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1158 DUP6 DUP3 DUP7 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1169 DUP6 DUP3 DUP7 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x117C DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x118B DUP2 PUSH2 0x1605 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x119A DUP2 PUSH2 0x163B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11A9 DUP2 PUSH2 0x164D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BC PUSH1 0x14 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x11C7 DUP3 PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DF PUSH1 0x26 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x11EA DUP3 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1202 PUSH1 0x18 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x120D DUP3 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1225 PUSH1 0x10 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1230 DUP3 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1248 PUSH1 0x20 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 DUP3 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126B PUSH1 0x11 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1276 DUP3 PUSH2 0x17D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128E PUSH1 0x12 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1299 DUP3 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AD DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12E3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x12F0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x12FD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x131A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x1327 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x1334 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1351 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x135E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x137A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x1387 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x1394 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1182 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13EB DUP2 PUSH2 0x11AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x140B DUP2 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x142B DUP2 PUSH2 0x11F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x144B DUP2 PUSH2 0x1218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x146B DUP2 PUSH2 0x123B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x148B DUP2 PUSH2 0x125E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14AB DUP2 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E9 DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F4 DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x1683 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153F DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP2 POP PUSH2 0x154A DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x16B2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1570 DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP2 POP PUSH2 0x157B DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x15B4 JUMPI PUSH2 0x15B3 PUSH2 0x1683 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CA DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D5 DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x15E8 JUMPI PUSH2 0x15E7 PUSH2 0x1683 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FE DUP3 PUSH2 0x1611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1646 DUP3 PUSH2 0x165F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1658 DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166A DUP3 PUSH2 0x1671 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167C DUP3 PUSH2 0x1611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665206465706F736974000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206465706F7369740000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1834 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x183F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x1605 JUMP JUMPDEST DUP2 EQ PUSH2 0x1856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1862 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP2 EQ PUSH2 0x186D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH3 0xAF7FFA 0xD9 0xEA 0x1F 0xB2 BASEFEE 0x2D PUSH12 0x17B0A036D8241A00FD0BA801 GASPRICE 0x23 0xAE PUSH10 0xF8C76D4D64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "224:3594:4:-:0;;;1052:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;991:5:1;981:7;;:15;;;;;;;;;;;;;;;;;;1114:6:4;1091:13;;:30;;;;;;;;;;;;;;;;;;1052:76;224:3594;;640:96:3;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7:143:5:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;224:3594:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_286": {
									"entryPoint": 3613,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_179": {
									"entryPoint": 3978,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 3782,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_195": {
									"entryPoint": 3621,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptedToken_308": {
									"entryPoint": 1714,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateRewards_675": {
									"entryPoint": 2424,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claim_572": {
									"entryPoint": 493,
									"id": 572,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@compound_617": {
									"entryPoint": 2085,
									"id": 617,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_460": {
									"entryPoint": 2713,
									"id": 460,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": 2044,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_385": {
									"entryPoint": 1910,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_140": {
									"entryPoint": 1752,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1774,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3365,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_394": {
									"entryPoint": 902,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_529": {
									"entryPoint": 1036,
									"id": 529,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$274_to_t_address_fromStack": {
									"entryPoint": 4497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4814,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4869,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4965,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5234,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5619,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5681,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$274_to_t_address": {
									"entryPoint": 5691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 5709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5763,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 5862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 5903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e": {
									"entryPoint": 6146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15840:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "237:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "231:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "277:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "253:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "253:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:5",
														"type": ""
													}
												],
												"src": "152:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "347:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "357:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "379:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "366:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "366:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "357:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "422:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "395:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "395:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "395:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "325:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "333:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "341:5:5",
														"type": ""
													}
												],
												"src": "295:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "506:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "552:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "554:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "554:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "554:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "527:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "536:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "523:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "523:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "548:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "519:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "519:32:5"
															},
															"nodeType": "YulIf",
															"src": "516:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "645:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "660:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "674:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "664:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "689:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "724:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "735:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "720:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "720:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "744:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "699:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "699:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "689:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "476:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "487:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "499:6:5",
														"type": ""
													}
												],
												"src": "440:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "858:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "904:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "906:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "906:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "906:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "879:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "888:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "875:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "875:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "900:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "871:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "871:32:5"
															},
															"nodeType": "YulIf",
															"src": "868:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "997:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1012:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1026:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1016:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1041:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1076:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1087:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1072:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1072:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1096:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1051:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1051:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1041:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1124:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1139:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1153:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1143:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1169:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1204:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1215:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1200:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1200:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1224:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1179:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1179:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1169:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "820:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "831:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "843:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "851:6:5",
														"type": ""
													}
												],
												"src": "775:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1329:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1375:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1377:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1377:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1377:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1350:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1359:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1371:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1342:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:32:5"
															},
															"nodeType": "YulIf",
															"src": "1339:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1468:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1483:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1497:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1487:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1512:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1555:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1566:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1551:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1551:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1575:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1522:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1522:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1512:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1299:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1310:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1322:6:5",
														"type": ""
													}
												],
												"src": "1255:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1718:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1720:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1720:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1720:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1693:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1702:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1714:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1685:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1685:32:5"
															},
															"nodeType": "YulIf",
															"src": "1682:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1811:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1826:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1840:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1830:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1855:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1890:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1901:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1886:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1886:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1910:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1865:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1865:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1855:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1642:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1653:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1665:6:5",
														"type": ""
													}
												],
												"src": "1606:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2024:391:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2070:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2072:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2072:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2072:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2045:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2054:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2041:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2037:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:32:5"
															},
															"nodeType": "YulIf",
															"src": "2034:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2163:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2178:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2192:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2182:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2207:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2242:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2253:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2238:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2238:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2262:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2217:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2217:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2207:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2290:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2305:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2309:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2335:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2370:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2381:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2366:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2366:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2390:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2345:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2345:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2335:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1986:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1997:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2009:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2017:6:5",
														"type": ""
													}
												],
												"src": "1941:474:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2486:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2503:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2526:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2508:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2508:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2496:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2474:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2481:3:5",
														"type": ""
													}
												],
												"src": "2421:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2604:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2621:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2641:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2626:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2626:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2614:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2614:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2592:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2599:3:5",
														"type": ""
													}
												],
												"src": "2545:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2739:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2756:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2806:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$274_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2761:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2761:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2749:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2749:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$274_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2727:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2734:3:5",
														"type": ""
													}
												],
												"src": "2660:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2898:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2915:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2959:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2920:38:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2908:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2908:58:5"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2886:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2893:3:5",
														"type": ""
													}
												],
												"src": "2825:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3124:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3134:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3200:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3205:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3141:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3141:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3134:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3306:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nodeType": "YulIdentifier",
																	"src": "3217:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3217:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3319:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3330:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3335:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3326:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3326:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3319:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3112:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3120:3:5",
														"type": ""
													}
												],
												"src": "2978:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3496:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3506:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3572:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3513:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3506:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3678:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "3589:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3589:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3691:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3702:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3707:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3698:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3691:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3484:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3492:3:5",
														"type": ""
													}
												],
												"src": "3350:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3868:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3878:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3944:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3949:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3885:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3885:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3878:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4050:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
																	"nodeType": "YulIdentifier",
																	"src": "3961:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3961:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3961:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4063:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4074:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4070:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4063:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3856:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3864:3:5",
														"type": ""
													}
												],
												"src": "3722:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4240:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4250:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4316:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4257:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4257:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4250:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4422:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "4333:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4333:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4333:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4435:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4446:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4451:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4442:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4435:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4228:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4236:3:5",
														"type": ""
													}
												],
												"src": "4094:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4612:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4622:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4688:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4693:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4629:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4629:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4622:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4794:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4705:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4705:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4705:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4807:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4818:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4814:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4814:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4807:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4600:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4608:3:5",
														"type": ""
													}
												],
												"src": "4466:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4984:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4994:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5060:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5065:2:5",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5001:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5001:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4994:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5166:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																	"nodeType": "YulIdentifier",
																	"src": "5077:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5077:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5077:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5179:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5190:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5195:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5186:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5179:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4972:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4980:3:5",
														"type": ""
													}
												],
												"src": "4838:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5356:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5366:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5432:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5437:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5373:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5373:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5366:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5538:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																	"nodeType": "YulIdentifier",
																	"src": "5449:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5449:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5449:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5551:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5562:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5567:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5558:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5558:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5344:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5352:3:5",
														"type": ""
													}
												],
												"src": "5210:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5647:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5664:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5687:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5669:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5669:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5657:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5657:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5657:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5635:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5642:3:5",
														"type": ""
													}
												],
												"src": "5582:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5804:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5814:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5826:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5837:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5822:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5822:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5814:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5894:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5907:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5918:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5903:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5903:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5850:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5850:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5850:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5776:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5788:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5799:4:5",
														"type": ""
													}
												],
												"src": "5706:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6088:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6098:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6110:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6121:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6106:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6106:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6098:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6178:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6191:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6202:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6187:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6187:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6134:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6134:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6134:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6259:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6272:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6283:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6268:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6268:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6215:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6215:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6215:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6341:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6354:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6365:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6350:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6350:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6297:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6297:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6297:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6044:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6056:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6064:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6072:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6083:4:5",
														"type": ""
													}
												],
												"src": "5934:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6544:296:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6554:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6566:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6577:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6562:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6562:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6554:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6634:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6647:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6658:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6643:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6643:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6590:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6590:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6590:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6723:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6736:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6747:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6671:51:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6671:80:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6671:80:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6805:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6818:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6829:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6814:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6814:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6761:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6761:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6761:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6500:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6512:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6520:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6539:4:5",
														"type": ""
													}
												],
												"src": "6382:458:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6972:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6982:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6994:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7005:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6990:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6990:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6982:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7062:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7075:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7086:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7071:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7071:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7018:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7018:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7018:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7143:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7156:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7167:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7152:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7152:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7099:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7099:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7099:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6936:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6948:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6956:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6967:4:5",
														"type": ""
													}
												],
												"src": "6846:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7338:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7348:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7360:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7371:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7356:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7356:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7348:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7428:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7441:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7452:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7437:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7437:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7384:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7384:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7509:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7522:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7533:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7518:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7518:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7465:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7465:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7465:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7591:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7604:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7615:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7600:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7600:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7547:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7547:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7294:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7306:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7314:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7322:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7333:4:5",
														"type": ""
													}
												],
												"src": "7184:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7724:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7734:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7746:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7757:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7742:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7742:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7734:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7808:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7821:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7832:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7770:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7770:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7770:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7696:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7708:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7719:4:5",
														"type": ""
													}
												],
												"src": "7632:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7960:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7970:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7982:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7993:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7978:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7978:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7970:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8064:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8077:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8088:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8073:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8073:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$274_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8006:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8006:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8006:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7932:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7944:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7955:4:5",
														"type": ""
													}
												],
												"src": "7848:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8275:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8285:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8297:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8308:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8293:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8293:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8285:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8332:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8343:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8328:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8328:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8351:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8357:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8347:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8347:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8321:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8321:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8321:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8377:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8511:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8385:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8385:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8377:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8255:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8270:4:5",
														"type": ""
													}
												],
												"src": "8104:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8700:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8710:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8722:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8733:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8718:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8718:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8710:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8757:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8768:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8753:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8753:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8776:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8782:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8772:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8772:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8746:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8746:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8746:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8802:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8936:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8810:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8802:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8680:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8695:4:5",
														"type": ""
													}
												],
												"src": "8529:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9125:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9135:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9147:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9158:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9143:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9143:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9135:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9182:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9193:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9178:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9178:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9201:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9207:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9197:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9197:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9171:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9171:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9171:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9227:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9361:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9235:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9235:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9227:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9105:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9120:4:5",
														"type": ""
													}
												],
												"src": "8954:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9550:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9560:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9572:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9583:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9568:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9568:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9560:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9618:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9603:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9626:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9632:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9622:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9622:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9596:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9652:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9786:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9660:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9660:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9652:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9530:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9545:4:5",
														"type": ""
													}
												],
												"src": "9379:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9975:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9985:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9997:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10008:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9993:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9993:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9985:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10032:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10043:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10028:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10028:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10051:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10057:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10047:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10047:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10021:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10021:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10021:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10077:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10211:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10085:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10085:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10077:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9955:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9970:4:5",
														"type": ""
													}
												],
												"src": "9804:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10400:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10410:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10422:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10433:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10418:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10418:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10410:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10457:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10468:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10453:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10453:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10476:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10482:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10472:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10472:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10446:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10446:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10446:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10502:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10636:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10510:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10510:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10502:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10380:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10395:4:5",
														"type": ""
													}
												],
												"src": "10229:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10825:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10835:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10847:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10858:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10843:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10843:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10835:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10882:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10893:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10878:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10878:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10901:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10907:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10897:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10897:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10871:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10871:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10871:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10927:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11061:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10935:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10935:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10927:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10805:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10820:4:5",
														"type": ""
													}
												],
												"src": "10654:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11177:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11187:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11199:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11210:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11195:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11195:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11187:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11267:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11280:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11291:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11276:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11276:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11223:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11223:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11223:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11149:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11161:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11172:4:5",
														"type": ""
													}
												],
												"src": "11079:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11347:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11357:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11373:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11367:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11367:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "11357:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11340:6:5",
														"type": ""
													}
												],
												"src": "11307:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11484:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11501:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11506:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11494:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11494:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11494:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11522:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11541:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11546:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11537:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11537:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11522:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11456:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11461:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11472:11:5",
														"type": ""
													}
												],
												"src": "11388:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11607:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11617:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11640:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11622:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11622:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11617:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11651:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11674:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11656:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11656:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11651:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11814:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11816:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11816:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11816:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11735:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11742:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11810:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11738:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11738:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11732:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11732:81:5"
															},
															"nodeType": "YulIf",
															"src": "11729:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11846:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11857:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11860:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11853:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11853:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11846:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11594:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11597:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11603:3:5",
														"type": ""
													}
												],
												"src": "11563:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11916:143:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11926:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11949:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11931:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11931:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11926:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11960:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11983:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11965:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11965:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11960:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12007:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12009:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12009:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12009:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12004:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11997:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11997:9:5"
															},
															"nodeType": "YulIf",
															"src": "11994:35:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12039:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12048:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12051:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12044:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12044:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12039:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11905:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11908:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11914:1:5",
														"type": ""
													}
												],
												"src": "11874:185:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12113:300:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12123:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12146:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12128:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12128:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12123:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12157:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12180:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12162:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12162:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12157:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12355:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12357:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12357:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12357:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12267:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12260:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12260:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12253:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12253:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12275:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12282:66:5",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12350:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "12278:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12278:74:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "12272:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12272:81:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12249:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12249:105:5"
															},
															"nodeType": "YulIf",
															"src": "12246:131:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12387:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12402:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12405:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12398:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12398:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12387:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12096:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12099:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12105:7:5",
														"type": ""
													}
												],
												"src": "12065:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12464:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12474:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12497:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12479:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12479:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12474:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12508:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12531:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12513:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12513:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12508:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12555:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12557:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12557:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12557:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12549:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12552:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12546:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12546:8:5"
															},
															"nodeType": "YulIf",
															"src": "12543:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12587:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12599:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12602:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12595:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12595:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "12587:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12450:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12453:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "12459:4:5",
														"type": ""
													}
												],
												"src": "12419:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12661:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12671:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12700:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "12682:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12682:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12671:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12643:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12653:7:5",
														"type": ""
													}
												],
												"src": "12616:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12760:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12770:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12795:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12788:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12788:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12781:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12781:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12770:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12742:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12752:7:5",
														"type": ""
													}
												],
												"src": "12718:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12859:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12869:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12884:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12891:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12880:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12880:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "12869:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12841:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12851:7:5",
														"type": ""
													}
												],
												"src": "12814:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12991:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13001:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13012:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "13001:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12973:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "12983:7:5",
														"type": ""
													}
												],
												"src": "12946:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13103:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13113:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13157:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "13126:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13126:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13113:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$274_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13083:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13093:9:5",
														"type": ""
													}
												],
												"src": "13029:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13243:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13253:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13284:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13266:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13266:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13253:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13223:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13233:9:5",
														"type": ""
													}
												],
												"src": "13175:121:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13362:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13372:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13416:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13385:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13385:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13372:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13342:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13352:9:5",
														"type": ""
													}
												],
												"src": "13302:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13494:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13504:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13535:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "13517:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13517:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "13504:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13474:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "13484:9:5",
														"type": ""
													}
												],
												"src": "13434:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13581:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13598:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13601:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13591:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13591:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13591:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13695:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13698:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13688:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13688:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13688:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13719:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13722:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13712:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13712:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13712:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13553:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13767:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13784:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13787:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13777:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13777:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13777:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13881:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13884:4:5",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13874:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13874:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13874:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13905:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13908:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13898:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13898:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13898:15:5"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "13739:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14014:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14031:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14034:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14024:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14024:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14024:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "13925:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14137:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14154:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14157:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14147:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14147:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14147:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "14048:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14277:64:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14299:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14307:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14295:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14295:14:5"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14311:22:5",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14288:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14288:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14288:46:5"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14269:6:5",
														"type": ""
													}
												],
												"src": "14171:170:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14453:119:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14475:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14483:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14471:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14471:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14487:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14464:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14464:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14464:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14543:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14551:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14539:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14539:15:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14556:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14532:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14532:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14532:33:5"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14445:6:5",
														"type": ""
													}
												],
												"src": "14347:225:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14684:68:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14706:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14714:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14702:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14702:14:5"
																	},
																	{
																		"hexValue": "4465706f736974206e6f7420756e6c6f636b656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14718:26:5",
																		"type": "",
																		"value": "Deposit not unlocked yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14695:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14695:50:5"
														}
													]
												},
												"name": "store_literal_in_memory_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14676:6:5",
														"type": ""
													}
												],
												"src": "14578:174:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14864:60:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14886:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14894:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14882:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14882:14:5"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14898:18:5",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14875:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14875:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14875:42:5"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14856:6:5",
														"type": ""
													}
												],
												"src": "14758:166:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15036:76:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15058:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15066:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15054:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15054:14:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15070:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15047:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15047:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15047:58:5"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15028:6:5",
														"type": ""
													}
												],
												"src": "14930:182:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15224:61:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15246:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15254:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15242:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15242:14:5"
																	},
																	{
																		"hexValue": "4e6f20616374697665206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15258:19:5",
																		"type": "",
																		"value": "No active deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15235:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15235:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15235:43:5"
														}
													]
												},
												"name": "store_literal_in_memory_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15216:6:5",
														"type": ""
													}
												],
												"src": "15118:167:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15397:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15419:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15427:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15415:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15415:14:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15431:20:5",
																		"type": "",
																		"value": "Not enough deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15408:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15408:44:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15408:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15389:6:5",
														"type": ""
													}
												],
												"src": "15291:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15508:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15565:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15574:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15577:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15567:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15567:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15567:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15531:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15556:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "15538:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15538:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15528:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15528:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15521:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15521:43:5"
															},
															"nodeType": "YulIf",
															"src": "15518:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15501:5:5",
														"type": ""
													}
												],
												"src": "15465:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15633:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15687:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15696:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15699:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15689:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15689:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15689:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15656:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15678:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "15663:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15663:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15653:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15653:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15646:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15646:40:5"
															},
															"nodeType": "YulIf",
															"src": "15643:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15626:5:5",
														"type": ""
													}
												],
												"src": "15593:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15758:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15815:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15824:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15827:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15817:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15817:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15817:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15781:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "15806:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "15788:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15788:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15778:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15778:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15771:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "15771:43:5"
															},
															"nodeType": "YulIf",
															"src": "15768:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15751:5:5",
														"type": ""
													}
												],
												"src": "15715:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$274_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$274_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$274_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$274_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Deposit not unlocked yet\")\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function store_literal_in_memory_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269(memPtr) {\n\n        mstore(add(memPtr, 0), \"No active deposit\")\n\n    }\n\n    function store_literal_in_memory_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough deposit\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1D1 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x379607F5 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x137 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0xDD PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x103 PUSH2 0x6B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x13B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12E SWAP2 SWAP1 PUSH2 0x139C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13F PUSH2 0x6EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x149 PUSH2 0x776 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH2 0x7FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x1106 JUMP JUMPDEST PUSH2 0x825 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19A SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x14B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST PUSH2 0xA99 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x288 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27F SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x294 DUP3 DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP3 SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x321 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x379 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0xE1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3AC PUSH2 0x7FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x40A PUSH2 0xE25 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49E SWAP1 PUSH2 0x1492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x534 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x549 DUP3 DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP DUP4 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 DUP8 PUSH2 0x600 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61D SWAP3 SWAP2 SWAP1 PUSH2 0x133C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x64B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH2 0x6A4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0xE1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x714 PUSH2 0x7FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x76A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x761 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x774 PUSH1 0x0 PUSH2 0xEC6 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x77E PUSH2 0xE1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x79C PUSH2 0x7FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7FA PUSH2 0xF8A JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT PUSH2 0x8C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B7 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8CC DUP3 DUP5 PUSH2 0x978 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x931 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x96B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x9DA SWAP2 SWAP1 PUSH2 0x15BF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH2 0x2710 DUP4 DUP6 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST PUSH2 0xA6F SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST PUSH2 0xA79 SWAP2 SWAP1 PUSH2 0x1534 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 DUP6 PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAA1 PUSH2 0x6D8 JUMP JUMPDEST ISZERO PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD8 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB45 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB73 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB97 SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST POP DUP3 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBFB SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC65 SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0xC8E SWAP2 SWAP1 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD18 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1365 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0xD2D PUSH2 0xE1D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD4B PUSH2 0x7FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD98 SWAP1 PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xE11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE08 SWAP1 PUSH2 0x13F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE1A DUP2 PUSH2 0xEC6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE2D PUSH2 0x6D8 JUMP JUMPDEST PUSH2 0xE6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE63 SWAP1 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0xEAF PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEBC SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF92 PUSH2 0x6D8 JUMP JUMPDEST ISZERO PUSH2 0xFD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFC9 SWAP1 PUSH2 0x1432 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1016 PUSH2 0xE1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1023 SWAP2 SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x103C DUP2 PUSH2 0x182B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1051 DUP2 PUSH2 0x1842 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1066 DUP2 PUSH2 0x1859 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1081 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1090 DUP5 DUP3 DUP6 ADD PUSH2 0x102D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B0 JUMPI PUSH2 0x10AF PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10BE DUP6 DUP3 DUP7 ADD PUSH2 0x102D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10CF DUP6 DUP3 DUP7 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10EF JUMPI PUSH2 0x10EE PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10FD DUP5 DUP3 DUP6 ADD PUSH2 0x1042 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x111C JUMPI PUSH2 0x111B PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x112A DUP5 DUP3 DUP6 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x114A JUMPI PUSH2 0x1149 PUSH2 0x16E1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1158 DUP6 DUP3 DUP7 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1169 DUP6 DUP3 DUP7 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x117C DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x118B DUP2 PUSH2 0x1605 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x119A DUP2 PUSH2 0x163B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x11A9 DUP2 PUSH2 0x164D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BC PUSH1 0x14 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x11C7 DUP3 PUSH2 0x16E6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11DF PUSH1 0x26 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x11EA DUP3 PUSH2 0x170F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1202 PUSH1 0x18 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x120D DUP3 PUSH2 0x175E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1225 PUSH1 0x10 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1230 DUP3 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1248 PUSH1 0x20 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 DUP3 PUSH2 0x17B0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126B PUSH1 0x11 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1276 DUP3 PUSH2 0x17D9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128E PUSH1 0x12 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP2 POP PUSH2 0x1299 DUP3 PUSH2 0x1802 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AD DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12E3 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x12F0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x12FD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x131A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x1327 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x1334 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1351 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x135E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x137A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1173 JUMP JUMPDEST PUSH2 0x1387 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x1394 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1182 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1191 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13EB DUP2 PUSH2 0x11AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x140B DUP2 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x142B DUP2 PUSH2 0x11F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x144B DUP2 PUSH2 0x1218 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x146B DUP2 PUSH2 0x123B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x148B DUP2 PUSH2 0x125E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14AB DUP2 PUSH2 0x1281 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14E9 DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F4 DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x1683 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x153F DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP2 POP PUSH2 0x154A DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x16B2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1570 DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP2 POP PUSH2 0x157B DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x15B4 JUMPI PUSH2 0x15B3 PUSH2 0x1683 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15CA DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP2 POP PUSH2 0x15D5 DUP4 PUSH2 0x1631 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x15E8 JUMPI PUSH2 0x15E7 PUSH2 0x1683 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15FE DUP3 PUSH2 0x1611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1646 DUP3 PUSH2 0x165F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1658 DUP3 PUSH2 0x1631 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x166A DUP3 PUSH2 0x1671 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x167C DUP3 PUSH2 0x1611 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F20616374697665206465706F736974000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F756768206465706F7369740000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1834 DUP2 PUSH2 0x15F3 JUMP JUMPDEST DUP2 EQ PUSH2 0x183F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x184B DUP2 PUSH2 0x1605 JUMP JUMPDEST DUP2 EQ PUSH2 0x1856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1862 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP2 EQ PUSH2 0x186D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH3 0xAF7FFA 0xD9 0xEA 0x1F 0xB2 BASEFEE 0x2D PUSH12 0x17B0A036D8241A00FD0BA801 GASPRICE 0x23 0xAE PUSH10 0xF8C76D4D64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "224:3594:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2627:346;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1249:64;;;:::i;:::-;;2053:568;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;317:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1098:84:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;1179:60:4;;;:::i;:::-;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2979:364:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3349:463;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1549:498;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2627:346:4;2677:18;2698:10;2677:31;;2773:1;2726:16;:28;2743:10;2726:28;;;;;;;;;;;;;;;:36;2755:6;2726:36;;;;;;;;;;;:44;;;:48;2718:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;2807:15;2825:36;2842:10;2854:6;2825:16;:36::i;:::-;2807:54;;2872:13;;;;;;;;;;;:22;;;2895:10;2907:7;2872:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2931:35;2938:10;2950:6;2958:7;2931:35;;;;;;;;:::i;:::-;;;;;;;;2667:306;;2627:346;:::o;1249:64::-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1296:10:4::1;:8;:10::i;:::-;1249:64::o:0;2053:568::-;2123:18;2144:10;2123:31;;2220:7;2172:16;:28;2189:10;2172:28;;;;;;;;;;;;;;;:36;2201:6;2172:36;;;;;;;;;;;:44;;;:55;;2164:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;2319:15;2268:16;:28;2285:10;2268:28;;;;;;;;;;;;;;;:36;2297:6;2268:36;;;;;;;;;;;:47;;;:66;;2260:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;2374:15;2392:36;2409:10;2421:6;2392:16;:36::i;:::-;2374:54;;2495:7;2447:16;:28;2464:10;2447:28;;;;;;;;;;;;;;;:36;2476:6;2447:36;;;;;;;;;;;:44;;;:55;;;;;;;:::i;:::-;;;;;;;;2513:13;;;;;;;;;;;:22;;;2536:10;2558:7;2548;:17;;;;:::i;:::-;2513:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2582:32;2591:10;2603:1;2606:7;2582:32;;;;;;;;:::i;:::-;;;;;;;;2113:508;;2053:568;;:::o;317:27::-;;;;;;;;;;;;;:::o;1098:84:1:-;1145:4;1168:7;;;;;;;;;;;1161:14;;1098:84;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1179:60:4:-;1259:12:0;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1224:8:4::1;:6;:8::i;:::-;1179:60::o:0;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;2979:364:4:-;3032:18;3053:10;3032:31;;3128:1;3081:16;:28;3098:10;3081:28;;;;;;;;;;;;;;;:36;3110:6;3081:36;;;;;;;;;;;:44;;;:48;3073:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;3162:15;3180:36;3197:10;3209:6;3180:16;:36::i;:::-;3162:54;;3275:7;3227:16;:28;3244:10;3227:28;;;;;;;;;;;;;;;:36;3256:6;3227:36;;;;;;;;;;;:44;;;:55;;;;;;;:::i;:::-;;;;;;;;3298:38;3308:10;3320:6;3328:7;3298:38;;;;;;;;:::i;:::-;;;;;;;;3022:321;;2979:364;:::o;3349:463::-;3428:7;3446:18;3485:16;:23;3502:5;3485:23;;;;;;;;;;;;;;;:31;3509:6;3485:31;;;;;;;;;;;:39;;;3467:15;:57;;;;:::i;:::-;3446:78;;3534:15;3552:16;:23;3569:5;3552:23;;;;;;;;;;;;;;;:31;3576:6;3552:31;;;;;;;;;;;:39;;;3534:57;;3602:11;3616:9;:17;3626:6;3616:17;;;;;;;;;;;:21;;;3602:35;;3648:24;3703:8;3694:5;3687:3;3677:7;:13;;;;:::i;:::-;3676:23;;;;:::i;:::-;3675:36;;;;:::i;:::-;3648:63;;3721:21;3758:16;3745:10;:29;;;;:::i;:::-;3721:53;;3792:13;3785:20;;;;;;;3349:463;;;;:::o;1549:498::-;1412:8:1;:6;:8::i;:::-;1411:9;1403:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1631:18:4::1;1652:10;1631:31;;1680:13;;;;;;;;;;;:26;;;1707:10;1727:4;1734:7;1680:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1801:7;1753:16;:28;1770:10;1753:28;;;;;;;;;;;;;;;:36;1782:6;1753:36;;;;;;;;;;;:44;;;:55;;;;;;;:::i;:::-;;;;;;;;1866:15;1818:16;:28;1835:10;1818:28;;;;;;;;;;;;;;;:36;1847:6;1818:36;;;;;;;;;;;:44;;;:63;;;;;;;:::i;:::-;;;;;;;;1959:9;:17;1969:6;1959:17;;;;;;;;;;;:28;;;1941:15;:46;;;;:::i;:::-;1891:16;:28;1908:10;1891:28;;;;;;;;;;;;;;;:36;1920:6;1891:36;;;;;;;;;;;:47;;:96;;;;2003:37;2012:10;2024:6;2032:7;2003:37;;;;;;;;:::i;:::-;;;;;;;;1621:426;1549:498:::0;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;2110:117:1:-;1677:8;:6;:8::i;:::-;1669:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2178:5:::1;2168:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2198:22;2207:12;:10;:12::i;:::-;2198:22;;;;;;:::i;:::-;;;;;;;;2110:117::o:0;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;1863:115:1:-;1412:8;:6;:8::i;:::-;1411:9;1403:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1932:4:::1;1922:7;;:14;;;;;;;;;;;;;;;;;;1951:20;1958:12;:10;:12::i;:::-;1951:20;;;;;;:::i;:::-;;;;;;;;1863:115::o:0;7:139:5:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:137::-;206:5;237:6;231:13;222:22;;253:30;277:5;253:30;:::i;:::-;152:137;;;;:::o;295:139::-;341:5;379:6;366:20;357:29;;395:33;422:5;395:33;:::i;:::-;295:139;;;;:::o;440:329::-;499:6;548:2;536:9;527:7;523:23;519:32;516:119;;;554:79;;:::i;:::-;516:119;674:1;699:53;744:7;735:6;724:9;720:22;699:53;:::i;:::-;689:63;;645:117;440:329;;;;:::o;775:474::-;843:6;851;900:2;888:9;879:7;875:23;871:32;868:119;;;906:79;;:::i;:::-;868:119;1026:1;1051:53;1096:7;1087:6;1076:9;1072:22;1051:53;:::i;:::-;1041:63;;997:117;1153:2;1179:53;1224:7;1215:6;1204:9;1200:22;1179:53;:::i;:::-;1169:63;;1124:118;775:474;;;;;:::o;1255:345::-;1322:6;1371:2;1359:9;1350:7;1346:23;1342:32;1339:119;;;1377:79;;:::i;:::-;1339:119;1497:1;1522:61;1575:7;1566:6;1555:9;1551:22;1522:61;:::i;:::-;1512:71;;1468:125;1255:345;;;;:::o;1606:329::-;1665:6;1714:2;1702:9;1693:7;1689:23;1685:32;1682:119;;;1720:79;;:::i;:::-;1682:119;1840:1;1865:53;1910:7;1901:6;1890:9;1886:22;1865:53;:::i;:::-;1855:63;;1811:117;1606:329;;;;:::o;1941:474::-;2009:6;2017;2066:2;2054:9;2045:7;2041:23;2037:32;2034:119;;;2072:79;;:::i;:::-;2034:119;2192:1;2217:53;2262:7;2253:6;2242:9;2238:22;2217:53;:::i;:::-;2207:63;;2163:117;2319:2;2345:53;2390:7;2381:6;2370:9;2366:22;2345:53;:::i;:::-;2335:63;;2290:118;1941:474;;;;;:::o;2421:118::-;2508:24;2526:5;2508:24;:::i;:::-;2503:3;2496:37;2421:118;;:::o;2545:109::-;2626:21;2641:5;2626:21;:::i;:::-;2621:3;2614:34;2545:109;;:::o;2660:159::-;2761:51;2806:5;2761:51;:::i;:::-;2756:3;2749:64;2660:159;;:::o;2825:147::-;2920:45;2959:5;2920:45;:::i;:::-;2915:3;2908:58;2825:147;;:::o;2978:366::-;3120:3;3141:67;3205:2;3200:3;3141:67;:::i;:::-;3134:74;;3217:93;3306:3;3217:93;:::i;:::-;3335:2;3330:3;3326:12;3319:19;;2978:366;;;:::o;3350:::-;3492:3;3513:67;3577:2;3572:3;3513:67;:::i;:::-;3506:74;;3589:93;3678:3;3589:93;:::i;:::-;3707:2;3702:3;3698:12;3691:19;;3350:366;;;:::o;3722:::-;3864:3;3885:67;3949:2;3944:3;3885:67;:::i;:::-;3878:74;;3961:93;4050:3;3961:93;:::i;:::-;4079:2;4074:3;4070:12;4063:19;;3722:366;;;:::o;4094:::-;4236:3;4257:67;4321:2;4316:3;4257:67;:::i;:::-;4250:74;;4333:93;4422:3;4333:93;:::i;:::-;4451:2;4446:3;4442:12;4435:19;;4094:366;;;:::o;4466:::-;4608:3;4629:67;4693:2;4688:3;4629:67;:::i;:::-;4622:74;;4705:93;4794:3;4705:93;:::i;:::-;4823:2;4818:3;4814:12;4807:19;;4466:366;;;:::o;4838:::-;4980:3;5001:67;5065:2;5060:3;5001:67;:::i;:::-;4994:74;;5077:93;5166:3;5077:93;:::i;:::-;5195:2;5190:3;5186:12;5179:19;;4838:366;;;:::o;5210:::-;5352:3;5373:67;5437:2;5432:3;5373:67;:::i;:::-;5366:74;;5449:93;5538:3;5449:93;:::i;:::-;5567:2;5562:3;5558:12;5551:19;;5210:366;;;:::o;5582:118::-;5669:24;5687:5;5669:24;:::i;:::-;5664:3;5657:37;5582:118;;:::o;5706:222::-;5799:4;5837:2;5826:9;5822:18;5814:26;;5850:71;5918:1;5907:9;5903:17;5894:6;5850:71;:::i;:::-;5706:222;;;;:::o;5934:442::-;6083:4;6121:2;6110:9;6106:18;6098:26;;6134:71;6202:1;6191:9;6187:17;6178:6;6134:71;:::i;:::-;6215:72;6283:2;6272:9;6268:18;6259:6;6215:72;:::i;:::-;6297;6365:2;6354:9;6350:18;6341:6;6297:72;:::i;:::-;5934:442;;;;;;:::o;6382:458::-;6539:4;6577:2;6566:9;6562:18;6554:26;;6590:71;6658:1;6647:9;6643:17;6634:6;6590:71;:::i;:::-;6671:80;6747:2;6736:9;6732:18;6723:6;6671:80;:::i;:::-;6761:72;6829:2;6818:9;6814:18;6805:6;6761:72;:::i;:::-;6382:458;;;;;;:::o;6846:332::-;6967:4;7005:2;6994:9;6990:18;6982:26;;7018:71;7086:1;7075:9;7071:17;7062:6;7018:71;:::i;:::-;7099:72;7167:2;7156:9;7152:18;7143:6;7099:72;:::i;:::-;6846:332;;;;;:::o;7184:442::-;7333:4;7371:2;7360:9;7356:18;7348:26;;7384:71;7452:1;7441:9;7437:17;7428:6;7384:71;:::i;:::-;7465:72;7533:2;7522:9;7518:18;7509:6;7465:72;:::i;:::-;7547;7615:2;7604:9;7600:18;7591:6;7547:72;:::i;:::-;7184:442;;;;;;:::o;7632:210::-;7719:4;7757:2;7746:9;7742:18;7734:26;;7770:65;7832:1;7821:9;7817:17;7808:6;7770:65;:::i;:::-;7632:210;;;;:::o;7848:250::-;7955:4;7993:2;7982:9;7978:18;7970:26;;8006:85;8088:1;8077:9;8073:17;8064:6;8006:85;:::i;:::-;7848:250;;;;:::o;8104:419::-;8270:4;8308:2;8297:9;8293:18;8285:26;;8357:9;8351:4;8347:20;8343:1;8332:9;8328:17;8321:47;8385:131;8511:4;8385:131;:::i;:::-;8377:139;;8104:419;;;:::o;8529:::-;8695:4;8733:2;8722:9;8718:18;8710:26;;8782:9;8776:4;8772:20;8768:1;8757:9;8753:17;8746:47;8810:131;8936:4;8810:131;:::i;:::-;8802:139;;8529:419;;;:::o;8954:::-;9120:4;9158:2;9147:9;9143:18;9135:26;;9207:9;9201:4;9197:20;9193:1;9182:9;9178:17;9171:47;9235:131;9361:4;9235:131;:::i;:::-;9227:139;;8954:419;;;:::o;9379:::-;9545:4;9583:2;9572:9;9568:18;9560:26;;9632:9;9626:4;9622:20;9618:1;9607:9;9603:17;9596:47;9660:131;9786:4;9660:131;:::i;:::-;9652:139;;9379:419;;;:::o;9804:::-;9970:4;10008:2;9997:9;9993:18;9985:26;;10057:9;10051:4;10047:20;10043:1;10032:9;10028:17;10021:47;10085:131;10211:4;10085:131;:::i;:::-;10077:139;;9804:419;;;:::o;10229:::-;10395:4;10433:2;10422:9;10418:18;10410:26;;10482:9;10476:4;10472:20;10468:1;10457:9;10453:17;10446:47;10510:131;10636:4;10510:131;:::i;:::-;10502:139;;10229:419;;;:::o;10654:::-;10820:4;10858:2;10847:9;10843:18;10835:26;;10907:9;10901:4;10897:20;10893:1;10882:9;10878:17;10871:47;10935:131;11061:4;10935:131;:::i;:::-;10927:139;;10654:419;;;:::o;11079:222::-;11172:4;11210:2;11199:9;11195:18;11187:26;;11223:71;11291:1;11280:9;11276:17;11267:6;11223:71;:::i;:::-;11079:222;;;;:::o;11388:169::-;11472:11;11506:6;11501:3;11494:19;11546:4;11541:3;11537:14;11522:29;;11388:169;;;;:::o;11563:305::-;11603:3;11622:20;11640:1;11622:20;:::i;:::-;11617:25;;11656:20;11674:1;11656:20;:::i;:::-;11651:25;;11810:1;11742:66;11738:74;11735:1;11732:81;11729:107;;;11816:18;;:::i;:::-;11729:107;11860:1;11857;11853:9;11846:16;;11563:305;;;;:::o;11874:185::-;11914:1;11931:20;11949:1;11931:20;:::i;:::-;11926:25;;11965:20;11983:1;11965:20;:::i;:::-;11960:25;;12004:1;11994:35;;12009:18;;:::i;:::-;11994:35;12051:1;12048;12044:9;12039:14;;11874:185;;;;:::o;12065:348::-;12105:7;12128:20;12146:1;12128:20;:::i;:::-;12123:25;;12162:20;12180:1;12162:20;:::i;:::-;12157:25;;12350:1;12282:66;12278:74;12275:1;12272:81;12267:1;12260:9;12253:17;12249:105;12246:131;;;12357:18;;:::i;:::-;12246:131;12405:1;12402;12398:9;12387:20;;12065:348;;;;:::o;12419:191::-;12459:4;12479:20;12497:1;12479:20;:::i;:::-;12474:25;;12513:20;12531:1;12513:20;:::i;:::-;12508:25;;12552:1;12549;12546:8;12543:34;;;12557:18;;:::i;:::-;12543:34;12602:1;12599;12595:9;12587:17;;12419:191;;;;:::o;12616:96::-;12653:7;12682:24;12700:5;12682:24;:::i;:::-;12671:35;;12616:96;;;:::o;12718:90::-;12752:7;12795:5;12788:13;12781:21;12770:32;;12718:90;;;:::o;12814:126::-;12851:7;12891:42;12884:5;12880:54;12869:65;;12814:126;;;:::o;12946:77::-;12983:7;13012:5;13001:16;;12946:77;;;:::o;13029:140::-;13093:9;13126:37;13157:5;13126:37;:::i;:::-;13113:50;;13029:140;;;:::o;13175:121::-;13233:9;13266:24;13284:5;13266:24;:::i;:::-;13253:37;;13175:121;;;:::o;13302:126::-;13352:9;13385:37;13416:5;13385:37;:::i;:::-;13372:50;;13302:126;;;:::o;13434:113::-;13484:9;13517:24;13535:5;13517:24;:::i;:::-;13504:37;;13434:113;;;:::o;13553:180::-;13601:77;13598:1;13591:88;13698:4;13695:1;13688:15;13722:4;13719:1;13712:15;13739:180;13787:77;13784:1;13777:88;13884:4;13881:1;13874:15;13908:4;13905:1;13898:15;14048:117;14157:1;14154;14147:12;14171:170;14311:22;14307:1;14299:6;14295:14;14288:46;14171:170;:::o;14347:225::-;14487:34;14483:1;14475:6;14471:14;14464:58;14556:8;14551:2;14543:6;14539:15;14532:33;14347:225;:::o;14578:174::-;14718:26;14714:1;14706:6;14702:14;14695:50;14578:174;:::o;14758:166::-;14898:18;14894:1;14886:6;14882:14;14875:42;14758:166;:::o;14930:182::-;15070:34;15066:1;15058:6;15054:14;15047:58;14930:182;:::o;15118:167::-;15258:19;15254:1;15246:6;15242:14;15235:43;15118:167;:::o;15291:168::-;15431:20;15427:1;15419:6;15415:14;15408:44;15291:168;:::o;15465:122::-;15538:24;15556:5;15538:24;:::i;:::-;15531:5;15528:35;15518:63;;15577:1;15574;15567:12;15518:63;15465:122;:::o;15593:116::-;15663:21;15678:5;15663:21;:::i;:::-;15656:5;15653:32;15643:60;;15699:1;15696;15689:12;15643:60;15593:116;:::o;15715:122::-;15788:24;15806:5;15788:24;:::i;:::-;15781:5;15778:35;15768:63;;15827:1;15824;15817:12;15768:63;15715:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1262000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptedToken()": "2667",
								"calculateRewards(address,uint256)": "infinite",
								"claim(uint256)": "infinite",
								"compound(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"owner()": "2544",
								"pause()": "infinite",
								"paused()": "2618",
								"renounceOwnership()": "30485",
								"transferOwnership(address)": "30833",
								"unpause()": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 3818,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 950,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 940,
									"end": 952,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 939,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 991,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 988,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 988,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1114,
									"end": 1120,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1104,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1091,
									"end": 1104,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1121,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1052,
									"end": 1128,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2368,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2387,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2384,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2441,
									"end": 2449,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2431,
									"end": 2439,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 3818,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203462af7ffad9ea1fb2482d6b17b0a036d8241a00fd0ba8013a23ae69f8c76d4d64736f6c63430008070033",
									".code": [
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "AA5F7E26"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "BEB8314C"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "379607F5"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "3F4BA83A"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "451C3D80"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 3818,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2708,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2754,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2762,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2770,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2774,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2718,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2825,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2842,
											"end": 2852,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2860,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2825,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2825,
											"end": 2861,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2861,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2825,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2807,
											"end": 2861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2872,
											"end": 2885,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2894,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2895,
											"end": 2905,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2907,
											"end": 2914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2872,
											"end": 2915,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "PUSH",
											"source": 4,
											"value": "34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7"
										},
										{
											"begin": 2938,
											"end": 2948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2950,
											"end": 2956,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2958,
											"end": 2965,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2966,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2667,
											"end": 2973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2973,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1296,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1296,
											"end": 1306,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1306,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1296,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1249,
											"end": 1313,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2154,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2123,
											"end": 2154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2188,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2200,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2216,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2216,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2227,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2227,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2164,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2284,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2295,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2296,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2297,
											"end": 2303,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2304,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2315,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2268,
											"end": 2315,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2315,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2334,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2334,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 2260,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2392,
											"end": 2428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2409,
											"end": 2419,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2421,
											"end": 2427,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2392,
											"end": 2428,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2428,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2392,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2502,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2463,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2475,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2482,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2483,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2491,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2447,
											"end": 2502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2535,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2536,
											"end": 2546,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2555,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2548,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2513,
											"end": 2566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 2591,
											"end": 2601,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2613,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2582,
											"end": 2614,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2113,
											"end": 2621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2621,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1224,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1224,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 1224,
											"end": 1232,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1224,
											"end": 1232,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1224,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1179,
											"end": 1239,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1101,
											"end": 1114,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3063,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3032,
											"end": 3063,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3128,
											"end": 3129,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3097,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3110,
											"end": 3116,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3117,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3125,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3125,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3081,
											"end": 3129,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 3073,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3197,
											"end": 3207,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3215,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3180,
											"end": 3216,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3180,
											"end": 3216,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 3180,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3162,
											"end": 3216,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3275,
											"end": 3282,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3243,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3244,
											"end": 3254,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3255,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3262,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3263,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3282,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 4,
											"value": "E311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873"
										},
										{
											"begin": 3308,
											"end": 3318,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3320,
											"end": 3326,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3328,
											"end": 3335,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3336,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3022,
											"end": 3343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3343,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3428,
											"end": 3435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3464,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3501,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3502,
											"end": 3507,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3508,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3515,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3516,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3524,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3485,
											"end": 3524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3524,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3467,
											"end": 3482,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3467,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3467,
											"end": 3524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3467,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3467,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3467,
											"end": 3524,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3467,
											"end": 3524,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3467,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3524,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3549,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3568,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3574,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3575,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3582,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3583,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3552,
											"end": 3591,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3552,
											"end": 3591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3591,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3591,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3613,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3626,
											"end": 3632,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3633,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3637,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3711,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 3694,
											"end": 3699,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 3687,
											"end": 3690,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3684,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3677,
											"end": 3690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3677,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3677,
											"end": 3690,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3677,
											"end": 3690,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 3677,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 3676,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3675,
											"end": 3711,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3675,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3675,
											"end": 3711,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3675,
											"end": 3711,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3675,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3648,
											"end": 3711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3745,
											"end": 3755,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3745,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3745,
											"end": 3774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3745,
											"end": 3774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3745,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3745,
											"end": 3774,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3745,
											"end": 3774,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3745,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3721,
											"end": 3774,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3792,
											"end": 3805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3805,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3785,
											"end": 3805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3812,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1412,
											"end": 1420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1412,
											"end": 1420,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1412,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1652,
											"end": 1662,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1631,
											"end": 1662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1631,
											"end": 1662,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1706,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1706,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1707,
											"end": 1717,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1734,
											"end": 1741,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1801,
											"end": 1808,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1769,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1808,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1866,
											"end": 1881,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1834,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1835,
											"end": 1845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1846,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1818,
											"end": 1862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1881,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1968,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1976,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1987,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1959,
											"end": 1987,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 1987,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1956,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1941,
											"end": 1987,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1941,
											"end": 1987,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1941,
											"end": 1987,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1941,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1907,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1908,
											"end": 1918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1919,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1926,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1927,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1938,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1891,
											"end": 1938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1987,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 1987,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 2012,
											"end": 2022,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2024,
											"end": 2030,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2039,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2040,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1621,
											"end": 2047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2047,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1259,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1259,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1677,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2175,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2207,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2431,
											"end": 2439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1412,
											"end": 1420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1412,
											"end": 1420,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 1412,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1932,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1958,
											"end": 1968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 231,
											"end": 244,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 222,
											"end": 244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 277,
											"end": 282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 253,
											"end": 283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 253,
											"end": 283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 152,
											"end": 289,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 341,
											"end": 346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 385,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 366,
											"end": 386,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 422,
											"end": 427,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 395,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 395,
											"end": 428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 295,
											"end": 434,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 499,
											"end": 505,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 536,
											"end": 545,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 527,
											"end": 534,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 523,
											"end": 546,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 519,
											"end": 551,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 516,
											"end": 635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 516,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 554,
											"end": 633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 516,
											"end": 635,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 516,
											"end": 635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 674,
											"end": 675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 744,
											"end": 751,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 735,
											"end": 741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 724,
											"end": 733,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 720,
											"end": 742,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 699,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 699,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 689,
											"end": 752,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 689,
											"end": 752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 645,
											"end": 762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 440,
											"end": 769,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 440,
											"end": 769,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 843,
											"end": 849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 857,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 900,
											"end": 902,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 888,
											"end": 897,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 879,
											"end": 886,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 875,
											"end": 898,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 871,
											"end": 903,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 868,
											"end": 987,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 868,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 868,
											"end": 987,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 906,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 906,
											"end": 985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 906,
											"end": 985,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 985,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 906,
											"end": 985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 868,
											"end": 987,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 868,
											"end": 987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1026,
											"end": 1027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1096,
											"end": 1103,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1085,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 1051,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1104,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1104,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 997,
											"end": 1114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1153,
											"end": 1155,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1224,
											"end": 1231,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1213,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1222,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 1179,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1232,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1232,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 775,
											"end": 1249,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1373,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1368,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 1357,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1346,
											"end": 1369,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1374,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 1377,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 1339,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1497,
											"end": 1498,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1572,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1555,
											"end": 1564,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1573,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 1522,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1583,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1512,
											"end": 1583,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1468,
											"end": 1593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1255,
											"end": 1600,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1671,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1714,
											"end": 1716,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1702,
											"end": 1711,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1700,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1689,
											"end": 1712,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1717,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 1720,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 1682,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1840,
											"end": 1841,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1910,
											"end": 1917,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1908,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 1865,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1918,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1918,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1811,
											"end": 1928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1935,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2415,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1941,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2054,
											"end": 2063,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2045,
											"end": 2052,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2064,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2153,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2034,
											"end": 2153,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2072,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2072,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2072,
											"end": 2151,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2072,
											"end": 2151,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2072,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2153,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 2034,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2192,
											"end": 2193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2262,
											"end": 2269,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2259,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2242,
											"end": 2251,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2238,
											"end": 2260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 2217,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2270,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2207,
											"end": 2270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2163,
											"end": 2280,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2321,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2345,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2390,
											"end": 2397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2381,
											"end": 2387,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2379,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2366,
											"end": 2388,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2345,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2345,
											"end": 2398,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2345,
											"end": 2398,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 2345,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2398,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2398,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2290,
											"end": 2408,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2415,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2415,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2415,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2415,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1941,
											"end": 2415,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2421,
											"end": 2539,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 2421,
											"end": 2539,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2526,
											"end": 2531,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 2508,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2506,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2496,
											"end": 2533,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2421,
											"end": 2539,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2545,
											"end": 2654,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2545,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2641,
											"end": 2646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2626,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2626,
											"end": 2647,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2626,
											"end": 2647,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2626,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2621,
											"end": 2624,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2648,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2654,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2660,
											"end": 2819,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2660,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2806,
											"end": 2811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2761,
											"end": 2812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 2761,
											"end": 2812,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2812,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 2761,
											"end": 2812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2749,
											"end": 2813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2660,
											"end": 2819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2660,
											"end": 2819,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2660,
											"end": 2819,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2825,
											"end": 2972,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 2825,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2959,
											"end": 2964,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2920,
											"end": 2965,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2920,
											"end": 2965,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2920,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2915,
											"end": 2918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2908,
											"end": 2966,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2825,
											"end": 2972,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2978,
											"end": 3344,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2978,
											"end": 3344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3123,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3205,
											"end": 3207,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3200,
											"end": 3203,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3141,
											"end": 3208,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3141,
											"end": 3208,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 3141,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3208,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3134,
											"end": 3208,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3306,
											"end": 3309,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3217,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 3217,
											"end": 3310,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3217,
											"end": 3310,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 3217,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3335,
											"end": 3337,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3330,
											"end": 3333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3326,
											"end": 3338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3319,
											"end": 3338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3344,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3344,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3344,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3572,
											"end": 3575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 3513,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3580,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3678,
											"end": 3681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 3589,
											"end": 3682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3709,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3702,
											"end": 3705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3698,
											"end": 3710,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 3710,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3691,
											"end": 3710,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3350,
											"end": 3716,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3722,
											"end": 4088,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 3722,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3864,
											"end": 3867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 3944,
											"end": 3947,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3885,
											"end": 3952,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 3885,
											"end": 3952,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3885,
											"end": 3952,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 3885,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3952,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3878,
											"end": 3952,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 4050,
											"end": 4053,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 3961,
											"end": 4054,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3961,
											"end": 4054,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 3961,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4081,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4077,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4070,
											"end": 4082,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4082,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4063,
											"end": 4082,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 4088,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 4088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 4088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3722,
											"end": 4088,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4094,
											"end": 4460,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 4094,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4236,
											"end": 4239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4257,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 4316,
											"end": 4319,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4257,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4257,
											"end": 4324,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4257,
											"end": 4324,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 4257,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4324,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4250,
											"end": 4324,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4422,
											"end": 4425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4333,
											"end": 4426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 4333,
											"end": 4426,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4333,
											"end": 4426,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 4333,
											"end": 4426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4451,
											"end": 4453,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4446,
											"end": 4449,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4442,
											"end": 4454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4435,
											"end": 4454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4094,
											"end": 4460,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4094,
											"end": 4460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4094,
											"end": 4460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4094,
											"end": 4460,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4466,
											"end": 4832,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 4466,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4608,
											"end": 4611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4693,
											"end": 4695,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4688,
											"end": 4691,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4629,
											"end": 4696,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 4629,
											"end": 4696,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4629,
											"end": 4696,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 4629,
											"end": 4696,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4622,
											"end": 4696,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4622,
											"end": 4696,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4794,
											"end": 4797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 4705,
											"end": 4798,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4705,
											"end": 4798,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 4705,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4825,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4821,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4814,
											"end": 4826,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4826,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4807,
											"end": 4826,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4832,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4466,
											"end": 4832,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4838,
											"end": 5204,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 4838,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5065,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5060,
											"end": 5063,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 5001,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5077,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5166,
											"end": 5169,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5077,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 5077,
											"end": 5170,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5077,
											"end": 5170,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 5077,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5190,
											"end": 5193,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5186,
											"end": 5198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5198,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5198,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 5204,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 5204,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 5204,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 5204,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5210,
											"end": 5576,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 5210,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5352,
											"end": 5355,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5373,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 5432,
											"end": 5435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5373,
											"end": 5440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5373,
											"end": 5440,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5373,
											"end": 5440,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 5373,
											"end": 5440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5440,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5440,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5449,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5538,
											"end": 5541,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5449,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 5449,
											"end": 5542,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5449,
											"end": 5542,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 5449,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5569,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5562,
											"end": 5565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5558,
											"end": 5570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5551,
											"end": 5570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5551,
											"end": 5570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5576,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5576,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5576,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5210,
											"end": 5576,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5582,
											"end": 5700,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 5582,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5687,
											"end": 5692,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5669,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 5669,
											"end": 5693,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5669,
											"end": 5693,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 5669,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5694,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5582,
											"end": 5700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5582,
											"end": 5700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5582,
											"end": 5700,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5706,
											"end": 5928,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 5706,
											"end": 5928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5799,
											"end": 5803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5837,
											"end": 5839,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5826,
											"end": 5835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5814,
											"end": 5840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 5918,
											"end": 5919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5903,
											"end": 5920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5900,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "tag",
											"source": 5,
											"value": "269"
										},
										{
											"begin": 5850,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5928,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5928,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5928,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5934,
											"end": 6376,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5934,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6083,
											"end": 6087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6110,
											"end": 6119,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6098,
											"end": 6124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6098,
											"end": 6124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6202,
											"end": 6203,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6200,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6178,
											"end": 6184,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6134,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6134,
											"end": 6205,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6134,
											"end": 6205,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 6134,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6272,
											"end": 6281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6286,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6265,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6215,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6215,
											"end": 6287,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6215,
											"end": 6287,
											"name": "tag",
											"source": 5,
											"value": "272"
										},
										{
											"begin": 6215,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6297,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 6365,
											"end": 6367,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6354,
											"end": 6363,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6368,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6341,
											"end": 6347,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6297,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6297,
											"end": 6369,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6297,
											"end": 6369,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 6297,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 6376,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 6376,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 6376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 6376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 6376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 6376,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5934,
											"end": 6376,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6382,
											"end": 6840,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6382,
											"end": 6840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6579,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6566,
											"end": 6575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6554,
											"end": 6580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6658,
											"end": 6659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6656,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 6660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 6640,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6590,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6590,
											"end": 6661,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6590,
											"end": 6661,
											"name": "tag",
											"source": 5,
											"value": "275"
										},
										{
											"begin": 6590,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6747,
											"end": 6749,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6732,
											"end": 6750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6723,
											"end": 6729,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6671,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 6671,
											"end": 6751,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6671,
											"end": 6751,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 6671,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6761,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6818,
											"end": 6827,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6814,
											"end": 6832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6805,
											"end": 6811,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6761,
											"end": 6833,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 6761,
											"end": 6833,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6761,
											"end": 6833,
											"name": "tag",
											"source": 5,
											"value": "277"
										},
										{
											"begin": 6761,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6840,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6840,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6382,
											"end": 6840,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6846,
											"end": 7178,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6846,
											"end": 7178,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6967,
											"end": 6971,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7007,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6994,
											"end": 7003,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6982,
											"end": 7008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6982,
											"end": 7008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7018,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7086,
											"end": 7087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7084,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7071,
											"end": 7088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7062,
											"end": 7068,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7018,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 7018,
											"end": 7089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7018,
											"end": 7089,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 7018,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7099,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 7167,
											"end": 7169,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7156,
											"end": 7165,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7152,
											"end": 7170,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7143,
											"end": 7149,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7099,
											"end": 7171,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 7099,
											"end": 7171,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7099,
											"end": 7171,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 7099,
											"end": 7171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 7178,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 7178,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 7178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 7178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 7178,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6846,
											"end": 7178,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7184,
											"end": 7626,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 7184,
											"end": 7626,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7333,
											"end": 7337,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7373,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7360,
											"end": 7369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7374,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 7374,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 7452,
											"end": 7453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7441,
											"end": 7450,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7437,
											"end": 7454,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 7384,
											"end": 7455,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7384,
											"end": 7455,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 7384,
											"end": 7455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7465,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 7533,
											"end": 7535,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7522,
											"end": 7531,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7518,
											"end": 7536,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7465,
											"end": 7537,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 7465,
											"end": 7537,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7465,
											"end": 7537,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 7465,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 7615,
											"end": 7617,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7604,
											"end": 7613,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7591,
											"end": 7597,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 7547,
											"end": 7619,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7547,
											"end": 7619,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 7547,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7184,
											"end": 7626,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7184,
											"end": 7626,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7184,
											"end": 7626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7184,
											"end": 7626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7184,
											"end": 7626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7184,
											"end": 7626,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7184,
											"end": 7626,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7632,
											"end": 7842,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 7632,
											"end": 7842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7719,
											"end": 7723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7759,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7746,
											"end": 7755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7742,
											"end": 7760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7734,
											"end": 7760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7734,
											"end": 7760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7770,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7832,
											"end": 7833,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7830,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7817,
											"end": 7834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7814,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7770,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7770,
											"end": 7835,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7770,
											"end": 7835,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 7770,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7842,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7632,
											"end": 7842,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7848,
											"end": 8098,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 7848,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7955,
											"end": 7959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7993,
											"end": 7995,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7982,
											"end": 7991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7978,
											"end": 7996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 7996,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 7996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8088,
											"end": 8089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8077,
											"end": 8086,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8073,
											"end": 8090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8064,
											"end": 8070,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8006,
											"end": 8091,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8006,
											"end": 8091,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8006,
											"end": 8091,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 8006,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7848,
											"end": 8098,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7848,
											"end": 8098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7848,
											"end": 8098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7848,
											"end": 8098,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7848,
											"end": 8098,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8104,
											"end": 8523,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8104,
											"end": 8523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8270,
											"end": 8274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8308,
											"end": 8310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8297,
											"end": 8306,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8293,
											"end": 8311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8285,
											"end": 8311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8357,
											"end": 8366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8351,
											"end": 8355,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8347,
											"end": 8367,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8341,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8368,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8385,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 8511,
											"end": 8515,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8385,
											"end": 8516,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 8385,
											"end": 8516,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8385,
											"end": 8516,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 8385,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8516,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8516,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8104,
											"end": 8523,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8529,
											"end": 8948,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 8529,
											"end": 8948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8695,
											"end": 8699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8733,
											"end": 8735,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8722,
											"end": 8731,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8718,
											"end": 8736,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8710,
											"end": 8736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8710,
											"end": 8736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8782,
											"end": 8791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8776,
											"end": 8780,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8772,
											"end": 8792,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8768,
											"end": 8769,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8757,
											"end": 8766,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8753,
											"end": 8770,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8746,
											"end": 8793,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 8936,
											"end": 8940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 8810,
											"end": 8941,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8810,
											"end": 8941,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 8810,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8802,
											"end": 8941,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8802,
											"end": 8941,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8948,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8948,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8948,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8948,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9120,
											"end": 9124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9160,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9147,
											"end": 9156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9143,
											"end": 9161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9135,
											"end": 9161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9135,
											"end": 9161,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9201,
											"end": 9205,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9197,
											"end": 9217,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9193,
											"end": 9194,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9191,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9195,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9171,
											"end": 9218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9235,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 9361,
											"end": 9365,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9235,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9235,
											"end": 9366,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9235,
											"end": 9366,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 9235,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9366,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8954,
											"end": 9373,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9379,
											"end": 9798,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 9379,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9545,
											"end": 9549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9583,
											"end": 9585,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9572,
											"end": 9581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9568,
											"end": 9586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9560,
											"end": 9586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9560,
											"end": 9586,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9626,
											"end": 9630,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9622,
											"end": 9642,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9618,
											"end": 9619,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9616,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9603,
											"end": 9620,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9643,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9660,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 9786,
											"end": 9790,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9660,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 9660,
											"end": 9791,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9660,
											"end": 9791,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 9660,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9652,
											"end": 9791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9652,
											"end": 9791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9379,
											"end": 9798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9379,
											"end": 9798,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9379,
											"end": 9798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9379,
											"end": 9798,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9804,
											"end": 10223,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 9804,
											"end": 10223,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9970,
											"end": 9974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10010,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9997,
											"end": 10006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9993,
											"end": 10011,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 10011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9985,
											"end": 10011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10057,
											"end": 10066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10055,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10047,
											"end": 10067,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10043,
											"end": 10044,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10032,
											"end": 10041,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10028,
											"end": 10045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10021,
											"end": 10068,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 10211,
											"end": 10215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10085,
											"end": 10216,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10085,
											"end": 10216,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 10085,
											"end": 10216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10077,
											"end": 10216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10077,
											"end": 10216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 10223,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 10223,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 10223,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9804,
											"end": 10223,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10395,
											"end": 10399,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10422,
											"end": 10431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10418,
											"end": 10436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10410,
											"end": 10436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10410,
											"end": 10436,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10482,
											"end": 10491,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10476,
											"end": 10480,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10472,
											"end": 10492,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10468,
											"end": 10469,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10457,
											"end": 10466,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10453,
											"end": 10470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10446,
											"end": 10493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10510,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10636,
											"end": 10640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10510,
											"end": 10641,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 10510,
											"end": 10641,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10510,
											"end": 10641,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 10510,
											"end": 10641,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10502,
											"end": 10641,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10502,
											"end": 10641,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10229,
											"end": 10648,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10654,
											"end": 11073,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 10654,
											"end": 11073,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10820,
											"end": 10824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10858,
											"end": 10860,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10847,
											"end": 10856,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10843,
											"end": 10861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10835,
											"end": 10861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10835,
											"end": 10861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10907,
											"end": 10916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10901,
											"end": 10905,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10897,
											"end": 10917,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10893,
											"end": 10894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10882,
											"end": 10891,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10878,
											"end": 10895,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10871,
											"end": 10918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10935,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 11061,
											"end": 11065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10935,
											"end": 11066,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10935,
											"end": 11066,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10935,
											"end": 11066,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 10935,
											"end": 11066,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 11066,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 11066,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 11073,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 11073,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 11073,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10654,
											"end": 11073,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11079,
											"end": 11301,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 11079,
											"end": 11301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11172,
											"end": 11176,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11212,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11199,
											"end": 11208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11195,
											"end": 11213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11187,
											"end": 11213,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11187,
											"end": 11213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11223,
											"end": 11294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 11291,
											"end": 11292,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11280,
											"end": 11289,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11276,
											"end": 11293,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11267,
											"end": 11273,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 11223,
											"end": 11294,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 11223,
											"end": 11294,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11223,
											"end": 11294,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 11223,
											"end": 11294,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11301,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11301,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11079,
											"end": 11301,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11388,
											"end": 11557,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 11388,
											"end": 11557,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11472,
											"end": 11483,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11506,
											"end": 11512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11501,
											"end": 11504,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11494,
											"end": 11513,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11546,
											"end": 11550,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11541,
											"end": 11544,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11537,
											"end": 11551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11522,
											"end": 11551,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11522,
											"end": 11551,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11388,
											"end": 11557,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11388,
											"end": 11557,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11388,
											"end": 11557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11388,
											"end": 11557,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11388,
											"end": 11557,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11563,
											"end": 11868,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 11563,
											"end": 11868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11603,
											"end": 11606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11622,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 11640,
											"end": 11641,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11622,
											"end": 11642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 11622,
											"end": 11642,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11622,
											"end": 11642,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 11622,
											"end": 11642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11617,
											"end": 11642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11617,
											"end": 11642,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11656,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 11674,
											"end": 11675,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11656,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 11656,
											"end": 11676,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11656,
											"end": 11676,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 11656,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11651,
											"end": 11676,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11651,
											"end": 11676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11810,
											"end": 11811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11742,
											"end": 11808,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11738,
											"end": 11812,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 11735,
											"end": 11736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11732,
											"end": 11813,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 11836,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 11836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 11729,
											"end": 11836,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11729,
											"end": 11836,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 11729,
											"end": 11836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11860,
											"end": 11861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11857,
											"end": 11858,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 11862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11846,
											"end": 11862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11846,
											"end": 11862,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11868,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11868,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11563,
											"end": 11868,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11874,
											"end": 12059,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 11874,
											"end": 12059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11931,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 11949,
											"end": 11950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11931,
											"end": 11951,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 11931,
											"end": 11951,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11931,
											"end": 11951,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 11931,
											"end": 11951,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11926,
											"end": 11951,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11926,
											"end": 11951,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11965,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 11983,
											"end": 11984,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11965,
											"end": 11985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 11965,
											"end": 11985,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11965,
											"end": 11985,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 11965,
											"end": 11985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11960,
											"end": 11985,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11960,
											"end": 11985,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12004,
											"end": 12005,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11994,
											"end": 12029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 11994,
											"end": 12029,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 12009,
											"end": 12027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11994,
											"end": 12029,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 11994,
											"end": 12029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12051,
											"end": 12052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12048,
											"end": 12049,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12044,
											"end": 12053,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12039,
											"end": 12053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12039,
											"end": 12053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 12059,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 12059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 12059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 12059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11874,
											"end": 12059,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12065,
											"end": 12413,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 12065,
											"end": 12413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12105,
											"end": 12112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12128,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 12146,
											"end": 12147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12128,
											"end": 12148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 12128,
											"end": 12148,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12128,
											"end": 12148,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 12128,
											"end": 12148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12123,
											"end": 12148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12123,
											"end": 12148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12162,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 12180,
											"end": 12181,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12162,
											"end": 12182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 12162,
											"end": 12182,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12162,
											"end": 12182,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 12162,
											"end": 12182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12157,
											"end": 12182,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12157,
											"end": 12182,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12350,
											"end": 12351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12282,
											"end": 12348,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12278,
											"end": 12352,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12275,
											"end": 12276,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12272,
											"end": 12353,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 12267,
											"end": 12268,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12260,
											"end": 12269,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12253,
											"end": 12270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12249,
											"end": 12354,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12246,
											"end": 12377,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12246,
											"end": 12377,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 12246,
											"end": 12377,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 12357,
											"end": 12375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12246,
											"end": 12377,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 12246,
											"end": 12377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12405,
											"end": 12406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12398,
											"end": 12407,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 12387,
											"end": 12407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12387,
											"end": 12407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12065,
											"end": 12413,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12065,
											"end": 12413,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12065,
											"end": 12413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12065,
											"end": 12413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12065,
											"end": 12413,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12419,
											"end": 12610,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 12419,
											"end": 12610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12459,
											"end": 12463,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12479,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 12497,
											"end": 12498,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12479,
											"end": 12499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 12479,
											"end": 12499,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12479,
											"end": 12499,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 12479,
											"end": 12499,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12474,
											"end": 12499,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12474,
											"end": 12499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12513,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 12531,
											"end": 12532,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12513,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 12513,
											"end": 12533,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12513,
											"end": 12533,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 12513,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12508,
											"end": 12533,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12508,
											"end": 12533,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12552,
											"end": 12553,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12549,
											"end": 12550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12546,
											"end": 12554,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12577,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 12543,
											"end": 12577,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12557,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 12557,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 12557,
											"end": 12575,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12557,
											"end": 12575,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 12557,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12543,
											"end": 12577,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 12543,
											"end": 12577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12599,
											"end": 12600,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12595,
											"end": 12604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12587,
											"end": 12604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12587,
											"end": 12604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12419,
											"end": 12610,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 12419,
											"end": 12610,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12419,
											"end": 12610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12419,
											"end": 12610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12419,
											"end": 12610,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12616,
											"end": 12712,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 12616,
											"end": 12712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12653,
											"end": 12660,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12682,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 12700,
											"end": 12705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12682,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 12682,
											"end": 12706,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12682,
											"end": 12706,
											"name": "tag",
											"source": 5,
											"value": "331"
										},
										{
											"begin": 12682,
											"end": 12706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12671,
											"end": 12706,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12671,
											"end": 12706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12616,
											"end": 12712,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12616,
											"end": 12712,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12616,
											"end": 12712,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12616,
											"end": 12712,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12718,
											"end": 12808,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 12718,
											"end": 12808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12752,
											"end": 12759,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12795,
											"end": 12800,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12788,
											"end": 12801,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12781,
											"end": 12802,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12770,
											"end": 12802,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12770,
											"end": 12802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12718,
											"end": 12808,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12718,
											"end": 12808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12718,
											"end": 12808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12718,
											"end": 12808,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12814,
											"end": 12940,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 12814,
											"end": 12940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12851,
											"end": 12858,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12891,
											"end": 12933,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12884,
											"end": 12889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12880,
											"end": 12934,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 12869,
											"end": 12934,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12869,
											"end": 12934,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12814,
											"end": 12940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12814,
											"end": 12940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12814,
											"end": 12940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12814,
											"end": 12940,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12946,
											"end": 13023,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 12946,
											"end": 13023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12983,
											"end": 12990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13012,
											"end": 13017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13001,
											"end": 13017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13001,
											"end": 13017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12946,
											"end": 13023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 12946,
											"end": 13023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 12946,
											"end": 13023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12946,
											"end": 13023,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13029,
											"end": 13169,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 13029,
											"end": 13169,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13093,
											"end": 13102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13126,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 13157,
											"end": 13162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13126,
											"end": 13163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 13126,
											"end": 13163,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13126,
											"end": 13163,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 13126,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13113,
											"end": 13163,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13113,
											"end": 13163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13029,
											"end": 13169,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13029,
											"end": 13169,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13029,
											"end": 13169,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13029,
											"end": 13169,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13175,
											"end": 13296,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 13175,
											"end": 13296,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13233,
											"end": 13242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13266,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 13284,
											"end": 13289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13266,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 13266,
											"end": 13290,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13266,
											"end": 13290,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 13266,
											"end": 13290,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13253,
											"end": 13290,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13253,
											"end": 13290,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13175,
											"end": 13296,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13175,
											"end": 13296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13175,
											"end": 13296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13175,
											"end": 13296,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13302,
											"end": 13428,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 13302,
											"end": 13428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13352,
											"end": 13361,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13385,
											"end": 13422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 13416,
											"end": 13421,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13385,
											"end": 13422,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 13385,
											"end": 13422,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13385,
											"end": 13422,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 13385,
											"end": 13422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13372,
											"end": 13422,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13372,
											"end": 13422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13302,
											"end": 13428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13302,
											"end": 13428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13302,
											"end": 13428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13302,
											"end": 13428,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13434,
											"end": 13547,
											"name": "tag",
											"source": 5,
											"value": "343"
										},
										{
											"begin": 13434,
											"end": 13547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13484,
											"end": 13493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 13535,
											"end": 13540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 13517,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13504,
											"end": 13541,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13504,
											"end": 13541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13434,
											"end": 13547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13434,
											"end": 13547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13434,
											"end": 13547,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13434,
											"end": 13547,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13553,
											"end": 13733,
											"name": "tag",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 13553,
											"end": 13733,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13601,
											"end": 13678,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13598,
											"end": 13599,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13591,
											"end": 13679,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13698,
											"end": 13702,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 13695,
											"end": 13696,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13688,
											"end": 13703,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13722,
											"end": 13726,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13719,
											"end": 13720,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13712,
											"end": 13727,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13739,
											"end": 13919,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 13739,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13787,
											"end": 13864,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13784,
											"end": 13785,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13777,
											"end": 13865,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13884,
											"end": 13888,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 13881,
											"end": 13882,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13874,
											"end": 13889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13908,
											"end": 13912,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13905,
											"end": 13906,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13898,
											"end": 13913,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14048,
											"end": 14165,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 14048,
											"end": 14165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14157,
											"end": 14158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14154,
											"end": 14155,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14147,
											"end": 14159,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14171,
											"end": 14341,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 14171,
											"end": 14341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14311,
											"end": 14333,
											"name": "PUSH",
											"source": 5,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 14307,
											"end": 14308,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14299,
											"end": 14305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14295,
											"end": 14309,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14288,
											"end": 14334,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14171,
											"end": 14341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14171,
											"end": 14341,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14347,
											"end": 14572,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 14347,
											"end": 14572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14487,
											"end": 14521,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 14483,
											"end": 14484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14475,
											"end": 14481,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14471,
											"end": 14485,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14464,
											"end": 14522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14556,
											"end": 14564,
											"name": "PUSH",
											"source": 5,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14551,
											"end": 14553,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14543,
											"end": 14549,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14539,
											"end": 14554,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14532,
											"end": 14565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14347,
											"end": 14572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14347,
											"end": 14572,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14578,
											"end": 14752,
											"name": "tag",
											"source": 5,
											"value": "243"
										},
										{
											"begin": 14578,
											"end": 14752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14718,
											"end": 14744,
											"name": "PUSH",
											"source": 5,
											"value": "4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000"
										},
										{
											"begin": 14714,
											"end": 14715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14706,
											"end": 14712,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14702,
											"end": 14716,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14695,
											"end": 14745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14578,
											"end": 14752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14578,
											"end": 14752,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14758,
											"end": 14924,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 14758,
											"end": 14924,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14898,
											"end": 14916,
											"name": "PUSH",
											"source": 5,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 14894,
											"end": 14895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14886,
											"end": 14892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14882,
											"end": 14896,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14875,
											"end": 14917,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14758,
											"end": 14924,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14758,
											"end": 14924,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 14930,
											"end": 15112,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 14930,
											"end": 15112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15070,
											"end": 15104,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 15066,
											"end": 15067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15058,
											"end": 15064,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15054,
											"end": 15068,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15047,
											"end": 15105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14930,
											"end": 15112,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14930,
											"end": 15112,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15118,
											"end": 15285,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 15118,
											"end": 15285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15258,
											"end": 15277,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F20616374697665206465706F736974000000000000000000000000000000"
										},
										{
											"begin": 15254,
											"end": 15255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15246,
											"end": 15252,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15242,
											"end": 15256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15278,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15118,
											"end": 15285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15118,
											"end": 15285,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15291,
											"end": 15459,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 15291,
											"end": 15459,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15431,
											"end": 15451,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420656E6F756768206465706F7369740000000000000000000000000000"
										},
										{
											"begin": 15427,
											"end": 15428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15419,
											"end": 15425,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15415,
											"end": 15429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15408,
											"end": 15452,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15291,
											"end": 15459,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15291,
											"end": 15459,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15465,
											"end": 15587,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 15465,
											"end": 15587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15538,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 15556,
											"end": 15561,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15538,
											"end": 15562,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 15538,
											"end": 15562,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15538,
											"end": 15562,
											"name": "tag",
											"source": 5,
											"value": "359"
										},
										{
											"begin": 15538,
											"end": 15562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15531,
											"end": 15536,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15528,
											"end": 15563,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15518,
											"end": 15581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 15518,
											"end": 15581,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15577,
											"end": 15578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15574,
											"end": 15575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15567,
											"end": 15579,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15518,
											"end": 15581,
											"name": "tag",
											"source": 5,
											"value": "360"
										},
										{
											"begin": 15518,
											"end": 15581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15465,
											"end": 15587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15465,
											"end": 15587,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15593,
											"end": 15709,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 15593,
											"end": 15709,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15663,
											"end": 15684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 15678,
											"end": 15683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15663,
											"end": 15684,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 15663,
											"end": 15684,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15663,
											"end": 15684,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 15663,
											"end": 15684,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15656,
											"end": 15661,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15653,
											"end": 15685,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15643,
											"end": 15703,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 15643,
											"end": 15703,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15699,
											"end": 15700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15696,
											"end": 15697,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15689,
											"end": 15701,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15643,
											"end": 15703,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 15643,
											"end": 15703,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15593,
											"end": 15709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15593,
											"end": 15709,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 15715,
											"end": 15837,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 15715,
											"end": 15837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15788,
											"end": 15812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 15806,
											"end": 15811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15788,
											"end": 15812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 15788,
											"end": 15812,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 15788,
											"end": 15812,
											"name": "tag",
											"source": 5,
											"value": "365"
										},
										{
											"begin": 15788,
											"end": 15812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15781,
											"end": 15786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15778,
											"end": 15813,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15831,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 15768,
											"end": 15831,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15827,
											"end": 15828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15824,
											"end": 15825,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15817,
											"end": 15829,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15768,
											"end": 15831,
											"name": "tag",
											"source": 5,
											"value": "366"
										},
										{
											"begin": 15768,
											"end": 15831,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15715,
											"end": 15837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15715,
											"end": 15837,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptedToken()": "451c3d80",
							"calculateRewards(address,uint256)": "beb8314c",
							"claim(uint256)": "379607f5",
							"compound(uint256)": "aa5f7e26",
							"deposit(uint256,uint256)": "e2bbb158",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Compound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"AcesStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"staking.sol\":{\"keccak256\":\"0xdf396a28cce0d608b1fdea41c007fa2e0858cec328865f42468864176fb5966f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af4129ac32a5757d8eeb9d2aae1553fd6cca83f5e597c5dbbbc006268a1c58c6\",\"dweb:/ipfs/QmXks6XQwkT1tv1G5zpp52nbRrh53qkxsLtv9y1ovaUrsv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "staking.sol:AcesStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "staking.sol:AcesStaking",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 308,
								"contract": "staking.sol:AcesStaking",
								"label": "acceptedToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)274"
							},
							{
								"astId": 327,
								"contract": "staking.sol:AcesStaking",
								"label": "userLevelDeposit",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(User)315_storage))"
							},
							{
								"astId": 332,
								"contract": "staking.sol:AcesStaking",
								"label": "levelInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(Level)320_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)274": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(User)315_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct AcesStaking.User))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(User)315_storage)"
							},
							"t_mapping(t_uint256,t_struct(Level)320_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.Level)",
								"numberOfBytes": "32",
								"value": "t_struct(Level)320_storage"
							},
							"t_mapping(t_uint256,t_struct(User)315_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)315_storage"
							},
							"t_struct(Level)320_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.Level",
								"members": [
									{
										"astId": 317,
										"contract": "staking.sol:AcesStaking",
										"label": "APY",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 319,
										"contract": "staking.sol:AcesStaking",
										"label": "lockPeriod",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(User)315_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.User",
								"members": [
									{
										"astId": 310,
										"contract": "staking.sol:AcesStaking",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 312,
										"contract": "staking.sol:AcesStaking",
										"label": "started",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 314,
										"contract": "staking.sol:AcesStaking",
										"label": "unlockTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 297,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								296
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Pausable": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 297,
							"src": "115:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "617:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								296
							],
							"name": "Pausable",
							"nameLocation": "605:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 115,
									"name": "Paused",
									"nameLocation": "715:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:1"
									},
									"src": "709:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 120,
									"name": "Unpaused",
									"nameLocation": "826:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:1"
									},
									"src": "820:32:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "858:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 121,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "971:32:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "981:15:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:1"
									},
									"scope": 196,
									"src": "957:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1151:31:1",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "1161:14:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:1"
									},
									"scope": 196,
									"src": "1098:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1393:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 144,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1412:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:1"
											},
											{
												"id": 150,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 152,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:1"
									},
									"src": "1368:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1659:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 163,
									"name": "whenPaused",
									"nameLocation": "1646:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:1"
									},
									"src": "1637:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1912:66:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1946:25:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1898:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 196,
									"src": "1863:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2158:69:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2207:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "2193:27:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "2147:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:1"
									},
									"scope": 196,
									"src": "2110:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "587:1642:1",
							"usedErrors": []
						}
					],
					"src": "90:2140:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 274,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 274,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 274,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 274,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 274,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 274,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 264,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 273,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 275,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 281,
												"id": 284,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 296,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 290,
												"id": 293,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 296,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"AcesStaking": [
							676
						],
						"Context": [
							296
						],
						"IERC20": [
							274
						],
						"Ownable": [
							104
						],
						"Pausable": [
							196
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 275,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 105,
							"src": "114:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 197,
							"src": "167:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 302,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "248:7:4"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:4"
								},
								{
									"baseName": {
										"id": 304,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "257:8:4"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "257:8:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								196,
								104,
								296
							],
							"name": "AcesStaking",
							"nameLocation": "233:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "451c3d80",
									"id": 308,
									"mutability": "mutable",
									"name": "acceptedToken",
									"nameLocation": "331:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "317:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$274",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 307,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 306,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 274,
											"src": "317:6:4"
										},
										"referencedDeclaration": 274,
										"src": "317:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$274",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AcesStaking.User",
									"id": 315,
									"members": [
										{
											"constant": false,
											"id": 310,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "417:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "409:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "409:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 312,
											"mutability": "mutable",
											"name": "started",
											"nameLocation": "442:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "434:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 311,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "434:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 314,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "467:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "459:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 313,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "459:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "394:4:4",
									"nodeType": "StructDefinition",
									"scope": 676,
									"src": "387:97:4",
									"visibility": "public"
								},
								{
									"canonicalName": "AcesStaking.Level",
									"id": 320,
									"members": [
										{
											"constant": false,
											"id": 317,
											"mutability": "mutable",
											"name": "APY",
											"nameLocation": "523:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 320,
											"src": "515:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 316,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "515:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 319,
											"mutability": "mutable",
											"name": "lockPeriod",
											"nameLocation": "544:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 320,
											"src": "536:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 318,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "536:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Level",
									"nameLocation": "499:5:4",
									"nodeType": "StructDefinition",
									"scope": 676,
									"src": "492:69:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 327,
									"mutability": "mutable",
									"name": "userLevelDeposit",
									"nameLocation": "665:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "620:61:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
									},
									"typeName": {
										"id": 326,
										"keyType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "628:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "620:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
										},
										"valueType": {
											"id": 325,
											"keyType": {
												"id": 322,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "647:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "639:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
												"typeString": "mapping(uint256 => struct AcesStaking.User)"
											},
											"valueType": {
												"id": 324,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 323,
													"name": "User",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 315,
													"src": "658:4:4"
												},
												"referencedDeclaration": 315,
												"src": "658:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$315_storage_ptr",
													"typeString": "struct AcesStaking.User"
												}
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 332,
									"mutability": "mutable",
									"name": "levelInfo",
									"nameLocation": "713:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 676,
									"src": "687:35:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
										"typeString": "mapping(uint256 => struct AcesStaking.Level)"
									},
									"typeName": {
										"id": 331,
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "695:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "687:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
											"typeString": "mapping(uint256 => struct AcesStaking.Level)"
										},
										"valueType": {
											"id": 330,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 329,
												"name": "Level",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 320,
												"src": "706:5:4"
											},
											"referencedDeclaration": 320,
											"src": "706:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Level_$320_storage_ptr",
												"typeString": "struct AcesStaking.Level"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 340,
									"name": "Deposit",
									"nameLocation": "750:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "767:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "759:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "781:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "773:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "796:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "788:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:45:4"
									},
									"src": "744:60:4"
								},
								{
									"anonymous": false,
									"id": 348,
									"name": "Withdraw",
									"nameLocation": "815:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "833:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "825:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "825:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "847:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "839:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "854:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:45:4"
									},
									"src": "809:61:4"
								},
								{
									"anonymous": false,
									"id": 356,
									"name": "Claim",
									"nameLocation": "881:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "896:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "888:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "910:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "902:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "925:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "917:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:45:4"
									},
									"src": "875:58:4"
								},
								{
									"anonymous": false,
									"id": 364,
									"name": "Compound",
									"nameLocation": "944:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "962:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "954:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "976:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "968:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "991:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "983:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:45:4"
									},
									"src": "938:61:4"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1081:47:4",
										"statements": [
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 369,
														"name": "acceptedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1091:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 371,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "1114:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 370,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1107:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$274_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1107:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"src": "1091:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$274",
														"typeString": "contract IERC20"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "1091:30:4"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1072:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1064:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1063:17:4"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:0:4"
									},
									"scope": 676,
									"src": "1052:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1214:25:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 381,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "1224:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1224:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "1224:8:4"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1204:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1204:9:4"
										}
									],
									"name": "pause",
									"nameLocation": "1188:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1194:2:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1214:0:4"
									},
									"scope": 676,
									"src": "1179:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "1286:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 390,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1296:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1296:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "1296:10:4"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 387,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1276:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1276:9:4"
										}
									],
									"name": "unpause",
									"nameLocation": "1258:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1266:2:4"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1286:0:4"
									},
									"scope": 676,
									"src": "1249:64:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1621:426:4",
										"statements": [
											{
												"assignments": [
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "1639:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1631:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 403,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1631:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"expression": {
														"id": 405,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1652:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1652:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1631:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 411,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1707:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 414,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1727:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AcesStaking_$676",
																		"typeString": "contract AcesStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AcesStaking_$676",
																		"typeString": "contract AcesStaking"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1719:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1719:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1719:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1734:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 408,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "1680:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "1680:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1680:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "1680:62:4"
											},
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 419,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1753:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 422,
																"indexExpression": {
																	"id": 420,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1770:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1753:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 423,
															"indexExpression": {
																"id": 421,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1782:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1753:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "1753:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 425,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "1801:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1753:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1753:55:4"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 428,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1818:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"id": 429,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1835:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1818:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 432,
															"indexExpression": {
																"id": 430,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1847:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1818:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "1818:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 434,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1866:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1866:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1818:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "1818:63:4"
											},
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 438,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1891:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 439,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1908:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1891:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 442,
															"indexExpression": {
																"id": 440,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1920:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1891:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "1891:47:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 444,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1941:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1941:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 446,
																	"name": "levelInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1959:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																		"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																	}
																},
																"id": 448,
																"indexExpression": {
																	"id": 447,
																	"name": "_level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "1969:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1959:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Level_$320_storage",
																	"typeString": "struct AcesStaking.Level storage ref"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lockPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 319,
															"src": "1959:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1941:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1891:96:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1891:96:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 454,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "2012:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "2024:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 456,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "2032:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2003:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "EmitStatement",
												"src": "1998:42:4"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 400,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1607:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1607:13:4"
										}
									],
									"name": "deposit",
									"nameLocation": "1558:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1575:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1567:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "1592:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1584:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:33:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1621:0:4"
									},
									"scope": 676,
									"src": "1549:498:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "2113:508:4",
										"statements": [
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "2131:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "2123:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 467,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2123:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"expression": {
														"id": 469,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2144:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2144:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2123:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 473,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2172:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 475,
																		"indexExpression": {
																			"id": 474,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "2189:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2172:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 477,
																	"indexExpression": {
																		"id": 476,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "2201:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2172:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "2172:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 479,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2220:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2172:55:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206465706f736974",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2229:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															},
															"value": "Not enough deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2164:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2164:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "2164:86:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 485,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2268:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 487,
																		"indexExpression": {
																			"id": 486,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "2285:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2268:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 489,
																	"indexExpression": {
																		"id": 488,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "2297:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2268:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "2268:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 491,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2319:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2319:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2268:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f736974206e6f7420756e6c6f636b656420796574",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
																"typeString": "literal_string \"Deposit not unlocked yet\""
															},
															"value": "Deposit not unlocked yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
																"typeString": "literal_string \"Deposit not unlocked yet\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2260:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2260:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2260:103:4"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2382:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "2374:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2374:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"id": 500,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2409:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "2421:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "2392:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2392:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2374:54:4"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 504,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2447:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 507,
																"indexExpression": {
																	"id": 505,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "2464:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2447:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 506,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2476:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2447:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "2447:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 510,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2495:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2447:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2447:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2536:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 517,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2548:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 518,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "2558:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2548:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 513,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2513:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2513:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "2513:53:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 523,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2591:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2603:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 525,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2606:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2582:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2582:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "EmitStatement",
												"src": "2577:37:4"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2062:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2080:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "2072:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2072:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "2097:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "2089:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2089:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2071:33:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2113:0:4"
									},
									"scope": 676,
									"src": "2053:568:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "2667:306:4",
										"statements": [
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "2685:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "2677:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2677:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"expression": {
														"id": 536,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2698:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2698:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2677:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 540,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2726:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 542,
																		"indexExpression": {
																			"id": 541,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 535,
																			"src": "2743:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2726:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 544,
																	"indexExpression": {
																		"id": 543,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "2755:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2726:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 545,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "2726:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2773:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2726:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2776:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2718:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2718:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2718:78:4"
											},
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2815:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "2807:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2807:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2842:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2854:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "2825:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2825:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2807:54:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2895:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "2907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 558,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2872:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2872:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2872:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "2872:43:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 566,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2938:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2950:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 568,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "2958:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2931:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2931:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "2926:40:4"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2636:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "2651:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "2643:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2643:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2642:16:4"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 676,
									"src": "2627:346:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "3022:321:4",
										"statements": [
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "3040:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "3032:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 577,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3032:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 581,
												"initialValue": {
													"expression": {
														"id": 579,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3053:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3053:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3032:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 583,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "3081:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 585,
																		"indexExpression": {
																			"id": 584,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 578,
																			"src": "3098:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3081:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 587,
																	"indexExpression": {
																		"id": 586,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 574,
																		"src": "3110:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3081:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 588,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "3081:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3128:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3081:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3131:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3073:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3073:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "3073:78:4"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "3170:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 616,
														"src": "3162:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 594,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3162:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 600,
												"initialValue": {
													"arguments": [
														{
															"id": 597,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "3197:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 598,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "3209:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 596,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "3180:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3180:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3162:54:4"
											},
											{
												"expression": {
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 601,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "3227:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 604,
																"indexExpression": {
																	"id": 602,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "3244:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3227:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 605,
															"indexExpression": {
																"id": 603,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "3256:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3227:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "3227:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 607,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "3275:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3227:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "3227:55:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 611,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "3308:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "3320:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 613,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "3328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 610,
														"name": "Compound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "3298:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3298:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "EmitStatement",
												"src": "3293:43:4"
											}
										]
									},
									"functionSelector": "aa5f7e26",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compound",
									"nameLocation": "2988:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "3006:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2998:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:16:4"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3022:0:4"
									},
									"scope": 676,
									"src": "2979:364:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "3436:376:4",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "3454:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "3446:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 626,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3446:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 628,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3467:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 629,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3467:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 630,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "3485:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 632,
																"indexExpression": {
																	"id": 631,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "3502:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3485:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 634,
															"indexExpression": {
																"id": 633,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "3509:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3485:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "3485:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3467:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3446:78:4"
											},
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3542:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "3534:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3534:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 640,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3552:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 642,
															"indexExpression": {
																"id": 641,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "3569:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3552:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 644,
														"indexExpression": {
															"id": 643,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3576:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3552:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 310,
													"src": "3552:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3534:57:4"
											},
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "APY",
														"nameLocation": "3610:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "3602:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3602:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 653,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 649,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3616:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 651,
														"indexExpression": {
															"id": 650,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3626:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3616:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "APY",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 317,
													"src": "3616:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3602:35:4"
											},
											{
												"assignments": [
													655
												],
												"declarations": [
													{
														"constant": false,
														"id": 655,
														"mutability": "mutable",
														"name": "rewardsPerSecond",
														"nameLocation": "3656:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "3648:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 654,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3648:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 665,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 661,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 656,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 639,
																				"src": "3677:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 657,
																				"name": "APY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 648,
																				"src": "3687:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3677:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 659,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3676:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3694:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "3676:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 662,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3675:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3703:8:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "3675:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3648:63:4"
											},
											{
												"assignments": [
													667
												],
												"declarations": [
													{
														"constant": false,
														"id": 667,
														"mutability": "mutable",
														"name": "rewardsEarned",
														"nameLocation": "3729:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "3721:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 666,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3721:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 668,
														"name": "timeStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "3745:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 669,
														"name": "rewardsPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "3758:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3745:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3721:53:4"
											},
											{
												"expression": {
													"id": 672,
													"name": "rewardsEarned",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 667,
													"src": "3792:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 625,
												"id": 673,
												"nodeType": "Return",
												"src": "3785:20:4"
											}
										]
									},
									"functionSelector": "beb8314c",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "3358:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3384:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "3376:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "3399:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "3391:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3391:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3375:31:4"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "3428:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:9:4"
									},
									"scope": 676,
									"src": "3349:463:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 677,
							"src": "224:3594:4",
							"usedErrors": []
						}
					],
					"src": "32:3786:4"
				},
				"id": 4
			}
		}
	}
}