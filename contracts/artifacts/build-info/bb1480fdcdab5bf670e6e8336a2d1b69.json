{
	"id": "bb1480fdcdab5bf670e6e8336a2d1b69",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ncontract AcesStaking is Ownable, Pausable {\n    // Address of the token for the staking.\n    IERC20 public acceptedToken;\n    \n    // Struc with user details.\n    struct User {\n        uint256 balance;\n        uint256 started;\n        uint256 unlockTime;\n    }  \n\n    struct Level {\n        uint256 APY;\n        uint256 lockPeriod;\n    } \n    \n    // Mapping for user details of  each class.\n    mapping(address => mapping(uint256 => User)) public userLevelDeposit;\n    mapping(uint256 => Level) public levelInfo;\n\n    // Events.\n    event Deposit (address user, uint256 class, uint256 amount);\n    event Withdraw (address user, uint256 class, uint256 amount);\n    event Claim (address user, uint256 class, uint256 amount);\n    event Compound (address user, uint256 class, uint256 amount);\n \n    // Set the token to be staked.\n    constructor(address _token ) {\n        acceptedToken = IERC20(_token);\n    }   \n    \n    // Pause and Unpause the contract\n    function pause () public onlyOwner {\n        _pause();\n    }\n    \n    function unpause () public onlyOwner {\n        _unpause();\n    } \n\n    function deposit (uint256 _amount, uint256 _level) public whenNotPaused {\n        address _msgSender = msg.sender;       \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        userLevelDeposit[_msgSender][_level].balance += _amount;\n        userLevelDeposit[_msgSender][_level].started += block.timestamp;\n        userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod;\n\n        emit Deposit (_msgSender, _level, _amount);\n    }\n\n    function withdraw (uint256 _amount, uint256 _level) public  {\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\");\n        require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n        \n        userLevelDeposit[_msgSender][_level].balance -= _amount;\n\n        acceptedToken.transfer(_msgSender, _amount + rewards);\n\n        emit Withdraw(_msgSender, 0, _amount);\n    }\n\n    function claim (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        userLevelDeposit[_msgSender][_level].started += block.timestamp;\n\n        acceptedToken.transfer(_msgSender, rewards);\n\n        emit Claim (_msgSender, _level, rewards);\n    }\n\n    function compound (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        userLevelDeposit[_msgSender][_level].balance += rewards;\n        userLevelDeposit[_msgSender][_level].started += block.timestamp;\n\n        emit Compound (_msgSender, _level, rewards);\n    }\n\n    function calculateRewards (address _user, uint256 _level) public view returns (uint256){\n        uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].started;\n        uint256 balance = userLevelDeposit[_user][_level].balance; \n        uint256 APY = levelInfo[_level].APY;\n\n        uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days;\n        uint256 rewardsEarned = timeStaked * rewardsPerSecond;\n\n        return rewardsEarned;\n    }    \n\n    function getUserInfo(address _user) external view returns(User memory level0, User memory level1, User memory level2){\n        level0 = userLevelDeposit[_user][0];\n        level1 = userLevelDeposit[_user][1];\n        level2 = userLevelDeposit[_user][2];            \n    }\n\n    function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){\n        level0 = levelInfo[0];\n        level1 = levelInfo[1];\n        level2 = levelInfo[2];     \n    }\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"AcesStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Compound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptedToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLevelsInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level1",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level2",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level1",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level2",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "levelInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userLevelDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "started",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":224:4236  contract AcesStaking is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":1055:1131  constructor(address _token ) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":991:996  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  0x01\n    /* \"staking.sol\":1094:1124  acceptedToken = IERC20(_token) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"staking.sol\":224:4236  contract AcesStaking is Ownable, Pausable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"staking.sol\":224:4236  contract AcesStaking is Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":224:4236  contract AcesStaking is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xe2bbb158\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe788cee5\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xedf501ad\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x8456cb59\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaa5f7e26\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbeb8314c\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x451c3d80\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x451c3d80\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6386c1c7\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x259ee752\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":620:688  mapping(address => mapping(uint256 => User)) public userLevelDeposit */\n    tag_3:\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      0x02\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap2\n      swap1\n      swap3\n      add\n      sload\n      dup4\n      jump\n    tag_22:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7862:7887   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":7918:7920   */\n      0x20\n        /* \"#utility.yul\":7903:7921   */\n      dup5\n      add\n        /* \"#utility.yul\":7896:7930   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7946:7964   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7939:7973   */\n      mstore\n        /* \"#utility.yul\":7850:7852   */\n      0x60\n        /* \"#utility.yul\":7835:7853   */\n      add\n        /* \"staking.sol\":620:688  mapping(address => mapping(uint256 => User)) public userLevelDeposit */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":2401:2821  function claim (uint256 _level) external{... */\n    tag_4:\n      tag_28\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      stop\n        /* \"staking.sol\":1252:1316  function unpause () public onlyOwner {... */\n    tag_5:\n      tag_28\n      tag_33\n      jump\t// in\n        /* \"staking.sol\":1827:2395  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_6:\n      tag_28\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n    tag_7:\n      sload(0x01)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_38:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1883:1915   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1865:1916   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1853:1855   */\n      0x20\n        /* \"#utility.yul\":1838:1856   */\n      add\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n      tag_26\n        /* \"#utility.yul\":1719:1922   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_8:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":3459:3473   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3452:3474   */\n      iszero\n        /* \"#utility.yul\":3434:3475   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3422:3424   */\n      0x20\n        /* \"#utility.yul\":3407:3425   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      tag_26\n        /* \"#utility.yul\":3294:3481   */\n      jump\n        /* \"staking.sol\":3743:4014  function getUserInfo(address _user) external view returns(User memory level0, User memory level1, User memory level2){... */\n    tag_9:\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_26\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_28\n      tag_53\n      jump\t// in\n        /* \"staking.sol\":1182:1242  function pause () public onlyOwner {... */\n    tag_11:\n      tag_28\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_38)\n        /* \"staking.sol\":2827:3264  function compound (uint256 _level) external{... */\n    tag_13:\n      tag_28\n      tag_61\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"staking.sol\":3270:3733  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_14:\n      tag_63\n      tag_64\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      mload(0x40)\n        /* \"#utility.yul\":7371:7396   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7359:7361   */\n      0x20\n        /* \"#utility.yul\":7344:7362   */\n      add\n        /* \"staking.sol\":3270:3733  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n      tag_26\n        /* \"#utility.yul\":7225:7402   */\n      jump\n        /* \"staking.sol\":1323:1821  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_15:\n      tag_28\n      tag_69\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"staking.sol\":4020:4234  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){... */\n    tag_16:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"staking.sol\":4139:4160  level0 = levelInfo[0] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n        /* \"staking.sol\":4148:4160  levelInfo[0] */\n      0x3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff\n        /* \"staking.sol\":4139:4160  level0 = levelInfo[0] */\n      sload\n      dup2\n      mstore\n      sload(0x3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f00)\n      dup2\n      dup5\n      add\n      mstore\n        /* \"staking.sol\":4170:4191  level1 = levelInfo[1] */\n      dup4\n      mload\n      dup1\n      dup6\n      add\n      dup6\n      mstore\n        /* \"staking.sol\":4179:4191  levelInfo[1] */\n      0xa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c\n        /* \"staking.sol\":4170:4191  level1 = levelInfo[1] */\n      sload\n      dup2\n      mstore\n      sload(0xa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054d)\n      dup2\n      dup6\n      add\n      mstore\n        /* \"staking.sol\":4220:4221  2 */\n      0x02\n        /* \"staking.sol\":4210:4222  levelInfo[2] */\n      swap1\n      swap3\n      mstore\n        /* \"staking.sol\":4148:4157  levelInfo */\n      0x03\n        /* \"staking.sol\":4210:4222  levelInfo[2] */\n      dup4\n      mstore\n        /* \"staking.sol\":4201:4222  level2 = levelInfo[2] */\n      dup4\n      mload\n      dup1\n      dup6\n      add\n      dup6\n      mstore\n        /* \"staking.sol\":4210:4222  levelInfo[2] */\n      0xc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d\n        /* \"staking.sol\":4201:4222  level2 = levelInfo[2] */\n      sload\n      dup2\n      mstore\n      sload(0xc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4e)\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"staking.sol\":4020:4234  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){... */\n      swap3\n      mload\n      tag_26\n      swap4\n        /* \"staking.sol\":4139:4160  level0 = levelInfo[0] */\n      swap3\n        /* \"staking.sol\":4201:4222  level2 = levelInfo[2] */\n      swap1\n        /* \"staking.sol\":4020:4234  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){... */\n      tag_74\n      jump\t// in\n        /* \"staking.sol\":694:736  mapping(uint256 => Level) public levelInfo */\n    tag_17:\n      tag_75\n      tag_76\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_76:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_75:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7581:7606   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":7637:7639   */\n      0x20\n        /* \"#utility.yul\":7622:7640   */\n      dup4\n      add\n        /* \"#utility.yul\":7615:7649   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7554:7572   */\n      add\n        /* \"staking.sol\":694:736  mapping(uint256 => Level) public levelInfo */\n      tag_26\n        /* \"#utility.yul\":7407:7655   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_28\n      tag_81\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"staking.sol\":2401:2821  function claim (uint256 _level) external{... */\n    tag_31:\n        /* \"staking.sol\":2472:2482  msg.sender */\n      caller\n        /* \"staking.sol\":2451:2469  address _msgSender */\n      0x00\n        /* \"staking.sol\":2500:2528  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":2500:2516  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2500:2528  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2500:2536  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":2500:2544  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":2492:2570  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"staking.sol\":2492:2570  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5707:5728   */\n      mstore\n        /* \"#utility.yul\":5764:5766   */\n      0x11\n        /* \"#utility.yul\":5744:5762   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5737:5767   */\n      mstore\n      shl(0x7a, 0x139bc81858dd1a5d994819195c1bdcda5d)\n        /* \"#utility.yul\":5783:5801   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5776:5823   */\n      mstore\n        /* \"#utility.yul\":5840:5858   */\n      0x64\n      add\n        /* \"staking.sol\":2492:2570  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"staking.sol\":2581:2596  uint256 rewards */\n      0x00\n        /* \"staking.sol\":2599:2635  calculateRewards(_msgSender, _level) */\n      tag_87\n        /* \"staking.sol\":2616:2626  _msgSender */\n      dup3\n        /* \"staking.sol\":2628:2634  _level */\n      dup5\n        /* \"staking.sol\":2599:2615  calculateRewards */\n      tag_65\n        /* \"staking.sol\":2599:2635  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2646:2674  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2646:2662  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2646:2674  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2646:2682  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":2646:2690  userLevelDeposit[_msgSender][_level].started */\n      0x01\n      add\n        /* \"staking.sol\":2646:2709  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      dup1\n      sload\n        /* \"staking.sol\":2581:2635  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":2694:2709  block.timestamp */\n      timestamp\n      swap3\n        /* \"staking.sol\":2646:2690  userLevelDeposit[_msgSender][_level].started */\n      swap1\n      swap2\n        /* \"staking.sol\":2646:2674  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":2646:2709  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_88\n      swap1\n        /* \"staking.sol\":2694:2709  block.timestamp */\n      dup5\n      swap1\n        /* \"staking.sol\":2646:2709  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_89\n      jump\t// in\n    tag_88:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":2720:2733  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":2720:2763  acceptedToken.transfer(_msgSender, rewards) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2857:2889   */\n      dup5\n      dup2\n      and\n        /* \"staking.sol\":2720:2763  acceptedToken.transfer(_msgSender, rewards) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2839:2890   */\n      mstore\n        /* \"#utility.yul\":2906:2924   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2899:2933   */\n      dup5\n      swap1\n      mstore\n        /* \"staking.sol\":2720:2733  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":2720:2742  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2812:2830   */\n      0x44\n      add\n        /* \"staking.sol\":2720:2763  acceptedToken.transfer(_msgSender, rewards) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      pop\n        /* \"staking.sol\":2779:2814  Claim (_msgSender, _level, rewards) */\n      0x34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7\n        /* \"staking.sol\":2786:2796  _msgSender */\n      dup3\n        /* \"staking.sol\":2798:2804  _level */\n      dup5\n        /* \"staking.sol\":2806:2813  rewards */\n      dup4\n        /* \"staking.sol\":2779:2814  Claim (_msgSender, _level, rewards) */\n      mload(0x40)\n      tag_97\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":2441:2821  {... */\n      pop\n      pop\n        /* \"staking.sol\":2401:2821  function claim (uint256 _level) external{... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":1252:1316  function unpause () public onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_105\n      jump\t// in\n    tag_103:\n        /* \"staking.sol\":1299:1309  _unpause() */\n      tag_107\n        /* \"staking.sol\":1299:1307  _unpause */\n      tag_108\n        /* \"staking.sol\":1299:1309  _unpause() */\n      jump\t// in\n    tag_107:\n        /* \"staking.sol\":1252:1316  function unpause () public onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":1827:2395  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_37:\n        /* \"staking.sol\":1918:1928  msg.sender */\n      caller\n        /* \"staking.sol\":1897:1915  address _msgSender */\n      0x00\n        /* \"staking.sol\":1946:1974  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":1946:1962  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1946:1974  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":1946:1982  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":1946:1990  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":1946:2001  userLevelDeposit[_msgSender][_level].balance >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"staking.sol\":1938:2024  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6071:6073   */\n      0x20\n        /* \"staking.sol\":1938:2024  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6053:6074   */\n      mstore\n        /* \"#utility.yul\":6110:6112   */\n      0x12\n        /* \"#utility.yul\":6090:6108   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6083:6113   */\n      mstore\n      shl(0x72, 0x139bdd08195b9bdd59da0819195c1bdcda5d)\n        /* \"#utility.yul\":6129:6147   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6122:6170   */\n      mstore\n        /* \"#utility.yul\":6187:6205   */\n      0x64\n      add\n        /* \"staking.sol\":1938:2024  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      tag_85\n        /* \"#utility.yul\":5869:6211   */\n      jump\n        /* \"staking.sol\":1938:2024  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2042:2070  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2042:2058  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2042:2070  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":2042:2078  userLevelDeposit[_msgSender][_level] */\n      dup7\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"staking.sol\":2042:2089  userLevelDeposit[_msgSender][_level].unlockTime */\n      add\n      sload\n        /* \"staking.sol\":2093:2108  block.timestamp */\n      timestamp\n      lt\n        /* \"staking.sol\":2042:2108  userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp */\n      iszero\n        /* \"staking.sol\":2034:2137  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4666:4668   */\n      0x20\n        /* \"staking.sol\":2034:2137  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4648:4669   */\n      mstore\n        /* \"#utility.yul\":4705:4707   */\n      0x18\n        /* \"#utility.yul\":4685:4703   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4678:4708   */\n      mstore\n        /* \"#utility.yul\":4744:4770   */\n      0x4465706f736974206e6f7420756e6c6f636b6564207965740000000000000000\n        /* \"#utility.yul\":4724:4742   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4717:4771   */\n      mstore\n        /* \"#utility.yul\":4788:4806   */\n      0x64\n      add\n        /* \"staking.sol\":2034:2137  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      tag_85\n        /* \"#utility.yul\":4464:4812   */\n      jump\n        /* \"staking.sol\":2034:2137  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n    tag_113:\n        /* \"staking.sol\":2148:2163  uint256 rewards */\n      0x00\n        /* \"staking.sol\":2166:2202  calculateRewards(_msgSender, _level) */\n      tag_116\n        /* \"staking.sol\":2183:2193  _msgSender */\n      dup3\n        /* \"staking.sol\":2195:2201  _level */\n      dup5\n        /* \"staking.sol\":2166:2182  calculateRewards */\n      tag_65\n        /* \"staking.sol\":2166:2202  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2221:2249  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2221:2237  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2221:2249  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2221:2257  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":2221:2276  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":2148:2202  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":2269:2276  _amount */\n      dup7\n      swap3\n        /* \"staking.sol\":2221:2257  userLevelDeposit[_msgSender][_level] */\n      swap1\n      swap2\n        /* \"staking.sol\":2221:2249  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":2221:2276  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      tag_117\n      swap1\n        /* \"staking.sol\":2269:2276  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":2221:2276  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      tag_118\n      jump\t// in\n    tag_117:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":2287:2300  acceptedToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"staking.sol\":2287:2309  acceptedToken.transfer */\n      0xa9059cbb\n        /* \"staking.sol\":2310:2320  _msgSender */\n      dup4\n        /* \"staking.sol\":2322:2339  _amount + rewards */\n      tag_119\n        /* \"staking.sol\":2332:2339  rewards */\n      dup5\n        /* \"staking.sol\":2322:2329  _amount */\n      dup9\n        /* \"staking.sol\":2322:2339  _amount + rewards */\n      tag_89\n      jump\t// in\n    tag_119:\n        /* \"staking.sol\":2287:2340  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2857:2889   */\n      swap1\n      swap3\n      and\n        /* \"staking.sol\":2287:2340  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2839:2890   */\n      mstore\n        /* \"#utility.yul\":2906:2924   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2899:2933   */\n      mstore\n        /* \"#utility.yul\":2812:2830   */\n      0x44\n      add\n        /* \"staking.sol\":2287:2340  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_124:\n      pop\n        /* \"staking.sol\":2356:2388  Withdraw(_msgSender, 0, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"staking.sol\":2365:2375  _msgSender */\n      dup3\n        /* \"staking.sol\":2377:2378  0 */\n      0x00\n        /* \"staking.sol\":2380:2387  _amount */\n      dup7\n        /* \"staking.sol\":2356:2388  Withdraw(_msgSender, 0, _amount) */\n      mload(0x40)\n      tag_125\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":1887:2395  {... */\n      pop\n      pop\n        /* \"staking.sol\":1827:2395  function withdraw (uint256 _amount, uint256 _level) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":3743:4014  function getUserInfo(address _user) external view returns(User memory level0, User memory level1, User memory level2){... */\n    tag_49:\n        /* \"staking.sol\":3801:3819  User memory level0 */\n      tag_128\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_128:\n        /* \"staking.sol\":3821:3839  User memory level1 */\n      tag_130\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_130:\n        /* \"staking.sol\":3841:3859  User memory level2 */\n      tag_131\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_131:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3879:3902  userLevelDeposit[_user] */\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3879:3895  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3879:3902  userLevelDeposit[_user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":3879:3905  userLevelDeposit[_user][0] */\n      dup5\n      dup1\n      mstore\n      dup1\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"staking.sol\":3870:3905  level0 = userLevelDeposit[_user][0] */\n      dup3\n      mload\n      0x60\n      dup1\n      dup3\n      add\n      dup6\n      mstore\n      dup3\n      sload\n      dup3\n      mstore\n      0x01\n      dup1\n      dup5\n      add\n      sload\n      dup4\n      dup9\n      add\n      mstore\n      swap3\n      dup8\n      add\n      sload\n      dup3\n      dup7\n      add\n      mstore\n        /* \"staking.sol\":3924:3950  userLevelDeposit[_user][1] */\n      dup3\n      dup9\n      mstore\n      dup4\n      dup7\n      mstore\n      dup5\n      dup9\n      keccak256\n        /* \"staking.sol\":3915:3950  level1 = userLevelDeposit[_user][1] */\n      dup6\n      mload\n      dup1\n      dup4\n      add\n      dup8\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      dup2\n      dup6\n      add\n      sload\n      dup2\n      dup10\n      add\n      mstore\n      swap1\n      dup9\n      add\n      sload\n      dup2\n      dup8\n      add\n      mstore\n        /* \"staking.sol\":3969:3995  userLevelDeposit[_user][2] */\n      dup8\n      dup10\n      mstore\n      swap4\n      dup7\n      mstore\n      swap7\n      dup5\n      swap1\n      keccak256\n        /* \"staking.sol\":3960:3995  level2 = userLevelDeposit[_user][2] */\n      dup5\n      mload\n      swap8\n      dup9\n      add\n      dup6\n      mstore\n      dup1\n      sload\n      dup9\n      mstore\n      swap2\n      dup3\n      add\n      sload\n      swap5\n      dup8\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      swap1\n      swap4\n      add\n      sload\n      swap1\n      dup5\n      add\n      mstore\n        /* \"staking.sol\":3870:3905  level0 = userLevelDeposit[_user][0] */\n      swap3\n        /* \"staking.sol\":3915:3950  level1 = userLevelDeposit[_user][1] */\n      swap1\n      swap2\n        /* \"staking.sol\":3960:3995  level2 = userLevelDeposit[_user][2] */\n      swap1\n        /* \"staking.sol\":3743:4014  function getUserInfo(address _user) external view returns(User memory level0, User memory level1, User memory level2){... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_105\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"staking.sol\":1182:1242  function pause () public onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_105\n      jump\t// in\n    tag_144:\n        /* \"staking.sol\":1227:1235  _pause() */\n      tag_107\n        /* \"staking.sol\":1227:1233  _pause */\n      tag_148\n        /* \"staking.sol\":1227:1235  _pause() */\n      jump\t// in\n        /* \"staking.sol\":2827:3264  function compound (uint256 _level) external{... */\n    tag_62:\n        /* \"staking.sol\":2901:2911  msg.sender */\n      caller\n        /* \"staking.sol\":2880:2898  address _msgSender */\n      0x00\n        /* \"staking.sol\":2929:2957  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":2929:2945  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2929:2957  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2929:2965  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":2929:2973  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":2921:2999  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5725:5727   */\n      0x20\n        /* \"staking.sol\":2921:2999  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5707:5728   */\n      mstore\n        /* \"#utility.yul\":5764:5766   */\n      0x11\n        /* \"#utility.yul\":5744:5762   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5737:5767   */\n      mstore\n      shl(0x7a, 0x139bc81858dd1a5d994819195c1bdcda5d)\n        /* \"#utility.yul\":5783:5801   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5776:5823   */\n      mstore\n        /* \"#utility.yul\":5840:5858   */\n      0x64\n      add\n        /* \"staking.sol\":2921:2999  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_85\n        /* \"#utility.yul\":5523:5864   */\n      jump\n        /* \"staking.sol\":2921:2999  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n    tag_151:\n        /* \"staking.sol\":3010:3025  uint256 rewards */\n      0x00\n        /* \"staking.sol\":3028:3064  calculateRewards(_msgSender, _level) */\n      tag_153\n        /* \"staking.sol\":3045:3055  _msgSender */\n      dup3\n        /* \"staking.sol\":3057:3063  _level */\n      dup5\n        /* \"staking.sol\":3028:3044  calculateRewards */\n      tag_65\n        /* \"staking.sol\":3028:3064  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_153:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3075:3103  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3075:3091  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3075:3103  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3075:3111  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":3075:3130  userLevelDeposit[_msgSender][_level].balance += rewards */\n      dup1\n      sload\n        /* \"staking.sol\":3010:3064  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"staking.sol\":3075:3111  userLevelDeposit[_msgSender][_level] */\n      swap1\n      swap2\n        /* \"staking.sol\":3075:3103  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":3075:3130  userLevelDeposit[_msgSender][_level].balance += rewards */\n      tag_154\n      swap1\n        /* \"staking.sol\":3010:3064  uint256 rewards = calculateRewards(_msgSender, _level) */\n      dup5\n      swap1\n        /* \"staking.sol\":3075:3130  userLevelDeposit[_msgSender][_level].balance += rewards */\n      tag_89\n      jump\t// in\n    tag_154:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3140:3168  userLevelDeposit[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3140:3156  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3140:3168  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3140:3176  userLevelDeposit[_msgSender][_level] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":3140:3184  userLevelDeposit[_msgSender][_level].started */\n      0x01\n      add\n        /* \"staking.sol\":3140:3203  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      dup1\n      sload\n        /* \"staking.sol\":3188:3203  block.timestamp */\n      timestamp\n      swap3\n        /* \"staking.sol\":3140:3168  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":3140:3203  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_155\n      swap1\n        /* \"staking.sol\":3188:3203  block.timestamp */\n      dup5\n      swap1\n        /* \"staking.sol\":3140:3203  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_89\n      jump\t// in\n    tag_155:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":3219:3257  Compound (_msgSender, _level, rewards) */\n      mload(0x40)\n      0x0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d186873\n      swap1\n      tag_97\n      swap1\n        /* \"staking.sol\":3229:3239  _msgSender */\n      dup5\n      swap1\n        /* \"staking.sol\":3241:3247  _level */\n      dup7\n      swap1\n        /* \"staking.sol\":3249:3256  rewards */\n      dup6\n      swap1\n        /* \"staking.sol\":3219:3257  Compound (_msgSender, _level, rewards) */\n      tag_126\n      jump\t// in\n        /* \"staking.sol\":3270:3733  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3406:3429  userLevelDeposit[_user] */\n      dup3\n      and\n        /* \"staking.sol\":3349:3356  uint256 */\n      0x00\n        /* \"staking.sol\":3406:3429  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3406:3422  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3406:3429  userLevelDeposit[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3406:3437  userLevelDeposit[_user][_level] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":3406:3445  userLevelDeposit[_user][_level].started */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":3349:3356  uint256 */\n      dup2\n      swap1\n        /* \"staking.sol\":3388:3445  block.timestamp - userLevelDeposit[_user][_level].started */\n      tag_158\n      swap1\n        /* \"staking.sol\":3388:3403  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3388:3445  block.timestamp - userLevelDeposit[_user][_level].started */\n      tag_118\n      jump\t// in\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3473:3496  userLevelDeposit[_user] */\n      dup6\n      and\n        /* \"staking.sol\":3455:3470  uint256 balance */\n      0x00\n        /* \"staking.sol\":3473:3496  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3473:3489  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3473:3496  userLevelDeposit[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3473:3504  userLevelDeposit[_user][_level] */\n      dup8\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3473:3512  userLevelDeposit[_user][_level].balance */\n      sload\n        /* \"staking.sol\":3537:3546  levelInfo */\n      0x03\n        /* \"staking.sol\":3537:3554  levelInfo[_level] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"staking.sol\":3537:3558  levelInfo[_level].APY */\n      sload\n        /* \"staking.sol\":3367:3445  uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].started */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":3473:3512  userLevelDeposit[_user][_level].balance */\n      swap2\n        /* \"staking.sol\":3537:3558  levelInfo[_level].APY */\n      swap1\n        /* \"staking.sol\":3624:3632  365 days */\n      0x01e13380\n        /* \"staking.sol\":3615:3620  10000 */\n      0x2710\n        /* \"staking.sol\":3598:3611  balance * APY */\n      tag_159\n        /* \"staking.sol\":3537:3558  levelInfo[_level].APY */\n      dup5\n        /* \"staking.sol\":3473:3512  userLevelDeposit[_user][_level].balance */\n      dup7\n        /* \"staking.sol\":3598:3611  balance * APY */\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"staking.sol\":3597:3620  (balance * APY) / 10000 */\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"staking.sol\":3596:3632  ((balance * APY) / 10000) / 365 days */\n      tag_163\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_163:\n        /* \"staking.sol\":3569:3632  uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days */\n      swap1\n      pop\n        /* \"staking.sol\":3642:3663  uint256 rewardsEarned */\n      0x00\n        /* \"staking.sol\":3666:3695  timeStaked * rewardsPerSecond */\n      tag_164\n        /* \"staking.sol\":3569:3632  uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days */\n      dup3\n        /* \"staking.sol\":3666:3676  timeStaked */\n      dup7\n        /* \"staking.sol\":3666:3695  timeStaked * rewardsPerSecond */\n      tag_160\n      jump\t// in\n    tag_164:\n        /* \"staking.sol\":3642:3695  uint256 rewardsEarned = timeStaked * rewardsPerSecond */\n      swap9\n        /* \"staking.sol\":3270:3733  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":1323:1821  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5019:5021   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5001:5022   */\n      mstore\n        /* \"#utility.yul\":5058:5060   */\n      0x10\n        /* \"#utility.yul\":5038:5056   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5031:5061   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5077:5095   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5070:5116   */\n      mstore\n        /* \"#utility.yul\":5133:5151   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_85\n        /* \"#utility.yul\":4817:5157   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_167:\n        /* \"staking.sol\":1454:1467  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":1454:1516  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"staking.sol\":1426:1436  msg.sender */\n      caller\n        /* \"staking.sol\":1454:1516  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2167:2201   */\n      dup2\n      swap1\n      mstore\n        /* \"staking.sol\":1501:1505  this */\n      address\n        /* \"#utility.yul\":2217:2235   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2210:2253   */\n      mstore\n        /* \"#utility.yul\":2269:2287   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2262:2296   */\n      dup6\n      swap1\n      mstore\n        /* \"staking.sol\":1426:1436  msg.sender */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1454:1467  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":1454:1480  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2102:2120   */\n      0x64\n      add\n        /* \"staking.sol\":1454:1516  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_176:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1527:1555  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1527:1543  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1527:1555  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":1527:1563  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":1527:1582  userLevelDeposit[_msgSender][_level].balance += _amount */\n      dup1\n      sload\n        /* \"staking.sol\":1575:1582  _amount */\n      dup6\n      swap3\n        /* \"staking.sol\":1527:1555  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":1527:1582  userLevelDeposit[_msgSender][_level].balance += _amount */\n      tag_177\n      swap1\n        /* \"staking.sol\":1575:1582  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":1527:1582  userLevelDeposit[_msgSender][_level].balance += _amount */\n      tag_89\n      jump\t// in\n    tag_177:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1592:1620  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1592:1608  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1592:1620  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":1592:1628  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":1592:1636  userLevelDeposit[_msgSender][_level].started */\n      0x01\n      add\n        /* \"staking.sol\":1592:1655  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      dup1\n      sload\n        /* \"staking.sol\":1640:1655  block.timestamp */\n      timestamp\n      swap3\n        /* \"staking.sol\":1592:1620  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":1592:1655  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_178\n      swap1\n        /* \"staking.sol\":1640:1655  block.timestamp */\n      dup5\n      swap1\n        /* \"staking.sol\":1592:1655  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_89\n      jump\t// in\n    tag_178:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":1733:1750  levelInfo[_level] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"staking.sol\":1733:1742  levelInfo */\n      0x03\n        /* \"staking.sol\":1733:1750  levelInfo[_level] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":1733:1761  levelInfo[_level].lockPeriod */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":1715:1761  block.timestamp + levelInfo[_level].lockPeriod */\n      tag_179\n      swap1\n        /* \"staking.sol\":1715:1730  block.timestamp */\n      timestamp\n        /* \"staking.sol\":1715:1761  block.timestamp + levelInfo[_level].lockPeriod */\n      tag_89\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1665:1693  userLevelDeposit[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1665:1681  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1665:1693  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":1665:1701  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":1665:1712  userLevelDeposit[_msgSender][_level].unlockTime */\n      add\n        /* \"staking.sol\":1665:1761  userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":1777:1814  Deposit (_msgSender, _level, _amount) */\n      mload\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n      tag_97\n      swap1\n        /* \"staking.sol\":1682:1692  _msgSender */\n      dup4\n      swap1\n        /* \"staking.sol\":1694:1700  _level */\n      dup6\n      swap1\n        /* \"staking.sol\":1806:1813  _amount */\n      dup8\n      swap1\n        /* \"staking.sol\":1777:1814  Deposit (_msgSender, _level, _amount) */\n      tag_126\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_105\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4259:4261   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4241:4262   */\n      mstore\n        /* \"#utility.yul\":4298:4300   */\n      0x26\n        /* \"#utility.yul\":4278:4296   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4271:4301   */\n      mstore\n        /* \"#utility.yul\":4337:4371   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4317:4335   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4310:4372   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4388:4406   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4381:4417   */\n      mstore\n        /* \"#utility.yul\":4434:4453   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_85\n        /* \"#utility.yul\":4057:4459   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3910:3912   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3892:3913   */\n      mstore\n        /* \"#utility.yul\":3949:3951   */\n      0x14\n        /* \"#utility.yul\":3929:3947   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3922:3952   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":3968:3986   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3961:4011   */\n      mstore\n        /* \"#utility.yul\":4028:4046   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_85\n        /* \"#utility.yul\":3708:4052   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n    tag_199:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2178:2183  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2183  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n    tag_203:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1883:1915   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1865:1916   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1853:1855   */\n      0x20\n        /* \"#utility.yul\":1838:1856   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5019:5021   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5001:5022   */\n      mstore\n        /* \"#utility.yul\":5058:5060   */\n      0x10\n        /* \"#utility.yul\":5038:5056   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5031:5061   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5077:5095   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5070:5116   */\n      mstore\n        /* \"#utility.yul\":5133:5151   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_85\n        /* \"#utility.yul\":4817:5157   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_208:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1929  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_214:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_216\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_216:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_48:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_218:\n        /* \"#utility.yul\":343:372   */\n      tag_219\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_214\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:637   */\n    tag_24:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_221:\n        /* \"#utility.yul\":551:580   */\n      tag_222\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_214\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":541:580   */\n      swap5\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":383:637   */\n      jump\t// out\n        /* \"#utility.yul\":642:919   */\n    tag_96:\n        /* \"#utility.yul\":709:715   */\n      0x00\n        /* \"#utility.yul\":762:764   */\n      0x20\n        /* \"#utility.yul\":750:759   */\n      dup3\n        /* \"#utility.yul\":741:748   */\n      dup5\n        /* \"#utility.yul\":737:760   */\n      sub\n        /* \"#utility.yul\":733:765   */\n      slt\n        /* \"#utility.yul\":730:782   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":778:779   */\n      0x00\n        /* \"#utility.yul\":775:776   */\n      dup1\n        /* \"#utility.yul\":768:780   */\n      revert\n        /* \"#utility.yul\":730:782   */\n    tag_224:\n        /* \"#utility.yul\":810:819   */\n      dup2\n        /* \"#utility.yul\":804:820   */\n      mload\n        /* \"#utility.yul\":863:868   */\n      dup1\n        /* \"#utility.yul\":856:869   */\n      iszero\n        /* \"#utility.yul\":849:870   */\n      iszero\n        /* \"#utility.yul\":842:847   */\n      dup2\n        /* \"#utility.yul\":839:871   */\n      eq\n        /* \"#utility.yul\":829:889   */\n      tag_219\n      jumpi\n        /* \"#utility.yul\":885:886   */\n      0x00\n        /* \"#utility.yul\":882:883   */\n      dup1\n        /* \"#utility.yul\":875:887   */\n      revert\n        /* \"#utility.yul\":924:1104   */\n    tag_30:\n        /* \"#utility.yul\":983:989   */\n      0x00\n        /* \"#utility.yul\":1036:1038   */\n      0x20\n        /* \"#utility.yul\":1024:1033   */\n      dup3\n        /* \"#utility.yul\":1015:1022   */\n      dup5\n        /* \"#utility.yul\":1011:1034   */\n      sub\n        /* \"#utility.yul\":1007:1039   */\n      slt\n        /* \"#utility.yul\":1004:1056   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":1052:1053   */\n      0x00\n        /* \"#utility.yul\":1049:1050   */\n      dup1\n        /* \"#utility.yul\":1042:1054   */\n      revert\n        /* \"#utility.yul\":1004:1056   */\n    tag_227:\n      pop\n        /* \"#utility.yul\":1075:1098   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":924:1104   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1357   */\n    tag_36:\n        /* \"#utility.yul\":1177:1183   */\n      0x00\n        /* \"#utility.yul\":1185:1191   */\n      dup1\n        /* \"#utility.yul\":1238:1240   */\n      0x40\n        /* \"#utility.yul\":1226:1235   */\n      dup4\n        /* \"#utility.yul\":1217:1224   */\n      dup6\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1241   */\n      slt\n        /* \"#utility.yul\":1206:1258   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":1254:1255   */\n      0x00\n        /* \"#utility.yul\":1251:1252   */\n      dup1\n        /* \"#utility.yul\":1244:1256   */\n      revert\n        /* \"#utility.yul\":1206:1258   */\n    tag_229:\n      pop\n      pop\n        /* \"#utility.yul\":1277:1300   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1347:1349   */\n      0x20\n        /* \"#utility.yul\":1332:1350   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1319:1351   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1109:1357   */\n      jump\t// out\n        /* \"#utility.yul\":2307:2660   */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2535:2567   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":2517:2568   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2599:2601   */\n      0x20\n        /* \"#utility.yul\":2584:2602   */\n      dup4\n      add\n        /* \"#utility.yul\":2577:2611   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":2642:2644   */\n      0x40\n        /* \"#utility.yul\":2627:2645   */\n      dup3\n      add\n        /* \"#utility.yul\":2620:2654   */\n      mstore\n        /* \"#utility.yul\":2505:2507   */\n      0x60\n        /* \"#utility.yul\":2490:2508   */\n      add\n      swap1\n        /* \"#utility.yul\":2307:2660   */\n      jump\t// out\n        /* \"#utility.yul\":5162:5518   */\n    tag_105:\n        /* \"#utility.yul\":5364:5366   */\n      0x20\n        /* \"#utility.yul\":5346:5367   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5383:5401   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5376:5406   */\n      mstore\n        /* \"#utility.yul\":5442:5476   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5437:5439   */\n      0x40\n        /* \"#utility.yul\":5422:5440   */\n      dup3\n      add\n        /* \"#utility.yul\":5415:5477   */\n      mstore\n        /* \"#utility.yul\":5509:5511   */\n      0x60\n        /* \"#utility.yul\":5494:5512   */\n      add\n      swap1\n        /* \"#utility.yul\":5162:5518   */\n      jump\t// out\n        /* \"#utility.yul\":6216:6720   */\n    tag_74:\n        /* \"#utility.yul\":1433:1445   */\n      dup4\n      mload\n        /* \"#utility.yul\":1421:1446   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1495:1499   */\n      0x20\n        /* \"#utility.yul\":1484:1500   */\n      dup1\n      dup6\n      add\n        /* \"#utility.yul\":1478:1501   */\n      mload\n        /* \"#utility.yul\":1462:1476   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":1455:1502   */\n      mstore\n        /* \"#utility.yul\":1433:1445   */\n      dup4\n      mload\n        /* \"#utility.yul\":6649:6651   */\n      0x40\n        /* \"#utility.yul\":6634:6652   */\n      dup4\n      add\n        /* \"#utility.yul\":1421:1446   */\n      mstore\n        /* \"#utility.yul\":1484:1500   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":1478:1501   */\n      mload\n        /* \"#utility.yul\":1462:1476   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":1455:1502   */\n      mstore\n        /* \"#utility.yul\":1433:1445   */\n      dup3\n      mload\n        /* \"#utility.yul\":6709:6712   */\n      0x80\n        /* \"#utility.yul\":6694:6713   */\n      dup4\n      add\n        /* \"#utility.yul\":1421:1446   */\n      mstore\n        /* \"#utility.yul\":1484:1500   */\n      dup3\n      add\n        /* \"#utility.yul\":1478:1501   */\n      mload\n        /* \"#utility.yul\":1462:1476   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":1455:1502   */\n      mstore\n        /* \"#utility.yul\":6538:6541   */\n      0xc0\n        /* \"#utility.yul\":6523:6542   */\n      dup2\n      add\n        /* \"#utility.yul\":6662:6714   */\n    tag_251:\n        /* \"#utility.yul\":6216:6720   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6725:7220   */\n    tag_51:\n        /* \"#utility.yul\":1583:1595   */\n      dup4\n      mload\n        /* \"#utility.yul\":1571:1596   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1645:1649   */\n      0x20\n        /* \"#utility.yul\":1634:1650   */\n      dup1\n      dup6\n      add\n        /* \"#utility.yul\":1628:1651   */\n      mload\n        /* \"#utility.yul\":1612:1626   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":1605:1652   */\n      mstore\n        /* \"#utility.yul\":1701:1705   */\n      0x40\n        /* \"#utility.yul\":1690:1706   */\n      dup1\n      dup7\n      add\n        /* \"#utility.yul\":1684:1707   */\n      mload\n        /* \"#utility.yul\":1668:1682   */\n      dup2\n      dup5\n      add\n        /* \"#utility.yul\":1661:1708   */\n      mstore\n        /* \"#utility.yul\":1583:1595   */\n      dup5\n      mload\n        /* \"#utility.yul\":7150:7152   */\n      0x60\n        /* \"#utility.yul\":7135:7153   */\n      dup5\n      add\n        /* \"#utility.yul\":1571:1596   */\n      mstore\n        /* \"#utility.yul\":1634:1650   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":1628:1651   */\n      mload\n        /* \"#utility.yul\":1612:1626   */\n      0x80\n      dup5\n      add\n        /* \"#utility.yul\":1605:1652   */\n      mstore\n        /* \"#utility.yul\":1690:1706   */\n      dup5\n      dup2\n      add\n        /* \"#utility.yul\":1684:1707   */\n      mload\n        /* \"#utility.yul\":1668:1682   */\n      0xa0\n      dup5\n      add\n        /* \"#utility.yul\":1661:1708   */\n      mstore\n        /* \"#utility.yul\":1583:1595   */\n      dup4\n      mload\n        /* \"#utility.yul\":7209:7212   */\n      0xc0\n        /* \"#utility.yul\":7194:7213   */\n      dup5\n      add\n        /* \"#utility.yul\":1571:1596   */\n      mstore\n        /* \"#utility.yul\":1634:1650   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":1628:1651   */\n      mload\n        /* \"#utility.yul\":1612:1626   */\n      0xe0\n      dup4\n      add\n        /* \"#utility.yul\":1605:1652   */\n      mstore\n        /* \"#utility.yul\":1690:1706   */\n      dup3\n      add\n        /* \"#utility.yul\":1684:1707   */\n      mload\n        /* \"#utility.yul\":1668:1682   */\n      0x0100\n      dup3\n      add\n        /* \"#utility.yul\":1661:1708   */\n      mstore\n        /* \"#utility.yul\":7041:7044   */\n      0x0120\n        /* \"#utility.yul\":7026:7045   */\n      dup2\n      add\n        /* \"#utility.yul\":7163:7214   */\n      tag_251\n        /* \"#utility.yul\":1513:1714   */\n      jump\n        /* \"#utility.yul\":7984:8112   */\n    tag_89:\n        /* \"#utility.yul\":8024:8027   */\n      0x00\n        /* \"#utility.yul\":8055:8056   */\n      dup3\n        /* \"#utility.yul\":8051:8057   */\n      not\n        /* \"#utility.yul\":8048:8049   */\n      dup3\n        /* \"#utility.yul\":8045:8058   */\n      gt\n        /* \"#utility.yul\":8042:8081   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":8061:8079   */\n      tag_261\n      tag_262\n      jump\t// in\n    tag_261:\n      pop\n        /* \"#utility.yul\":8097:8106   */\n      add\n      swap1\n        /* \"#utility.yul\":7984:8112   */\n      jump\t// out\n        /* \"#utility.yul\":8117:8334   */\n    tag_162:\n        /* \"#utility.yul\":8157:8158   */\n      0x00\n        /* \"#utility.yul\":8183:8184   */\n      dup3\n        /* \"#utility.yul\":8173:8305   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":8227:8237   */\n      0x4e487b71\n        /* \"#utility.yul\":8222:8225   */\n      0xe0\n        /* \"#utility.yul\":8218:8238   */\n      shl\n        /* \"#utility.yul\":8215:8216   */\n      0x00\n        /* \"#utility.yul\":8208:8239   */\n      mstore\n        /* \"#utility.yul\":8262:8266   */\n      0x12\n        /* \"#utility.yul\":8259:8260   */\n      0x04\n        /* \"#utility.yul\":8252:8267   */\n      mstore\n        /* \"#utility.yul\":8290:8294   */\n      0x24\n        /* \"#utility.yul\":8287:8288   */\n      0x00\n        /* \"#utility.yul\":8280:8295   */\n      revert\n        /* \"#utility.yul\":8173:8305   */\n    tag_264:\n      pop\n        /* \"#utility.yul\":8319:8328   */\n      div\n      swap1\n        /* \"#utility.yul\":8117:8334   */\n      jump\t// out\n        /* \"#utility.yul\":8339:8507   */\n    tag_160:\n        /* \"#utility.yul\":8379:8386   */\n      0x00\n        /* \"#utility.yul\":8445:8446   */\n      dup2\n        /* \"#utility.yul\":8441:8442   */\n      0x00\n        /* \"#utility.yul\":8437:8443   */\n      not\n        /* \"#utility.yul\":8433:8447   */\n      div\n        /* \"#utility.yul\":8430:8431   */\n      dup4\n        /* \"#utility.yul\":8427:8448   */\n      gt\n        /* \"#utility.yul\":8422:8423   */\n      dup3\n        /* \"#utility.yul\":8415:8424   */\n      iszero\n        /* \"#utility.yul\":8408:8425   */\n      iszero\n        /* \"#utility.yul\":8404:8449   */\n      and\n        /* \"#utility.yul\":8401:8472   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":8452:8470   */\n      tag_267\n      tag_262\n      jump\t// in\n    tag_267:\n      pop\n        /* \"#utility.yul\":8492:8501   */\n      mul\n      swap1\n        /* \"#utility.yul\":8339:8507   */\n      jump\t// out\n        /* \"#utility.yul\":8512:8637   */\n    tag_118:\n        /* \"#utility.yul\":8552:8556   */\n      0x00\n        /* \"#utility.yul\":8580:8581   */\n      dup3\n        /* \"#utility.yul\":8577:8578   */\n      dup3\n        /* \"#utility.yul\":8574:8582   */\n      lt\n        /* \"#utility.yul\":8571:8605   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":8585:8603   */\n      tag_270\n      tag_262\n      jump\t// in\n    tag_270:\n      pop\n        /* \"#utility.yul\":8622:8631   */\n      sub\n      swap1\n        /* \"#utility.yul\":8512:8637   */\n      jump\t// out\n        /* \"#utility.yul\":8642:8769   */\n    tag_262:\n        /* \"#utility.yul\":8703:8713   */\n      0x4e487b71\n        /* \"#utility.yul\":8698:8701   */\n      0xe0\n        /* \"#utility.yul\":8694:8714   */\n      shl\n        /* \"#utility.yul\":8691:8692   */\n      0x00\n        /* \"#utility.yul\":8684:8715   */\n      mstore\n        /* \"#utility.yul\":8734:8738   */\n      0x11\n        /* \"#utility.yul\":8731:8732   */\n      0x04\n        /* \"#utility.yul\":8724:8739   */\n      mstore\n        /* \"#utility.yul\":8758:8762   */\n      0x24\n        /* \"#utility.yul\":8755:8756   */\n      0x00\n        /* \"#utility.yul\":8748:8763   */\n      revert\n\n    auxdata: 0xa2646970667358221220f2320fe7659cac3229adc6302c908fb7a9f4f3fec5a13ba4fecea2e87428565264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_376": {
									"entryPoint": null,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 106,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x11DF CODESIZE SUB DUP1 PUSH2 0x11DF DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBA JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xEA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x10E6 DUP1 PUSH2 0xF9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xE788CEE5 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xEDF501AD EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x451C3D80 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x259EE752 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH2 0x55F JUMP JUMPDEST PUSH2 0x16E PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x19E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x890 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19E JUMP JUMPDEST PUSH2 0x16E PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF SLOAD DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92F00 SLOAD DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054C SLOAD DUP2 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054D SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP4 MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4D SLOAD DUP2 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4E SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 MLOAD PUSH2 0x152 SWAP4 SWAP3 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0xC71 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x458 DUP3 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP TIMESTAMP SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x493 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51E SWAP2 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x552 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x591 PUSH2 0xD0C JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08195B9BDD59DA0819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 DUP3 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x6AB SWAP1 DUP5 SWAP1 PUSH2 0x1083 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0x6CC DUP5 DUP9 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH2 0x77F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x7B1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x7D5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x7F9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP3 DUP8 ADD SLOAD DUP3 DUP7 ADD MSTORE DUP3 DUP9 MSTORE DUP4 DUP7 MSTORE DUP5 DUP9 KECCAK256 DUP6 MLOAD DUP1 DUP4 ADD DUP8 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP6 ADD SLOAD DUP2 DUP10 ADD MSTORE SWAP1 DUP9 ADD SLOAD DUP2 DUP8 ADD MSTORE DUP8 DUP10 MSTORE SWAP4 DUP7 MSTORE SWAP7 DUP5 SWAP1 KECCAK256 DUP5 MLOAD SWAP8 DUP9 ADD DUP6 MSTORE DUP1 SLOAD DUP9 MSTORE SWAP2 DUP3 ADD SLOAD SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP4 ADD SLOAD SWAP1 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x591 PUSH1 0x0 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x591 PUSH2 0xDF9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95D DUP3 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x995 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD TIMESTAMP SWAP3 SWAP1 PUSH2 0x9D0 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 SWAP1 PUSH2 0x552 SWAP1 DUP5 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0xA3C SWAP1 TIMESTAMP PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0xA7F DUP5 DUP7 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAA1 DUP3 DUP7 PUSH2 0x1064 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xBB9 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD TIMESTAMP SWAP3 SWAP1 PUSH2 0xBF4 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xC15 SWAP1 TIMESTAMP PUSH2 0x102A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x552 SWAP1 DUP4 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH2 0xD09 DUP2 PUSH2 0xDA9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD8C CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB8 DUP3 PUSH2 0xE81 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDB DUP4 PUSH2 0xE81 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x40 DUP4 ADD MSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE DUP3 MLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP3 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP2 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD DUP2 DUP5 ADD MSTORE DUP5 MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP5 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP5 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE DUP4 MLOAD PUSH1 0xC0 DUP5 ADD MSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 DUP2 ADD PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x103D JUMPI PUSH2 0x103D PUSH2 0x109A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x105F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x107E JUMPI PUSH2 0x107E PUSH2 0x109A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1095 JUMPI PUSH2 0x1095 PUSH2 0x109A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE ORIGIN 0xF 0xE7 PUSH6 0x9CAC3229ADC6 ADDRESS 0x2C SWAP1 DUP16 0xB7 0xA9 DELEGATECALL RETURN INVALID 0xC5 LOG1 EXTCODESIZE LOG4 INVALID 0xCE LOG2 0xE8 PUSH21 0x28565264736F6C6343000807003300000000000000 ",
							"sourceMap": "224:4012:4:-:0;;;1055:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:3;921:18:0;:32::i;:::-;991:5:1;981:15;;-1:-1:-1;;;;981:15:1;;;-1:-1:-1;1094:30:4;;-1:-1:-1;;;;;;1094:30:4;-1:-1:-1;;;;;1094:30:4;;;;;;;;;;224:4012;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;224:4012:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_179": {
									"entryPoint": 3577,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 3497,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_195": {
									"entryPoint": 3340,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptedToken_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateRewards_695": {
									"entryPoint": 2569,
									"id": 695,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claim_582": {
									"entryPoint": 1004,
									"id": 582,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@compound_637": {
									"entryPoint": 2294,
									"id": 637,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_460": {
									"entryPoint": 2733,
									"id": 460,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getLevelsInfo_765": {
									"entryPoint": null,
									"id": 765,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@getUserInfo_734": {
									"entryPoint": 1933,
									"id": 734,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@levelInfo_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_385": {
									"entryPoint": 2244,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2192,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3185,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_394": {
									"entryPoint": 1375,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userLevelDeposit_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_529": {
									"entryPoint": 1427,
									"id": 529,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_struct_Level": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_User": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3910,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__to_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__fromStack_reversed": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr__to_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr__fromStack_reversed": {
									"entryPoint": 4054,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8771:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:5"
															},
															"nodeType": "YulIf",
															"src": "272:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:5",
														"type": ""
													}
												],
												"src": "192:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:5"
															},
															"nodeType": "YulIf",
															"src": "480:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:5",
														"type": ""
													}
												],
												"src": "383:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "720:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "766:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "775:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "778:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "768:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "768:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "741:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "750:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "762:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:32:5"
															},
															"nodeType": "YulIf",
															"src": "730:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "791:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "810:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "804:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "795:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "873:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "885:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "875:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "875:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "842:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "863:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "856:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "856:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "849:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "849:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "839:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:40:5"
															},
															"nodeType": "YulIf",
															"src": "829:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "898:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "908:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "686:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "697:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "709:6:5",
														"type": ""
													}
												],
												"src": "642:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1040:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1049:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1052:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1042:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1042:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1042:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1015:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1024:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1011:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1011:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1036:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1007:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:32:5"
															},
															"nodeType": "YulIf",
															"src": "1004:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1065:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1088:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1075:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1075:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1065:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "960:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "971:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "983:6:5",
														"type": ""
													}
												],
												"src": "924:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:161:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1242:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1251:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1254:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1244:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1244:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1244:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:32:5"
															},
															"nodeType": "YulIf",
															"src": "1206:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1267:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1290:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1277:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1267:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1309:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1347:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1332:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1319:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1319:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1309:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1154:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1165:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1177:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1185:6:5",
														"type": ""
													}
												],
												"src": "1109:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1411:97:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1428:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1439:5:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1433:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1433:12:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1421:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1421:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1421:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1466:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1471:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1462:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1462:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1488:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1495:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1484:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1484:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1478:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1478:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1455:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1455:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1455:47:5"
														}
													]
												},
												"name": "abi_encode_struct_Level",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1395:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1402:3:5",
														"type": ""
													}
												],
												"src": "1362:146:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1561:153:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1578:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1589:5:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1583:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:12:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1571:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1616:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1621:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1612:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1612:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1638:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1645:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1634:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1634:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1628:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1628:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1605:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1605:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1605:47:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1672:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1677:4:5",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1668:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1668:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1694:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1701:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1690:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1690:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1684:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1684:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:47:5"
														}
													]
												},
												"name": "abi_encode_struct_User",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1552:3:5",
														"type": ""
													}
												],
												"src": "1513:201:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1830:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1842:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1853:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1838:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1830:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1872:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1887:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1903:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1908:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1899:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1899:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1912:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1895:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1895:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1883:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1883:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1865:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1865:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1789:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1800:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1811:4:5",
														"type": ""
													}
												],
												"src": "1719:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2084:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2094:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2106:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2117:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2102:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2102:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2094:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2129:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2147:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2152:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2143:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2143:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2156:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2139:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2139:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2133:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2174:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2189:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2197:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2185:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2185:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2167:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2221:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2232:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2217:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2217:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2241:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2249:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2237:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2237:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2210:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2210:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2210:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2273:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2284:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2269:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2289:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2262:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2262:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2262:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2037:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2048:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2056:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2064:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2075:4:5",
														"type": ""
													}
												],
												"src": "1927:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2472:188:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2482:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2494:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2505:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2482:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2524:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2539:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2555:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2551:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2551:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2564:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2547:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2547:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2535:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2517:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2588:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2599:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2584:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2584:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2604:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2577:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2577:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2577:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2631:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2642:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2627:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2627:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2647:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2620:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2620:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2425:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2436:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2444:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2452:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2463:4:5",
														"type": ""
													}
												],
												"src": "2307:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2794:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2804:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2816:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2827:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2812:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2812:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2804:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2846:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2861:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2877:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2882:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2873:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2873:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2886:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2869:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2869:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2839:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2839:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2921:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2906:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2906:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2926:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2899:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2899:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2755:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2766:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2774:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2785:4:5",
														"type": ""
													}
												],
												"src": "2665:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3101:188:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3111:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3123:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3134:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3119:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3119:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3111:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3153:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3168:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3184:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3189:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3180:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3180:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3193:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3176:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3176:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3164:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3164:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3146:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3146:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3217:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3228:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3213:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3213:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3233:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3206:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3206:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3206:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3260:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3271:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3256:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3256:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3276:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3249:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3249:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3249:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3054:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3065:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3073:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3081:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3092:4:5",
														"type": ""
													}
												],
												"src": "2944:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3389:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3399:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3411:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3422:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3407:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3407:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3399:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3441:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3466:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3459:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3459:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3452:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3452:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3434:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3434:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3358:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3369:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3380:4:5",
														"type": ""
													}
												],
												"src": "3294:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3601:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3611:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3623:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3634:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3619:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3611:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3653:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3668:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3684:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3689:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3680:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3680:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3693:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3676:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3676:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3664:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3664:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3646:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3646:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3646:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3570:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3581:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3592:4:5",
														"type": ""
													}
												],
												"src": "3486:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3882:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3899:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3910:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3892:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3892:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3933:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3944:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3929:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3929:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3949:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3922:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3922:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3972:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3983:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3968:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3968:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3988:22:5",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3961:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3961:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3961:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4020:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4032:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4043:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4028:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4028:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4020:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3859:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3873:4:5",
														"type": ""
													}
												],
												"src": "3708:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4231:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4248:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4259:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4241:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4282:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4293:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4278:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4278:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4298:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4271:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4271:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4271:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4321:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4332:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4317:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4317:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4337:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4310:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4310:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4310:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4392:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4403:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4388:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4388:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4408:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4381:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4381:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4426:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4438:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4449:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4434:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4434:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4426:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4208:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4222:4:5",
														"type": ""
													}
												],
												"src": "4057:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4638:174:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4655:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4666:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4648:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4648:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4648:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4689:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4700:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4685:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4685:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4705:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4678:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4678:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4678:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4728:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4739:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4724:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4724:18:5"
																	},
																	{
																		"hexValue": "4465706f736974206e6f7420756e6c6f636b656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4744:26:5",
																		"type": "",
																		"value": "Deposit not unlocked yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4717:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4717:54:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4717:54:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4780:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4792:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4803:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4788:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4788:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4780:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4615:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4629:4:5",
														"type": ""
													}
												],
												"src": "4464:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4991:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5008:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5019:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5001:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5001:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5001:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5042:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5053:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5038:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5038:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5058:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5031:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5031:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5031:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5081:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5077:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5077:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5097:18:5",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5070:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5070:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5125:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4968:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4982:4:5",
														"type": ""
													}
												],
												"src": "4817:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5336:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5353:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5364:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5346:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5346:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5346:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5387:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5398:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5383:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5383:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5403:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5376:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5376:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5376:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5426:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5437:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5422:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5422:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5442:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5415:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5415:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5415:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5486:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5498:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5509:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5494:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5494:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5486:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5313:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5327:4:5",
														"type": ""
													}
												],
												"src": "5162:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5697:167:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5714:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5725:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5707:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5707:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5707:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5748:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5759:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5744:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5744:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:2:5",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5737:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5737:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5737:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5787:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5798:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5783:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5783:18:5"
																	},
																	{
																		"hexValue": "4e6f20616374697665206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5803:19:5",
																		"type": "",
																		"value": "No active deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5776:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5776:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5776:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5832:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5844:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5855:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5840:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5840:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5832:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5674:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5688:4:5",
														"type": ""
													}
												],
												"src": "5523:341:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6043:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6060:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6071:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6053:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6053:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6053:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6094:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6105:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6090:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6090:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6110:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6083:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6083:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6133:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6144:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6129:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6129:18:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6149:20:5",
																		"type": "",
																		"value": "Not enough deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6122:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6122:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6122:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6179:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6191:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6202:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6187:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6187:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6179:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6020:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6034:4:5",
														"type": ""
													}
												],
												"src": "5869:342:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6505:215:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6515:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6527:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6538:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6523:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6523:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6515:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6575:6:5"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6583:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "6551:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6551:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6551:42:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6626:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6649:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "6602:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6602:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6602:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6686:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6698:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6709:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6694:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6694:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "6662:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6662:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6662:52:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__to_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6458:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6469:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6477:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6485:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6496:4:5",
														"type": ""
													}
												],
												"src": "6216:504:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7008:212:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7018:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7030:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7041:3:5",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7026:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7026:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7018:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7077:6:5"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7085:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7054:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7054:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7054:41:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7127:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7139:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7150:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7135:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7135:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7104:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7104:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7104:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7186:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7198:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7209:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7194:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7194:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7163:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7163:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7163:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr__to_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6961:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6972:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6980:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6988:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6999:4:5",
														"type": ""
													}
												],
												"src": "6725:495:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7326:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7336:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7348:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7359:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7344:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7344:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7336:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7378:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7389:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7371:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7371:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7371:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7295:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7306:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7317:4:5",
														"type": ""
													}
												],
												"src": "7225:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7536:119:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7546:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7558:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7569:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7554:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7554:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7546:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7588:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7599:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7581:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7581:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7581:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7642:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7615:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7615:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7497:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7516:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7527:4:5",
														"type": ""
													}
												],
												"src": "7407:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7817:162:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7827:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7839:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7850:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7835:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7835:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7827:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7869:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7880:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7862:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7862:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7862:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7907:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7918:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7903:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7923:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7896:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7896:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7896:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7950:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7961:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7946:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7946:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7966:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7939:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7939:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7770:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7781:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7789:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7797:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7808:4:5",
														"type": ""
													}
												],
												"src": "7660:319:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8032:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8059:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8061:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8061:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8061:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8048:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8055:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8051:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8051:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8045:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8045:13:5"
															},
															"nodeType": "YulIf",
															"src": "8042:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8090:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8101:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8104:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8097:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8015:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8018:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8024:3:5",
														"type": ""
													}
												],
												"src": "7984:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8163:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8194:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8215:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8222:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8227:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8218:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8218:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8208:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8208:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8208:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8259:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8262:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8252:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8252:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8252:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8287:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8290:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8280:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8280:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8280:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8183:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8176:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8176:9:5"
															},
															"nodeType": "YulIf",
															"src": "8173:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8314:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8323:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8326:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8319:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8319:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8314:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8148:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8151:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8157:1:5",
														"type": ""
													}
												],
												"src": "8117:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8391:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8450:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8452:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8452:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8452:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8422:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8415:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8415:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8408:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8408:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8430:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8441:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "8437:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8437:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8445:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "8433:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8433:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8427:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8427:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8404:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8404:45:5"
															},
															"nodeType": "YulIf",
															"src": "8401:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8481:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8496:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8499:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8492:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8492:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8481:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8370:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8373:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8379:7:5",
														"type": ""
													}
												],
												"src": "8339:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8561:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8583:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8585:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8585:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8585:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8577:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8580:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8574:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8574:8:5"
															},
															"nodeType": "YulIf",
															"src": "8571:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8614:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8626:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8629:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8622:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8622:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "8614:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8543:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8546:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "8552:4:5",
														"type": ""
													}
												],
												"src": "8512:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8674:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8691:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8698:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8703:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8694:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8694:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8684:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8684:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8684:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8731:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8734:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8724:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8724:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8724:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8755:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8758:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8748:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8748:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8642:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_struct_Level(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_struct_User(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Deposit not unlocked yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No active deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not enough deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__to_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        abi_encode_struct_Level(value0, headStart)\n        abi_encode_struct_Level(value1, add(headStart, 64))\n        abi_encode_struct_Level(value2, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr__to_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 288)\n        abi_encode_struct_User(value0, headStart)\n        abi_encode_struct_User(value1, add(headStart, 96))\n        abi_encode_struct_User(value2, add(headStart, 192))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c80638456cb5911610097578063e2bbb15811610066578063e2bbb1581461024a578063e788cee51461025d578063edf501ad1461039d578063f2fde38b146103d957600080fd5b80638456cb59146101fd5780638da5cb5b14610205578063aa5f7e2614610216578063beb8314c1461022957600080fd5b8063451c3d80116100d3578063451c3d801461018b5780635c975abb146101b65780636386c1c7146101d3578063715018a6146101f557600080fd5b8063259ee75214610105578063379607f51461015b5780633f4ba83a14610170578063441a3e7014610178575b600080fd5b61013b610113366004610ebf565b6002602081815260009384526040808520909152918352912080546001820154919092015483565b604080519384526020840192909252908201526060015b60405180910390f35b61016e610169366004610f0b565b6103ec565b005b61016e61055f565b61016e610186366004610f24565b610593565b60015461019e906001600160a01b031681565b6040516001600160a01b039091168152602001610152565b600054600160a01b900460ff166040519015158152602001610152565b6101e66101e1366004610e9d565b61078d565b60405161015293929190610fd6565b61016e610890565b61016e6108c4565b6000546001600160a01b031661019e565b61016e610224366004610f0b565b6108f6565b61023c610237366004610ebf565b610a09565b604051908152602001610152565b61016e610258366004610f24565b610aad565b60408051808201825260008082526020918201819052825180840184528181528201819052825180840184528181528201819052825180840184527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5481527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f005481840152835180850185527fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c5481527fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054d5481850152600290925260038352835180850185527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d5481527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4e54938101939093529251610152939290610f9c565b6103c46103ab366004610f0b565b6003602052600090815260409020805460019091015482565b60408051928352602083019190915201610152565b61016e6103e7366004610e9d565b610c71565b33600081815260026020908152604080832085845290915290205461044c5760405162461bcd60e51b8152602060048201526011602482015270139bc81858dd1a5d994819195c1bdcda5d607a1b60448201526064015b60405180910390fd5b60006104588284610a09565b6001600160a01b038316600090815260026020908152604080832087845290915281206001018054929350429290919061049390849061102a565b909155505060015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156104e657600080fd5b505af11580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e9190610ee9565b507f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf782848360405161055293929190610f46565b60405180910390a1505050565b6000546001600160a01b031633146105895760405162461bcd60e51b815260040161044390610f67565b610591610d0c565b565b3360008181526002602090815260408083208584529091529020548311156105f25760405162461bcd60e51b8152602060048201526012602482015271139bdd08195b9bdd59da0819195c1bdcda5d60721b6044820152606401610443565b6001600160a01b038116600090815260026020818152604080842086855290915290912001544210156106675760405162461bcd60e51b815260206004820152601860248201527f4465706f736974206e6f7420756e6c6f636b65642079657400000000000000006044820152606401610443565b60006106738284610a09565b6001600160a01b03831660009081526002602090815260408083208784529091528120805492935086929091906106ab908490611083565b90915550506001546001600160a01b031663a9059cbb836106cc848861102a565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561071257600080fd5b505af1158015610726573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074a9190610ee9565b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688260008660405161077f93929190610f46565b60405180910390a150505050565b6107b160405180606001604052806000815260200160008152602001600081525090565b6107d560405180606001604052806000815260200160008152602001600081525090565b6107f960405180606001604052806000815260200160008152602001600081525090565b5050506001600160a01b03166000908152600260208181526040808420848052808352818520825160608082018552825482526001808401548388015292870154828601528288528386528488208551808301875281548152818501548189015290880154818701528789529386529684902084519788018552805488529182015494870194909452909301549084015292909190565b6000546001600160a01b031633146108ba5760405162461bcd60e51b815260040161044390610f67565b6105916000610da9565b6000546001600160a01b031633146108ee5760405162461bcd60e51b815260040161044390610f67565b610591610df9565b3360008181526002602090815260408083208584529091529020546109515760405162461bcd60e51b8152602060048201526011602482015270139bc81858dd1a5d994819195c1bdcda5d607a1b6044820152606401610443565b600061095d8284610a09565b6001600160a01b038316600090815260026020908152604080832087845290915281208054929350839290919061099590849061102a565b90915550506001600160a01b0382166000908152600260209081526040808320868452909152812060010180544292906109d090849061102a565b90915550506040517f0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d1868739061055290849086908590610f46565b6001600160a01b03821660009081526002602090815260408083208484529091528120600101548190610a3c9042611083565b6001600160a01b0385166000908152600260209081526040808320878452825280832054600390925282205492935091906301e13380612710610a7f8486611064565b610a899190611042565b610a939190611042565b90506000610aa18286611064565b98975050505050505050565b600054600160a01b900460ff1615610afa5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610443565b6001546040516323b872dd60e01b8152336004820181905230602483015260448201859052916001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610b4d57600080fd5b505af1158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190610ee9565b506001600160a01b038116600090815260026020908152604080832085845290915281208054859290610bb990849061102a565b90915550506001600160a01b038116600090815260026020908152604080832085845290915281206001018054429290610bf490849061102a565b9091555050600082815260036020526040902060010154610c15904261102a565b6001600160a01b0382166000908152600260208181526040808420878552909152918290200191909155517f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159061055290839085908790610f46565b6000546001600160a01b03163314610c9b5760405162461bcd60e51b815260040161044390610f67565b6001600160a01b038116610d005760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610443565b610d0981610da9565b50565b600054600160a01b900460ff16610d5c5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610443565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff1615610e465760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610443565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610d8c3390565b80356001600160a01b0381168114610e9857600080fd5b919050565b600060208284031215610eaf57600080fd5b610eb882610e81565b9392505050565b60008060408385031215610ed257600080fd5b610edb83610e81565b946020939093013593505050565b600060208284031215610efb57600080fd5b81518015158114610eb857600080fd5b600060208284031215610f1d57600080fd5b5035919050565b60008060408385031215610f3757600080fd5b50508035926020909101359150565b6001600160a01b039390931683526020830191909152604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8351815260208085015181830152835160408301528381015160608301528251608083015282015160a082015260c081015b949350505050565b835181526020808501518183015260408086015181840152845160608401528482015160808401528481015160a0840152835160c08401529083015160e08301528201516101008201526101208101610fce565b6000821982111561103d5761103d61109a565b500190565b60008261105f57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561107e5761107e61109a565b500290565b6000828210156110955761109561109a565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220f2320fe7659cac3229adc6302c908fb7a9f4f3fec5a13ba4fecea2e87428565264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE2BBB158 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x24A JUMPI DUP1 PUSH4 0xE788CEE5 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xEDF501AD EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x451C3D80 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x259EE752 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x178 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13B PUSH2 0x113 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x3EC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH2 0x55F JUMP JUMPDEST PUSH2 0x16E PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x19E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFD6 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x890 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19E JUMP JUMPDEST PUSH2 0x16E PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0xF0B JUMP JUMPDEST PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0xEBF JUMP JUMPDEST PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x258 CALLDATASIZE PUSH1 0x4 PUSH2 0xF24 JUMP JUMPDEST PUSH2 0xAAD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF SLOAD DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92F00 SLOAD DUP2 DUP5 ADD MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054C SLOAD DUP2 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054D SLOAD DUP2 DUP6 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP4 MSTORE DUP4 MLOAD DUP1 DUP6 ADD DUP6 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4D SLOAD DUP2 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4E SLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP3 MLOAD PUSH2 0x152 SWAP4 SWAP3 SWAP1 PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x3C4 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0xF0B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x152 JUMP JUMPDEST PUSH2 0x16E PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9D JUMP JUMPDEST PUSH2 0xC71 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x44C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x458 DUP3 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP TIMESTAMP SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x493 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51E SWAP2 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x552 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x589 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x591 PUSH2 0xD0C JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08195B9BDD59DA0819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x667 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x673 DUP3 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x6AB SWAP1 DUP5 SWAP1 PUSH2 0x1083 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0x6CC DUP5 DUP9 PUSH2 0x102A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x726 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x74A SWAP2 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH2 0x77F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x7B1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x7D5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x7F9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP3 DUP8 ADD SLOAD DUP3 DUP7 ADD MSTORE DUP3 DUP9 MSTORE DUP4 DUP7 MSTORE DUP5 DUP9 KECCAK256 DUP6 MLOAD DUP1 DUP4 ADD DUP8 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP6 ADD SLOAD DUP2 DUP10 ADD MSTORE SWAP1 DUP9 ADD SLOAD DUP2 DUP8 ADD MSTORE DUP8 DUP10 MSTORE SWAP4 DUP7 MSTORE SWAP7 DUP5 SWAP1 KECCAK256 DUP5 MLOAD SWAP8 DUP9 ADD DUP6 MSTORE DUP1 SLOAD DUP9 MSTORE SWAP2 DUP3 ADD SLOAD SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 SWAP4 ADD SLOAD SWAP1 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x591 PUSH1 0x0 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH2 0x591 PUSH2 0xDF9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x951 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95D DUP3 DUP5 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x995 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD TIMESTAMP SWAP3 SWAP1 PUSH2 0x9D0 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 SWAP1 PUSH2 0x552 SWAP1 DUP5 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0xA3C SWAP1 TIMESTAMP PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0xA7F DUP5 DUP7 PUSH2 0x1064 JUMP JUMPDEST PUSH2 0xA89 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST PUSH2 0xA93 SWAP2 SWAP1 PUSH2 0x1042 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xAA1 DUP3 DUP7 PUSH2 0x1064 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xAFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB85 SWAP2 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xBB9 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD TIMESTAMP SWAP3 SWAP1 PUSH2 0xBF4 SWAP1 DUP5 SWAP1 PUSH2 0x102A JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xC15 SWAP1 TIMESTAMP PUSH2 0x102A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x552 SWAP1 DUP4 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0xF46 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x443 SWAP1 PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x443 JUMP JUMPDEST PUSH2 0xD09 DUP2 PUSH2 0xDA9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD5C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE46 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x443 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xD8C CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB8 DUP3 PUSH2 0xE81 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEDB DUP4 PUSH2 0xE81 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x40 DUP4 ADD MSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE DUP3 MLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP3 ADD MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP4 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP6 ADD MLOAD DUP2 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP7 ADD MLOAD DUP2 DUP5 ADD MSTORE DUP5 MLOAD PUSH1 0x60 DUP5 ADD MSTORE DUP5 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE DUP5 DUP2 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE DUP4 MLOAD PUSH1 0xC0 DUP5 ADD MSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE DUP3 ADD MLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x120 DUP2 ADD PUSH2 0xFCE JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x103D JUMPI PUSH2 0x103D PUSH2 0x109A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x105F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x107E JUMPI PUSH2 0x107E PUSH2 0x109A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1095 JUMPI PUSH2 0x1095 PUSH2 0x109A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE ORIGIN 0xF 0xE7 PUSH6 0x9CAC3229ADC6 ADDRESS 0x2C SWAP1 DUP16 0xB7 0xA9 DELEGATECALL RETURN INVALID 0xC5 LOG1 EXTCODESIZE LOG4 INVALID 0xCE LOG2 0xE8 PUSH21 0x28565264736F6C6343000807003300000000000000 ",
							"sourceMap": "224:4012:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7862:25:5;;;7918:2;7903:18;;7896:34;;;;7946:18;;;7939:34;7850:2;7835:18;620:68:4;;;;;;;;2401:420;;;;;;:::i;:::-;;:::i;:::-;;1252:64;;;:::i;1827:568::-;;;;;;:::i;:::-;;:::i;317:27::-;;;;;-1:-1:-1;;;;;317:27:4;;;;;;-1:-1:-1;;;;;1883:32:5;;;1865:51;;1853:2;1838:18;317:27:4;1719:203:5;1098:84:1;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1098:84;;3459:14:5;;3452:22;3434:41;;3422:2;3407:18;1098:84:1;3294:187:5;3743:271:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1668:101:0:-;;;:::i;1182:60:4:-;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;2827:437:4;;;;;;:::i;:::-;;:::i;3270:463::-;;;;;;:::i;:::-;;:::i;:::-;;;7371:25:5;;;7359:2;7344:18;3270:463:4;7225:177:5;1323:498:4;;;;;;:::i;:::-;;:::i;4020:214::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4139:21:4;;;;;;;4148:12;4139:21;;;;;;;;;4170;;;;;;;4179:12;4170:21;;;;;;;;;4220:1;4210:12;;;4148:9;4210:12;;4201:21;;;;;;;4210:12;4201:21;;;;;;;;;;;;4020:214;;;;4139:21;4201;4020:214;:::i;694:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;7581:25:5;;;7637:2;7622:18;;7615:34;;;;7554:18;694:42:4;7407:248:5;1918:198:0;;;;;;:::i;:::-;;:::i;2401:420:4:-;2472:10;2451:18;2500:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;2492:78;;;;-1:-1:-1;;;2492:78:4;;5725:2:5;2492:78:4;;;5707:21:5;5764:2;5744:18;;;5737:30;-1:-1:-1;;;5783:18:5;;;5776:47;5840:18;;2492:78:4;;;;;;;;;2581:15;2599:36;2616:10;2628:6;2599:16;:36::i;:::-;-1:-1:-1;;;;;2646:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:44;;:63;;2581:54;;-1:-1:-1;2694:15:4;;2646:44;;:28;:63;;2694:15;;2646:63;:::i;:::-;;;;-1:-1:-1;;2720:13:4;;:43;;-1:-1:-1;;;2720:43:4;;-1:-1:-1;;;;;2857:32:5;;;2720:43:4;;;2839:51:5;2906:18;;;2899:34;;;2720:13:4;;;;:22;;2812:18:5;;2720:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2779:35;2786:10;2798:6;2806:7;2779:35;;;;;;;;:::i;:::-;;;;;;;;2441:380;;2401:420;:::o;1252:64::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1299:10:4::1;:8;:10::i;:::-;1252:64::o:0;1827:568::-;1918:10;1897:18;1946:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;:55;-1:-1:-1;1946:55:4;1938:86;;;;-1:-1:-1;;;1938:86:4;;6071:2:5;1938:86:4;;;6053:21:5;6110:2;6090:18;;;6083:30;-1:-1:-1;;;6129:18:5;;;6122:48;6187:18;;1938:86:4;5869:342:5;1938:86:4;-1:-1:-1;;;;;2042:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;;:47;;2093:15;-1:-1:-1;2042:66:4;2034:103;;;;-1:-1:-1;;;2034:103:4;;4666:2:5;2034:103:4;;;4648:21:5;4705:2;4685:18;;;4678:30;4744:26;4724:18;;;4717:54;4788:18;;2034:103:4;4464:348:5;2034:103:4;2148:15;2166:36;2183:10;2195:6;2166:16;:36::i;:::-;-1:-1:-1;;;;;2221:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:55;;2148:54;;-1:-1:-1;2269:7:4;;2221:36;;:28;:55;;2269:7;;2221:55;:::i;:::-;;;;-1:-1:-1;;2287:13:4;;-1:-1:-1;;;;;2287:13:4;:22;2310:10;2322:17;2332:7;2322;:17;:::i;:::-;2287:53;;-1:-1:-1;;;;;;2287:53:4;;;;;;;-1:-1:-1;;;;;2857:32:5;;;2287:53:4;;;2839:51:5;2906:18;;;2899:34;2812:18;;2287:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2356:32;2365:10;2377:1;2380:7;2356:32;;;;;;;;:::i;:::-;;;;;;;;1887:508;;1827:568;;:::o;3743:271::-;3801:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3801:18:4;3821;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3821:18:4;3841;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3841:18:4;-1:-1:-1;;;;;;;;3879:23:4;;;;;:16;:23;;;;;;;;:26;;;;;;;;;3870:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3924:26;;;;;;;;;3915:35;;;;;;;;;;;;;;;;;;;;;;;;;;;3969:26;;;;;;;;;;3960:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3870;3915;;3960;3743:271::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;1182:60:4:-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1227:8:4::1;:6;:8::i;2827:437::-:0;2901:10;2880:18;2929:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;2921:78;;;;-1:-1:-1;;;2921:78:4;;5725:2:5;2921:78:4;;;5707:21:5;5764:2;5744:18;;;5737:30;-1:-1:-1;;;5783:18:5;;;5776:47;5840:18;;2921:78:4;5523:341:5;2921:78:4;3010:15;3028:36;3045:10;3057:6;3028:16;:36::i;:::-;-1:-1:-1;;;;;3075:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:55;;3010:54;;-1:-1:-1;3010:54:4;;3075:36;;:28;:55;;3010:54;;3075:55;:::i;:::-;;;;-1:-1:-1;;;;;;;3140:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:44;;:63;;3188:15;;3140:28;:63;;3188:15;;3140:63;:::i;:::-;;;;-1:-1:-1;;3219:38:4;;;;;;3229:10;;3241:6;;3249:7;;3219:38;:::i;3270:463::-;-1:-1:-1;;;;;3406:23:4;;3349:7;3406:23;;;:16;:23;;;;;;;;:31;;;;;;;;:39;;;3349:7;;3388:57;;:15;:57;:::i;:::-;-1:-1:-1;;;;;3473:23:4;;3455:15;3473:23;;;:16;:23;;;;;;;;:31;;;;;;;;:39;3537:9;:17;;;;;:21;3367:78;;-1:-1:-1;3473:39:4;3537:21;3624:8;3615:5;3598:13;3537:21;3473:39;3598:13;:::i;:::-;3597:23;;;;:::i;:::-;3596:36;;;;:::i;:::-;3569:63;-1:-1:-1;3642:21:4;3666:29;3569:63;3666:10;:29;:::i;:::-;3642:53;3270:463;-1:-1:-1;;;;;;;;3270:463:4:o;1323:498::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;5019:2:5;1403:38:1;;;5001:21:5;5058:2;5038:18;;;5031:30;-1:-1:-1;;;5077:18:5;;;5070:46;5133:18;;1403:38:1;4817:340:5;1403:38:1;1454:13:4::1;::::0;:62:::1;::::0;-1:-1:-1;;;1454:62:4;;1426:10:::1;1454:62;::::0;::::1;2167:34:5::0;;;1501:4:4::1;2217:18:5::0;;;2210:43;2269:18;;;2262:34;;;1426:10:4;-1:-1:-1;;;;;1454:13:4::1;::::0;:26:::1;::::0;2102:18:5;;1454:62:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;1527:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;:55;;1575:7;;1527:28;:55:::1;::::0;1575:7;;1527:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;1592:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;:44:::1;;:63:::0;;1640:15:::1;::::0;1592:28;:63:::1;::::0;1640:15;;1592:63:::1;:::i;:::-;::::0;;;-1:-1:-1;;1733:17:4::1;::::0;;;:9:::1;:17;::::0;;;;:28:::1;;::::0;1715:46:::1;::::0;:15:::1;:46;:::i;:::-;-1:-1:-1::0;;;;;1665:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;;;:47:::1;:96:::0;;;;1777:37;::::1;::::0;::::1;::::0;1682:10;;1694:6;;1806:7;;1777:37:::1;:::i;1918:198:0:-:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4259:2:5;1998:73:0::1;::::0;::::1;4241:21:5::0;4298:2;4278:18;;;4271:30;4337:34;4317:18;;;4310:62;-1:-1:-1;;;4388:18:5;;;4381:36;4434:19;;1998:73:0::1;4057:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2110:117:1:-;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;3910:2:5;1669:41:1;;;3892:21:5;3949:2;3929:18;;;3922:30;-1:-1:-1;;;3968:18:5;;;3961:50;4028:18;;1669:41:1;3708:344:5;1669:41:1;2178:5:::1;2168:15:::0;;-1:-1:-1;;;;2168:15:1::1;::::0;;2198:22:::1;719:10:3::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;1883:32:5;;;1865:51;;1853:2;1838:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;5019:2:5;1403:38:1;;;5001:21:5;5058:2;5038:18;;;5031:30;-1:-1:-1;;;5077:18:5;;;5070:46;5133:18;;1403:38:1;4817:340:5;1403:38:1;1922:7:::1;:14:::0;;-1:-1:-1;;;;1922:14:1::1;-1:-1:-1::0;;;1922:14:1::1;::::0;;1951:20:::1;1958:12;719:10:3::0;;640:96;14:173:5;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:5:o;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:5:o;642:277::-;709:6;762:2;750:9;741:7;737:23;733:32;730:52;;;778:1;775;768:12;730:52;810:9;804:16;863:5;856:13;849:21;842:5;839:32;829:60;;885:1;882;875:12;924:180;983:6;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;-1:-1:-1;1075:23:5;;924:180;-1:-1:-1;924:180:5:o;1109:248::-;1177:6;1185;1238:2;1226:9;1217:7;1213:23;1209:32;1206:52;;;1254:1;1251;1244:12;1206:52;-1:-1:-1;;1277:23:5;;;1347:2;1332:18;;;1319:32;;-1:-1:-1;1109:248:5:o;2307:353::-;-1:-1:-1;;;;;2535:32:5;;;;2517:51;;2599:2;2584:18;;2577:34;;;;2642:2;2627:18;;2620:34;2505:2;2490:18;;2307:353::o;5162:356::-;5364:2;5346:21;;;5383:18;;;5376:30;5442:34;5437:2;5422:18;;5415:62;5509:2;5494:18;;5162:356::o;6216:504::-;1433:12;;1421:25;;1495:4;1484:16;;;1478:23;1462:14;;;1455:47;1433:12;;6649:2;6634:18;;1421:25;1484:16;;;1478:23;1462:14;;;1455:47;1433:12;;6709:3;6694:19;;1421:25;1484:16;;1478:23;1462:14;;;1455:47;6538:3;6523:19;;6662:52;6216:504;;;;;;:::o;6725:495::-;1583:12;;1571:25;;1645:4;1634:16;;;1628:23;1612:14;;;1605:47;1701:4;1690:16;;;1684:23;1668:14;;;1661:47;1583:12;;7150:2;7135:18;;1571:25;1634:16;;;1628:23;1612:14;;;1605:47;1690:16;;;1684:23;1668:14;;;1661:47;1583:12;;7209:3;7194:19;;1571:25;1634:16;;;1628:23;1612:14;;;1605:47;1690:16;;1684:23;1668:14;;;1661:47;7041:3;7026:19;;7163:51;1513:201;7984:128;8024:3;8055:1;8051:6;8048:1;8045:13;8042:39;;;8061:18;;:::i;:::-;-1:-1:-1;8097:9:5;;7984:128::o;8117:217::-;8157:1;8183;8173:132;;8227:10;8222:3;8218:20;8215:1;8208:31;8262:4;8259:1;8252:15;8290:4;8287:1;8280:15;8173:132;-1:-1:-1;8319:9:5;;8117:217::o;8339:168::-;8379:7;8445:1;8441;8437:6;8433:14;8430:1;8427:21;8422:1;8415:9;8408:17;8404:45;8401:71;;;8452:18;;:::i;:::-;-1:-1:-1;8492:9:5;;8339:168::o;8512:125::-;8552:4;8580:1;8577;8574:8;8571:34;;;8585:18;;:::i;:::-;-1:-1:-1;8622:9:5;;8512:125::o;8642:127::-;8703:10;8698:3;8694:20;8691:1;8684:31;8734:4;8731:1;8724:15;8758:4;8755:1;8748:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "865200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptedToken()": "2360",
								"calculateRewards(address,uint256)": "infinite",
								"claim(uint256)": "infinite",
								"compound(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"getLevelsInfo()": "13334",
								"getUserInfo(address)": "20430",
								"levelInfo(uint256)": "4643",
								"owner()": "2376",
								"pause()": "29802",
								"paused()": "2354",
								"renounceOwnership()": "28203",
								"transferOwnership(address)": "28397",
								"unpause()": "29818",
								"userLevelDeposit(address,uint256)": "6891",
								"withdraw(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 4236,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 991,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 4236,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f2320fe7659cac3229adc6302c908fb7a9f4f3fec5a13ba4fecea2e87428565264736f6c63430008070033",
									".code": [
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "E788CEE5"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "EDF501AD"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "AA5F7E26"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "BEB8314C"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "451C3D80"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "451C3D80"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "6386C1C7"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "259EE752"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "379607F5"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "3F4BA83A"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7862,
											"end": 7887,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7862,
											"end": 7887,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7862,
											"end": 7887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7930,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7930,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7946,
											"end": 7964,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7939,
											"end": 7973,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7850,
											"end": 7852,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 620,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 317,
											"end": 344,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1916,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1719,
											"end": 1922,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3473,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3473,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3474,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3434,
											"end": 3475,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3422,
											"end": 3424,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3294,
											"end": 3481,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7396,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7396,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7396,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7359,
											"end": 7361,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7344,
											"end": 7362,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7225,
											"end": 7402,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4234,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4020,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4160,
											"name": "PUSH",
											"source": 4,
											"value": "3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF"
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "PUSH",
											"source": 4,
											"value": "3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92F00"
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4191,
											"name": "PUSH",
											"source": 4,
											"value": "A15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054C"
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "PUSH",
											"source": 4,
											"value": "A15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054D"
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4220,
											"end": 4221,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4210,
											"end": 4222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4222,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4148,
											"end": 4157,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4210,
											"end": 4222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4222,
											"name": "PUSH",
											"source": 4,
											"value": "C3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4D"
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "PUSH",
											"source": 4,
											"value": "C3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4E"
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4234,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4020,
											"end": 4234,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4139,
											"end": 4160,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4201,
											"end": 4222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4020,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 4020,
											"end": 4234,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7581,
											"end": 7606,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7581,
											"end": 7606,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7581,
											"end": 7606,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7637,
											"end": 7639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7649,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7649,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7554,
											"end": 7572,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 7407,
											"end": 7655,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2482,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5766,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5767,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81858DD1A5D994819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5776,
											"end": 5823,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2616,
											"end": 2626,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2599,
											"end": 2635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2599,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2599,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2662,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2690,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2646,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2635,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2635,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2857,
											"end": 2889,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2933,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2933,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2720,
											"end": 2742,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH",
											"source": 4,
											"value": "34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7"
										},
										{
											"begin": 2786,
											"end": 2796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2813,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1299,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1962,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1990,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 2001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 2001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6071,
											"end": 6073,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6053,
											"end": 6074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6110,
											"end": 6112,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6083,
											"end": 6113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08195B9BDD59DA0819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6129,
											"end": 6147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6187,
											"end": 6205,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6187,
											"end": 6205,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5869,
											"end": 6211,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2089,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2108,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2042,
											"end": 2108,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4668,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4648,
											"end": 4669,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4707,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4685,
											"end": 4703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4678,
											"end": 4708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4744,
											"end": 4770,
											"name": "PUSH",
											"source": 5,
											"value": "4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000"
										},
										{
											"begin": 4724,
											"end": 4742,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4724,
											"end": 4742,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4724,
											"end": 4742,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4771,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 4464,
											"end": 4812,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2183,
											"end": 2193,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2166,
											"end": 2202,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2166,
											"end": 2202,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2166,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2202,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2202,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2309,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2310,
											"end": 2320,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2332,
											"end": 2339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2329,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2857,
											"end": 2889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2889,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2889,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2899,
											"end": 2933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 2365,
											"end": 2375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3821,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3821,
											"end": 3839,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3821,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 3841,
											"end": 3859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3895,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3902,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3905,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3905,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3905,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3905,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3950,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3969,
											"end": 3995,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3905,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3915,
											"end": 3950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4014,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2911,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2945,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2973,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5764,
											"end": 5766,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5767,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81858DD1A5D994819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5776,
											"end": 5823,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5840,
											"end": 5858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 5523,
											"end": 5864,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3091,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3184,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3140,
											"end": 3184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3203,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3203,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3203,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "PUSH",
											"source": 4,
											"value": "E311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873"
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3239,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3445,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3406,
											"end": 3445,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3445,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3403,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3489,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3546,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3558,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3445,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3445,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3632,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 3615,
											"end": 3620,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3537,
											"end": 3558,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3569,
											"end": 3632,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3676,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3695,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5022,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5061,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5070,
											"end": 5116,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4817,
											"end": 5157,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1436,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2201,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2217,
											"end": 2235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2210,
											"end": 2253,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2296,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2262,
											"end": 2296,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2102,
											"end": 2120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1608,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1636,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1592,
											"end": 1636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1761,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1733,
											"end": 1761,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1761,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1730,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1681,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1761,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4259,
											"end": 4261,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4241,
											"end": 4262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4298,
											"end": 4300,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4278,
											"end": 4296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4271,
											"end": 4301,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4337,
											"end": 4371,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4317,
											"end": 4335,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4317,
											"end": 4335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4317,
											"end": 4335,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4310,
											"end": 4372,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4388,
											"end": 4406,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4381,
											"end": 4417,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4434,
											"end": 4453,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4434,
											"end": 4453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4057,
											"end": 4459,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3910,
											"end": 3912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3892,
											"end": 3913,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3949,
											"end": 3951,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3929,
											"end": 3947,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3952,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 4011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4028,
											"end": 4046,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4028,
											"end": 4046,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3708,
											"end": 4052,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1916,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1865,
											"end": 1916,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1855,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 1856,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5022,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5038,
											"end": 5056,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5031,
											"end": 5061,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5077,
											"end": 5095,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5070,
											"end": 5116,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5133,
											"end": 5151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4817,
											"end": 5157,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 741,
											"end": 748,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 737,
											"end": 760,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 733,
											"end": 765,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 778,
											"end": 779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 768,
											"end": 780,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 856,
											"end": 869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 849,
											"end": 870,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 839,
											"end": 871,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 829,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 829,
											"end": 889,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 885,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 875,
											"end": 887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1038,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1022,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1034,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1007,
											"end": 1039,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1054,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1109,
											"end": 1357,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 1109,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1240,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1209,
											"end": 1241,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1254,
											"end": 1255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1244,
											"end": 1256,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 1206,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1277,
											"end": 1300,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1300,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1300,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1347,
											"end": 1349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1351,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1319,
											"end": 1351,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1357,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2307,
											"end": 2660,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2307,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2535,
											"end": 2567,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2567,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2567,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2535,
											"end": 2567,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2568,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2517,
											"end": 2568,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2601,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2602,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2611,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2611,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2577,
											"end": 2611,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2642,
											"end": 2644,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2645,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2620,
											"end": 2654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2507,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2490,
											"end": 2508,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2490,
											"end": 2508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2660,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5162,
											"end": 5518,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 5162,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5364,
											"end": 5366,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5346,
											"end": 5367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5346,
											"end": 5367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5346,
											"end": 5367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5401,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5383,
											"end": 5401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5406,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5442,
											"end": 5476,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5437,
											"end": 5439,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5415,
											"end": 5477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5494,
											"end": 5512,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5162,
											"end": 5518,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6216,
											"end": 6720,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 6216,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1499,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1484,
											"end": 1500,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1500,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6634,
											"end": 6652,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1500,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6709,
											"end": 6712,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6694,
											"end": 6713,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6694,
											"end": 6713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1421,
											"end": 1446,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1500,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1484,
											"end": 1500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1478,
											"end": 1501,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1462,
											"end": 1476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1502,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6538,
											"end": 6541,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 6523,
											"end": 6542,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6523,
											"end": 6542,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6662,
											"end": 6714,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 6662,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6720,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6720,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6216,
											"end": 6720,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6725,
											"end": 7220,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 6725,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1595,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1649,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1652,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1701,
											"end": 1705,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1707,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1595,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7150,
											"end": 7152,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7135,
											"end": 7153,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7135,
											"end": 7153,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1652,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1707,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1595,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1595,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7209,
											"end": 7212,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1596,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1651,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1612,
											"end": 1626,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1605,
											"end": 1652,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1707,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1708,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7041,
											"end": 7044,
											"name": "PUSH",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7026,
											"end": 7045,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7026,
											"end": 7045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7163,
											"end": 7214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 1513,
											"end": 1714,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8112,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 7984,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8024,
											"end": 8027,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8055,
											"end": 8056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8051,
											"end": 8057,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 8048,
											"end": 8049,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8045,
											"end": 8058,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8042,
											"end": 8081,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8042,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 8042,
											"end": 8081,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 8061,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8106,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 8112,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8117,
											"end": 8334,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 8117,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8157,
											"end": 8158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8183,
											"end": 8184,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8305,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 8173,
											"end": 8305,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8227,
											"end": 8237,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8222,
											"end": 8225,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8218,
											"end": 8238,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8239,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8262,
											"end": 8266,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 8259,
											"end": 8260,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8252,
											"end": 8267,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8287,
											"end": 8288,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8280,
											"end": 8295,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8305,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 8173,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8319,
											"end": 8328,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8319,
											"end": 8328,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8117,
											"end": 8334,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8339,
											"end": 8507,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8339,
											"end": 8507,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8379,
											"end": 8386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8446,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8441,
											"end": 8442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8437,
											"end": 8443,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 8433,
											"end": 8447,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 8430,
											"end": 8431,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8427,
											"end": 8448,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8422,
											"end": 8423,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8415,
											"end": 8424,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8408,
											"end": 8425,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8404,
											"end": 8449,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8472,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8401,
											"end": 8472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8401,
											"end": 8472,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 8452,
											"end": 8470,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8492,
											"end": 8501,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 8492,
											"end": 8501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8339,
											"end": 8507,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8512,
											"end": 8637,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 8512,
											"end": 8637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8556,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8577,
											"end": 8578,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8574,
											"end": 8582,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8571,
											"end": 8605,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8571,
											"end": 8605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 8571,
											"end": 8605,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 8585,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8631,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8512,
											"end": 8637,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8642,
											"end": 8769,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 8642,
											"end": 8769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8703,
											"end": 8713,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8698,
											"end": 8701,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8694,
											"end": 8714,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 8692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8684,
											"end": 8715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8734,
											"end": 8738,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8731,
											"end": 8732,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8724,
											"end": 8739,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8758,
											"end": 8762,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8755,
											"end": 8756,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 8763,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptedToken()": "451c3d80",
							"calculateRewards(address,uint256)": "beb8314c",
							"claim(uint256)": "379607f5",
							"compound(uint256)": "aa5f7e26",
							"deposit(uint256,uint256)": "e2bbb158",
							"getLevelsInfo()": "e788cee5",
							"getUserInfo(address)": "6386c1c7",
							"levelInfo(uint256)": "edf501ad",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"userLevelDeposit(address,uint256)": "259ee752",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Compound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLevelsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level2\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level2\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLevelDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"AcesStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"staking.sol\":{\"keccak256\":\"0x93208314fc0c2bc4dfc6aa95799f4f2f626301c5f9f251f050ac957e1c532bf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23dd29bf48f6513b5cd2e123ab43168faefc853c007c86cdb7194d287dcaf1e1\",\"dweb:/ipfs/QmQU6uvbTXwckWs93JnJQVqLb88iWJvGxTfuMF7c3a6vG2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "staking.sol:AcesStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "staking.sol:AcesStaking",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 308,
								"contract": "staking.sol:AcesStaking",
								"label": "acceptedToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)274"
							},
							{
								"astId": 327,
								"contract": "staking.sol:AcesStaking",
								"label": "userLevelDeposit",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(User)315_storage))"
							},
							{
								"astId": 332,
								"contract": "staking.sol:AcesStaking",
								"label": "levelInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(Level)320_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)274": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(User)315_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct AcesStaking.User))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(User)315_storage)"
							},
							"t_mapping(t_uint256,t_struct(Level)320_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.Level)",
								"numberOfBytes": "32",
								"value": "t_struct(Level)320_storage"
							},
							"t_mapping(t_uint256,t_struct(User)315_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)315_storage"
							},
							"t_struct(Level)320_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.Level",
								"members": [
									{
										"astId": 317,
										"contract": "staking.sol:AcesStaking",
										"label": "APY",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 319,
										"contract": "staking.sol:AcesStaking",
										"label": "lockPeriod",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(User)315_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.User",
								"members": [
									{
										"astId": 310,
										"contract": "staking.sol:AcesStaking",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 312,
										"contract": "staking.sol:AcesStaking",
										"label": "started",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 314,
										"contract": "staking.sol:AcesStaking",
										"label": "unlockTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 297,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								296
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Pausable": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 297,
							"src": "115:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "617:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								296
							],
							"name": "Pausable",
							"nameLocation": "605:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 115,
									"name": "Paused",
									"nameLocation": "715:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:1"
									},
									"src": "709:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 120,
									"name": "Unpaused",
									"nameLocation": "826:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:1"
									},
									"src": "820:32:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "858:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 121,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "971:32:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "981:15:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:1"
									},
									"scope": 196,
									"src": "957:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1151:31:1",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "1161:14:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:1"
									},
									"scope": 196,
									"src": "1098:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1393:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 144,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1412:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:1"
											},
											{
												"id": 150,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 152,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:1"
									},
									"src": "1368:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1659:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 163,
									"name": "whenPaused",
									"nameLocation": "1646:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:1"
									},
									"src": "1637:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1912:66:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1946:25:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1898:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 196,
									"src": "1863:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2158:69:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2207:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "2193:27:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "2147:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:1"
									},
									"scope": 196,
									"src": "2110:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "587:1642:1",
							"usedErrors": []
						}
					],
					"src": "90:2140:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 274,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 274,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 274,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 274,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 274,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 274,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 264,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 273,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 275,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 281,
												"id": 284,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 296,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 290,
												"id": 293,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 296,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"AcesStaking": [
							766
						],
						"Context": [
							296
						],
						"IERC20": [
							274
						],
						"Ownable": [
							104
						],
						"Pausable": [
							196
						]
					},
					"id": 767,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 767,
							"sourceUnit": 275,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 767,
							"sourceUnit": 105,
							"src": "114:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 767,
							"sourceUnit": 197,
							"src": "167:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 302,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "248:7:4"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:4"
								},
								{
									"baseName": {
										"id": 304,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "257:8:4"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "257:8:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 766,
							"linearizedBaseContracts": [
								766,
								196,
								104,
								296
							],
							"name": "AcesStaking",
							"nameLocation": "233:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "451c3d80",
									"id": 308,
									"mutability": "mutable",
									"name": "acceptedToken",
									"nameLocation": "331:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "317:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$274",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 307,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 306,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 274,
											"src": "317:6:4"
										},
										"referencedDeclaration": 274,
										"src": "317:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$274",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AcesStaking.User",
									"id": 315,
									"members": [
										{
											"constant": false,
											"id": 310,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "417:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "409:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "409:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 312,
											"mutability": "mutable",
											"name": "started",
											"nameLocation": "442:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "434:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 311,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "434:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 314,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "467:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "459:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 313,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "459:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "394:4:4",
									"nodeType": "StructDefinition",
									"scope": 766,
									"src": "387:97:4",
									"visibility": "public"
								},
								{
									"canonicalName": "AcesStaking.Level",
									"id": 320,
									"members": [
										{
											"constant": false,
											"id": 317,
											"mutability": "mutable",
											"name": "APY",
											"nameLocation": "523:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 320,
											"src": "515:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 316,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "515:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 319,
											"mutability": "mutable",
											"name": "lockPeriod",
											"nameLocation": "544:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 320,
											"src": "536:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 318,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "536:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Level",
									"nameLocation": "499:5:4",
									"nodeType": "StructDefinition",
									"scope": 766,
									"src": "492:69:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "259ee752",
									"id": 327,
									"mutability": "mutable",
									"name": "userLevelDeposit",
									"nameLocation": "672:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "620:68:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
									},
									"typeName": {
										"id": 326,
										"keyType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "628:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "620:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
										},
										"valueType": {
											"id": 325,
											"keyType": {
												"id": 322,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "647:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "639:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
												"typeString": "mapping(uint256 => struct AcesStaking.User)"
											},
											"valueType": {
												"id": 324,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 323,
													"name": "User",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 315,
													"src": "658:4:4"
												},
												"referencedDeclaration": 315,
												"src": "658:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$315_storage_ptr",
													"typeString": "struct AcesStaking.User"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "edf501ad",
									"id": 332,
									"mutability": "mutable",
									"name": "levelInfo",
									"nameLocation": "727:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 766,
									"src": "694:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
										"typeString": "mapping(uint256 => struct AcesStaking.Level)"
									},
									"typeName": {
										"id": 331,
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "702:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "694:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
											"typeString": "mapping(uint256 => struct AcesStaking.Level)"
										},
										"valueType": {
											"id": 330,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 329,
												"name": "Level",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 320,
												"src": "713:5:4"
											},
											"referencedDeclaration": 320,
											"src": "713:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Level_$320_storage_ptr",
												"typeString": "struct AcesStaking.Level"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 340,
									"name": "Deposit",
									"nameLocation": "764:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "781:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "773:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "795:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "787:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "810:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "802:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:45:4"
									},
									"src": "758:60:4"
								},
								{
									"anonymous": false,
									"id": 348,
									"name": "Withdraw",
									"nameLocation": "829:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "847:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "839:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "861:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "853:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "876:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "868:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:45:4"
									},
									"src": "823:61:4"
								},
								{
									"anonymous": false,
									"id": 356,
									"name": "Claim",
									"nameLocation": "895:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "910:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "902:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "924:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "916:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "939:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "931:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:45:4"
									},
									"src": "889:58:4"
								},
								{
									"anonymous": false,
									"id": 364,
									"name": "Compound",
									"nameLocation": "958:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "976:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "968:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "990:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "982:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1005:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "997:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:45:4"
									},
									"src": "952:61:4"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1084:47:4",
										"statements": [
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 369,
														"name": "acceptedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1094:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 371,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "1117:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 370,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1110:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$274_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1110:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"src": "1094:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$274",
														"typeString": "contract IERC20"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "1094:30:4"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1075:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1067:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:17:4"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:0:4"
									},
									"scope": 766,
									"src": "1055:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1217:25:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 381,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "1227:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1227:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "1227:8:4"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1207:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1207:9:4"
										}
									],
									"name": "pause",
									"nameLocation": "1191:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1197:2:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1217:0:4"
									},
									"scope": 766,
									"src": "1182:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "1289:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 390,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1299:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1299:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "1299:10:4"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 387,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1279:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1279:9:4"
										}
									],
									"name": "unpause",
									"nameLocation": "1261:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1269:2:4"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:4"
									},
									"scope": 766,
									"src": "1252:64:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1395:426:4",
										"statements": [
											{
												"assignments": [
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "1413:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1405:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 403,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1405:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"expression": {
														"id": 405,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1426:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1426:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 411,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1481:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 414,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1501:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AcesStaking_$766",
																		"typeString": "contract AcesStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AcesStaking_$766",
																		"typeString": "contract AcesStaking"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1493:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1493:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1493:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1508:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 408,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "1454:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "1454:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "1454:62:4"
											},
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 419,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1527:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 422,
																"indexExpression": {
																	"id": 420,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1544:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1527:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 423,
															"indexExpression": {
																"id": 421,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1556:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1527:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "1527:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 425,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "1575:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1527:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1527:55:4"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 428,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1592:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"id": 429,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1609:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1592:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 432,
															"indexExpression": {
																"id": 430,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1621:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1592:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "1592:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 434,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1640:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1640:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1592:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "1592:63:4"
											},
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 438,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1665:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 439,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1682:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1665:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 442,
															"indexExpression": {
																"id": 440,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1694:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1665:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "1665:47:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 444,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1715:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1715:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 446,
																	"name": "levelInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1733:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																		"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																	}
																},
																"id": 448,
																"indexExpression": {
																	"id": 447,
																	"name": "_level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "1743:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1733:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Level_$320_storage",
																	"typeString": "struct AcesStaking.Level storage ref"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lockPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 319,
															"src": "1733:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1715:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1665:96:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1665:96:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 454,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1786:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1798:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 456,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1777:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "EmitStatement",
												"src": "1772:42:4"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 400,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1381:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1381:13:4"
										}
									],
									"name": "deposit",
									"nameLocation": "1332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1349:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1341:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "1366:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1358:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:33:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1395:0:4"
									},
									"scope": 766,
									"src": "1323:498:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "1887:508:4",
										"statements": [
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "1905:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "1897:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 467,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1897:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"expression": {
														"id": 469,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1918:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1918:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1897:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 473,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "1946:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 475,
																		"indexExpression": {
																			"id": 474,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "1963:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1946:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 477,
																	"indexExpression": {
																		"id": 476,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "1975:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1946:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "1946:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 479,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "1994:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1946:55:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206465706f736974",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2003:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															},
															"value": "Not enough deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1938:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1938:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "1938:86:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 485,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2042:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 487,
																		"indexExpression": {
																			"id": 486,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "2059:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2042:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 489,
																	"indexExpression": {
																		"id": 488,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "2071:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2042:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "2042:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 491,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2093:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2093:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f736974206e6f7420756e6c6f636b656420796574",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2110:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
																"typeString": "literal_string \"Deposit not unlocked yet\""
															},
															"value": "Deposit not unlocked yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
																"typeString": "literal_string \"Deposit not unlocked yet\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2034:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2034:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2034:103:4"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2156:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "2148:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"id": 500,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2183:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "2195:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2166:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2166:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:54:4"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 504,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2221:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 507,
																"indexExpression": {
																	"id": 505,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "2238:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2221:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 506,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2250:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2221:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "2221:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 510,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2269:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2221:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2221:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2310:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 517,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2322:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 518,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "2332:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2322:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 513,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2287:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2287:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2287:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "2287:53:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 523,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2365:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2377:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 525,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2380:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2356:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "EmitStatement",
												"src": "2351:37:4"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1836:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1854:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1846:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "1871:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1863:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1845:33:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1887:0:4"
									},
									"scope": 766,
									"src": "1827:568:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "2441:380:4",
										"statements": [
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "2459:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "2451:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2451:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"expression": {
														"id": 536,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2472:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2472:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2451:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 540,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2500:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 542,
																		"indexExpression": {
																			"id": 541,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 535,
																			"src": "2517:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2500:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 544,
																	"indexExpression": {
																		"id": 543,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "2529:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2500:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 545,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "2500:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2500:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2550:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2492:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2492:78:4"
											},
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2589:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "2581:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2581:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2616:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2599:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2599:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2581:54:4"
											},
											{
												"expression": {
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 558,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2646:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 561,
																"indexExpression": {
																	"id": 559,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "2663:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2646:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 562,
															"indexExpression": {
																"id": 560,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "2675:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2646:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "2646:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 564,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2694:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2694:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2646:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "2646:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2743:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "2755:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 568,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2720:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2720:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2720:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "2720:43:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 576,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2786:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2798:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 578,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "2806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2779:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "EmitStatement",
												"src": "2774:40:4"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2410:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "2425:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2417:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:16:4"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2441:0:4"
									},
									"scope": 766,
									"src": "2401:420:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "2870:394:4",
										"statements": [
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "2888:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "2880:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 587,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2880:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"expression": {
														"id": 589,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2901:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2901:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2880:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 593,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2929:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 595,
																		"indexExpression": {
																			"id": 594,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "2946:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2929:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 597,
																	"indexExpression": {
																		"id": 596,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "2958:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2929:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "2929:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2976:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2929:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2979:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2921:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2921:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "2921:78:4"
											},
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "3018:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "3010:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3010:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [
														{
															"id": 607,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3045:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "3057:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 606,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3028:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3028:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3010:54:4"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 611,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "3075:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 614,
																"indexExpression": {
																	"id": 612,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "3092:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3075:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "3104:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3075:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "3075:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 617,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "3123:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3075:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "3075:55:4"
											},
											{
												"expression": {
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 620,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "3140:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 623,
																"indexExpression": {
																	"id": 621,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "3157:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3140:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 624,
															"indexExpression": {
																"id": 622,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "3169:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3140:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "3140:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 626,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3188:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3188:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3140:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "3140:63:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 631,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3229:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "3241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 633,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "3249:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "Compound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "3219:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "EmitStatement",
												"src": "3214:43:4"
											}
										]
									},
									"functionSelector": "aa5f7e26",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compound",
									"nameLocation": "2836:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "2854:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "2846:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:16:4"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2870:0:4"
									},
									"scope": 766,
									"src": "2827:437:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "3357:376:4",
										"statements": [
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "3375:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3367:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3367:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 648,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3388:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3388:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 650,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "3406:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 652,
																"indexExpression": {
																	"id": 651,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "3423:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3406:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 654,
															"indexExpression": {
																"id": 653,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "3430:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3406:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "3406:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3388:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3367:78:4"
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3463:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3455:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3455:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 660,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3473:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 662,
															"indexExpression": {
																"id": 661,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "3490:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3473:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 664,
														"indexExpression": {
															"id": 663,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "3497:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3473:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 310,
													"src": "3473:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3455:57:4"
											},
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "APY",
														"nameLocation": "3531:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3523:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3523:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 669,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3537:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 671,
														"indexExpression": {
															"id": 670,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "3547:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3537:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "APY",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 317,
													"src": "3537:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3523:35:4"
											},
											{
												"assignments": [
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "rewardsPerSecond",
														"nameLocation": "3577:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3569:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3569:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 676,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "3598:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 677,
																				"name": "APY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 668,
																				"src": "3608:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3598:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 679,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3597:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3615:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "3597:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 682,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3596:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:8:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "3596:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3569:63:4"
											},
											{
												"assignments": [
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "rewardsEarned",
														"nameLocation": "3650:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3642:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3642:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 688,
														"name": "timeStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "3666:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 689,
														"name": "rewardsPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "3679:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3666:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3642:53:4"
											},
											{
												"expression": {
													"id": 692,
													"name": "rewardsEarned",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "3713:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 645,
												"id": 693,
												"nodeType": "Return",
												"src": "3706:20:4"
											}
										]
									},
									"functionSelector": "beb8314c",
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "3279:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3305:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3297:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "3320:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3312:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3296:31:4"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3349:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3348:9:4"
									},
									"scope": 766,
									"src": "3270:463:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "3860:154:4",
										"statements": [
											{
												"expression": {
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 709,
														"name": "level0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3870:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 710,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3879:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 712,
															"indexExpression": {
																"id": 711,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "3896:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3879:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 714,
														"indexExpression": {
															"hexValue": "30",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3903:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3879:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "3870:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "3870:35:4"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 717,
														"name": "level1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3915:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 718,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3924:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 720,
															"indexExpression": {
																"id": 719,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "3941:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3924:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 722,
														"indexExpression": {
															"hexValue": "31",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3948:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3924:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "3915:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "3915:35:4"
											},
											{
												"expression": {
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 725,
														"name": "level2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3960:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 726,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3969:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 728,
															"indexExpression": {
																"id": 727,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "3986:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3969:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 730,
														"indexExpression": {
															"hexValue": "32",
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3993:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3969:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "3960:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 732,
												"nodeType": "ExpressionStatement",
												"src": "3960:35:4"
											}
										]
									},
									"functionSelector": "6386c1c7",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nameLocation": "3752:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3772:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "3764:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:15:4"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "level0",
												"nameLocation": "3813:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "3801:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$315_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 700,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 699,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3801:4:4"
													},
													"referencedDeclaration": 315,
													"src": "3801:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "level1",
												"nameLocation": "3833:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "3821:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$315_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 702,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3821:4:4"
													},
													"referencedDeclaration": 315,
													"src": "3821:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "level2",
												"nameLocation": "3853:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "3841:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$315_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3841:4:4"
													},
													"referencedDeclaration": 315,
													"src": "3841:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:60:4"
									},
									"scope": 766,
									"src": "3743:271:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "4129:105:4",
										"statements": [
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "level0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "4139:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 747,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4148:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 749,
														"indexExpression": {
															"hexValue": "30",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4158:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4148:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "4139:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "4139:21:4"
											},
											{
												"expression": {
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 752,
														"name": "level1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "4170:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 753,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4179:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 755,
														"indexExpression": {
															"hexValue": "31",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4189:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4179:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "4170:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "4170:21:4"
											},
											{
												"expression": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 758,
														"name": "level2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "4201:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 759,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4210:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 761,
														"indexExpression": {
															"hexValue": "32",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4220:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4210:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "4201:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 763,
												"nodeType": "ExpressionStatement",
												"src": "4201:21:4"
											}
										]
									},
									"functionSelector": "e788cee5",
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevelsInfo",
									"nameLocation": "4029:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4042:2:4"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "level0",
												"nameLocation": "4080:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4067:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 737,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 736,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 320,
														"src": "4067:5:4"
													},
													"referencedDeclaration": 320,
													"src": "4067:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "level1",
												"nameLocation": "4101:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4088:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 740,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 739,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 320,
														"src": "4088:5:4"
													},
													"referencedDeclaration": 320,
													"src": "4088:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "level2",
												"nameLocation": "4122:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "4109:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 743,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 742,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 320,
														"src": "4109:5:4"
													},
													"referencedDeclaration": 320,
													"src": "4109:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4066:63:4"
									},
									"scope": 766,
									"src": "4020:214:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 767,
							"src": "224:4012:4",
							"usedErrors": []
						}
					],
					"src": "32:4204:4"
				},
				"id": 4
			}
		}
	}
}