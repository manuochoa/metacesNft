{
	"id": "226733712876bff3b054a3b63f009d23",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ncontract AcesStaking is Ownable, Pausable {\n    // Address of the token for the staking.\n    IERC20 public acceptedToken;\n    \n    // Struc with user details.\n    struct User {\n        uint256 balance;\n        uint256 started;\n        uint256 unlockTime;\n    }  \n\n    struct Level {\n        uint256 APY;\n        uint256 lockPeriod;\n    } \n    \n    // Mapping for user details of  each class.\n    mapping(address => mapping(uint256 => User)) public userLevelDeposit;\n    mapping(uint256 => Level) public levelInfo;\n\n    // Events.\n    event Deposit (address user, uint256 class, uint256 amount);\n    event Withdraw (address user, uint256 class, uint256 amount);\n    event Claim (address user, uint256 class, uint256 amount);\n    event Compound (address user, uint256 class, uint256 amount);\n \n    // Set the token to be staked.\n    constructor(address _token ) {\n        acceptedToken = IERC20(_token);\n    }   \n    \n    // Pause and Unpause the contract\n    function pause () public onlyOwner {\n        _pause();\n    }\n    \n    function unpause () public onlyOwner {\n        _unpause();\n    } \n\n    function deposit (uint256 _amount, uint256 _level) public whenNotPaused {\n        address _msgSender = msg.sender;       \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        userLevelDeposit[_msgSender][_level].balance += _amount;\n        userLevelDeposit[_msgSender][_level].started += block.timestamp;\n        userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod;\n\n        emit Deposit (_msgSender, _level, _amount);\n    }\n\n    function withdraw (uint256 _amount, uint256 _level) public  {\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\");\n        require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n        \n        userLevelDeposit[_msgSender][_level].balance -= _amount;\n\n        acceptedToken.transfer(_msgSender, _amount + rewards);\n\n        emit Withdraw(_msgSender, 0, _amount);\n    }\n\n    function claim (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        userLevelDeposit[_msgSender][_level].started += block.timestamp;\n\n        acceptedToken.transfer(_msgSender, rewards);\n\n        emit Claim (_msgSender, _level, rewards);\n    }\n\n    function compound (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        userLevelDeposit[_msgSender][_level].balance += rewards;\n        userLevelDeposit[_msgSender][_level].started += block.timestamp;\n\n        emit Compound (_msgSender, _level, rewards);\n    }\n\n    function calculateRewards (address _user, uint256 _level) public view returns (uint256){\n        uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].started;\n        uint256 balance = userLevelDeposit[_user][_level].balance; \n        uint256 APY = levelInfo[_level].APY;\n\n        uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days;\n        uint256 rewardsEarned = timeStaked * rewardsPerSecond;\n\n        return rewardsEarned;\n    }    \n\n    function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){\n        level0 = userLevelDeposit[_user][0];\n        level1 = userLevelDeposit[_user][1];\n        level2 = userLevelDeposit[_user][2];  \n\n        level0Rewards = calculateRewards(_user, 0);\n        level1Rewards = calculateRewards(_user, 1);\n        level2Rewards = calculateRewards(_user, 2);\n    }\n\n    function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){\n        level0 = levelInfo[0];\n        level1 = levelInfo[1];\n        level2 = levelInfo[2];     \n    }\n\n    function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {\n        levelInfo[level].APY = _APY;\n        levelInfo[level].lockPeriod = _lockTime;\n    }\n\n    function withdrawTokens() external onlyOwner {\n        acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this)));\n    }\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"AcesStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Compound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptedToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockTime",
									"type": "uint256"
								}
							],
							"name": "changeLevelValues",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLevelsInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level1",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level2",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level1",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level2",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "level0Rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "level1Rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "level2Rewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "levelInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userLevelDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "started",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":224:4789  contract AcesStaking is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":1055:1131  constructor(address _token ) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":991:996  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  0x01\n    /* \"staking.sol\":1094:1124  acceptedToken = IERC20(_token) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"staking.sol\":224:4789  contract AcesStaking is Ownable, Pausable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"staking.sol\":224:4789  contract AcesStaking is Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":224:4789  contract AcesStaking is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xbeb8314c\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xbeb8314c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe788cee5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xedf501ad\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x8456cb59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8d8f2adb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xaa5f7e26\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x441a3e70\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x451c3d80\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6386c1c7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x259ee752\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x32e96203\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":620:688  mapping(address => mapping(uint256 => User)) public userLevelDeposit */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      0x02\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap2\n      swap1\n      swap3\n      add\n      sload\n      dup4\n      jump\n    tag_24:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8588:8613   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":8644:8646   */\n      0x20\n        /* \"#utility.yul\":8629:8647   */\n      dup5\n      add\n        /* \"#utility.yul\":8622:8656   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":8672:8690   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8665:8699   */\n      mstore\n        /* \"#utility.yul\":8576:8578   */\n      0x60\n        /* \"#utility.yul\":8561:8579   */\n      add\n        /* \"staking.sol\":620:688  mapping(address => mapping(uint256 => User)) public userLevelDeposit */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":4458:4645  function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"staking.sol\":2401:2821  function claim (uint256 _level) external{... */\n    tag_5:\n      tag_30\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"staking.sol\":1252:1316  function unpause () public onlyOwner {... */\n    tag_6:\n      tag_30\n      tag_39\n      jump\t// in\n        /* \"staking.sol\":1827:2395  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_7:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n    tag_8:\n      sload(0x01)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2393:2425   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2375:2426   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2363:2365   */\n      0x20\n        /* \"#utility.yul\":2348:2366   */\n      add\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n      tag_28\n        /* \"#utility.yul\":2229:2432   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":3969:3983   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3962:3984   */\n      iszero\n        /* \"#utility.yul\":3944:3985   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3932:3934   */\n      0x20\n        /* \"#utility.yul\":3917:3935   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":3804:3991   */\n      jump\n        /* \"staking.sol\":3743:4232  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){... */\n    tag_10:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2093:2105   */\n      dup8\n      mload\n        /* \"#utility.yul\":2081:2106   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2155:2159   */\n      0x20\n        /* \"#utility.yul\":2144:2160   */\n      dup1\n      dup10\n      add\n        /* \"#utility.yul\":2138:2161   */\n      mload\n        /* \"#utility.yul\":2122:2136   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":2115:2162   */\n      mstore\n        /* \"#utility.yul\":2200:2216   */\n      swap8\n      dup3\n      add\n        /* \"#utility.yul\":2194:2217   */\n      mload\n        /* \"#utility.yul\":2178:2192   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":2171:2218   */\n      mstore\n        /* \"#utility.yul\":2093:2105   */\n      dup7\n      mload\n        /* \"#utility.yul\":7744:7746   */\n      0x60\n        /* \"#utility.yul\":7729:7747   */\n      dup3\n      add\n        /* \"#utility.yul\":2081:2106   */\n      mstore\n        /* \"#utility.yul\":2144:2160   */\n      dup8\n      dup8\n      add\n        /* \"#utility.yul\":2138:2161   */\n      mload\n        /* \"#utility.yul\":2122:2136   */\n      0x80\n      dup3\n      add\n        /* \"#utility.yul\":2115:2162   */\n      mstore\n        /* \"#utility.yul\":2200:2216   */\n      swap6\n      dup2\n      add\n        /* \"#utility.yul\":2194:2217   */\n      mload\n        /* \"#utility.yul\":2178:2192   */\n      0xa0\n      dup8\n      add\n        /* \"#utility.yul\":2171:2218   */\n      mstore\n        /* \"#utility.yul\":2093:2105   */\n      dup5\n      mload\n        /* \"#utility.yul\":7803:7806   */\n      0xc0\n        /* \"#utility.yul\":7788:7807   */\n      dup8\n      add\n        /* \"#utility.yul\":2081:2106   */\n      mstore\n        /* \"#utility.yul\":2144:2160   */\n      swap6\n      dup5\n      add\n        /* \"#utility.yul\":2138:2161   */\n      mload\n        /* \"#utility.yul\":2122:2136   */\n      0xe0\n      dup7\n      add\n        /* \"#utility.yul\":2115:2162   */\n      mstore\n        /* \"#utility.yul\":2200:2216   */\n      swap3\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2194:2217   */\n      mload\n        /* \"#utility.yul\":2178:2192   */\n      0x0100\n      dup5\n      add\n        /* \"#utility.yul\":2171:2218   */\n      mstore\n        /* \"#utility.yul\":7839:7842   */\n      0x0120\n        /* \"#utility.yul\":7824:7843   */\n      dup4\n      add\n        /* \"#utility.yul\":7817:7852   */\n      mstore\n        /* \"#utility.yul\":7883:7886   */\n      0x0140\n        /* \"#utility.yul\":7868:7887   */\n      dup3\n      add\n        /* \"#utility.yul\":7861:7896   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7927:7930   */\n      0x0160\n        /* \"#utility.yul\":7912:7931   */\n      dup2\n      add\n        /* \"#utility.yul\":7905:7940   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7635:7638   */\n      0x0180\n        /* \"#utility.yul\":7620:7639   */\n      add\n        /* \"staking.sol\":3743:4232  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){... */\n      tag_28\n        /* \"#utility.yul\":7235:7946   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_30\n      tag_59\n      jump\t// in\n        /* \"staking.sol\":1182:1242  function pause () public onlyOwner {... */\n    tag_12:\n      tag_30\n      tag_61\n      jump\t// in\n        /* \"staking.sol\":4651:4787  function withdrawTokens() external onlyOwner {... */\n    tag_13:\n      tag_30\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_44)\n        /* \"staking.sol\":2827:3264  function compound (uint256 _level) external{... */\n    tag_15:\n      tag_30\n      tag_69\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"staking.sol\":3270:3733  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_16:\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n        /* \"#utility.yul\":8097:8122   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8085:8087   */\n      0x20\n        /* \"#utility.yul\":8070:8088   */\n      add\n        /* \"staking.sol\":3270:3733  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n      tag_28\n        /* \"#utility.yul\":7951:8128   */\n      jump\n        /* \"staking.sol\":1323:1821  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_17:\n      tag_30\n      tag_77\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"staking.sol\":4238:4452  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){... */\n    tag_18:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"staking.sol\":4357:4378  level0 = levelInfo[0] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n        /* \"staking.sol\":4366:4378  levelInfo[0] */\n      0x3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff\n        /* \"staking.sol\":4357:4378  level0 = levelInfo[0] */\n      sload\n      dup2\n      mstore\n      sload(0x3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f00)\n      dup2\n      dup5\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4388:4409  level1 = levelInfo[1] */\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      dup7\n      mstore\n        /* \"staking.sol\":4397:4409  levelInfo[1] */\n      0xa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c\n        /* \"staking.sol\":4388:4409  level1 = levelInfo[1] */\n      sload\n      dup2\n      mstore\n      sload(0xa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054d)\n      dup2\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4438:4439  2 */\n      0x02\n        /* \"staking.sol\":4428:4440  levelInfo[2] */\n      swap1\n      swap5\n      mstore\n        /* \"staking.sol\":4366:4375  levelInfo */\n      0x03\n        /* \"staking.sol\":4428:4440  levelInfo[2] */\n      dup6\n      mstore\n        /* \"staking.sol\":4419:4440  level2 = levelInfo[2] */\n      dup6\n      mload\n      dup1\n      dup8\n      add\n      dup8\n      mstore\n        /* \"staking.sol\":4428:4440  levelInfo[2] */\n      0xc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d\n        /* \"staking.sol\":4419:4440  level2 = levelInfo[2] */\n      sload\n      dup2\n      mstore\n      sload(0xc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4e)\n      dup2\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4238:4452  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){... */\n      dup8\n      mload\n        /* \"#utility.yul\":1943:1955   */\n      swap5\n      mload\n        /* \"#utility.yul\":1931:1956   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap3\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      swap6\n      dup5\n      add\n        /* \"#utility.yul\":1965:2012   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":1943:1955   */\n      mload\n        /* \"#utility.yul\":7144:7162   */\n      swap5\n      dup3\n      add\n        /* \"#utility.yul\":1931:1956   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap1\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":1965:2012   */\n      mstore\n        /* \"#utility.yul\":1943:1955   */\n      swap1\n      mload\n        /* \"#utility.yul\":7219:7222   */\n      0x80\n        /* \"#utility.yul\":7204:7223   */\n      dup3\n      add\n        /* \"#utility.yul\":1931:1956   */\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap1\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":1965:2012   */\n      mstore\n        /* \"#utility.yul\":7048:7051   */\n      0xc0\n        /* \"#utility.yul\":7033:7052   */\n      add\n        /* \"staking.sol\":4238:4452  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){... */\n      tag_28\n        /* \"#utility.yul\":6726:7230   */\n      jump\n        /* \"staking.sol\":694:736  mapping(uint256 => Level) public levelInfo */\n    tag_19:\n      tag_83\n      tag_84\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_84:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_83:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8307:8332   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":8363:8365   */\n      0x20\n        /* \"#utility.yul\":8348:8366   */\n      dup4\n      add\n        /* \"#utility.yul\":8341:8375   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8280:8298   */\n      add\n        /* \"staking.sol\":694:736  mapping(uint256 => Level) public levelInfo */\n      tag_28\n        /* \"#utility.yul\":8133:8381   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_30\n      tag_89\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"staking.sol\":4458:4645  function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"staking.sol\":4562:4578  levelInfo[level] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"staking.sol\":4562:4571  levelInfo */\n      0x03\n        /* \"staking.sol\":4562:4578  levelInfo[level] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"staking.sol\":4562:4589  levelInfo[level].APY = _APY */\n      swap1\n      dup2\n      sstore\n        /* \"staking.sol\":4599:4626  levelInfo[level].lockPeriod */\n      0x01\n      add\n        /* \"staking.sol\":4599:4638  levelInfo[level].lockPeriod = _lockTime */\n      sstore\n        /* \"staking.sol\":4458:4645  function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":2401:2821  function claim (uint256 _level) external{... */\n    tag_37:\n        /* \"staking.sol\":2472:2482  msg.sender */\n      caller\n        /* \"staking.sol\":2451:2469  address _msgSender */\n      0x00\n        /* \"staking.sol\":2500:2528  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":2500:2516  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2500:2528  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2500:2536  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":2500:2544  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":2492:2570  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6235:6237   */\n      0x20\n        /* \"staking.sol\":2492:2570  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6217:6238   */\n      mstore\n        /* \"#utility.yul\":6274:6276   */\n      0x11\n        /* \"#utility.yul\":6254:6272   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6247:6277   */\n      mstore\n      shl(0x7a, 0x139bc81858dd1a5d994819195c1bdcda5d)\n        /* \"#utility.yul\":6293:6311   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6286:6333   */\n      mstore\n        /* \"#utility.yul\":6350:6368   */\n      0x64\n      add\n        /* \"staking.sol\":2492:2570  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_96\n        /* \"#utility.yul\":6033:6374   */\n      jump\n        /* \"staking.sol\":2492:2570  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n    tag_100:\n        /* \"staking.sol\":2581:2596  uint256 rewards */\n      0x00\n        /* \"staking.sol\":2599:2635  calculateRewards(_msgSender, _level) */\n      tag_103\n        /* \"staking.sol\":2616:2626  _msgSender */\n      dup3\n        /* \"staking.sol\":2628:2634  _level */\n      dup5\n        /* \"staking.sol\":2599:2615  calculateRewards */\n      tag_73\n        /* \"staking.sol\":2599:2635  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2646:2674  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2646:2662  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2646:2674  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2646:2682  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":2646:2690  userLevelDeposit[_msgSender][_level].started */\n      0x01\n      add\n        /* \"staking.sol\":2646:2709  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      dup1\n      sload\n        /* \"staking.sol\":2581:2635  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":2694:2709  block.timestamp */\n      timestamp\n      swap3\n        /* \"staking.sol\":2646:2690  userLevelDeposit[_msgSender][_level].started */\n      swap1\n      swap2\n        /* \"staking.sol\":2646:2674  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":2646:2709  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_104\n      swap1\n        /* \"staking.sol\":2694:2709  block.timestamp */\n      dup5\n      swap1\n        /* \"staking.sol\":2646:2709  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_105\n      jump\t// in\n    tag_104:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":2720:2733  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":2720:2763  acceptedToken.transfer(_msgSender, rewards) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3367:3399   */\n      dup5\n      dup2\n      and\n        /* \"staking.sol\":2720:2763  acceptedToken.transfer(_msgSender, rewards) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3349:3400   */\n      mstore\n        /* \"#utility.yul\":3416:3434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3409:3443   */\n      dup5\n      swap1\n      mstore\n        /* \"staking.sol\":2720:2733  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":2720:2742  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3322:3340   */\n      0x44\n      add\n        /* \"staking.sol\":2720:2763  acceptedToken.transfer(_msgSender, rewards) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      pop\n        /* \"staking.sol\":2779:2814  Claim (_msgSender, _level, rewards) */\n      0x34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7\n        /* \"staking.sol\":2786:2796  _msgSender */\n      dup3\n        /* \"staking.sol\":2798:2804  _level */\n      dup5\n        /* \"staking.sol\":2806:2813  rewards */\n      dup4\n        /* \"staking.sol\":2779:2814  Claim (_msgSender, _level, rewards) */\n      mload(0x40)\n      tag_113\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":2441:2821  {... */\n      pop\n      pop\n        /* \"staking.sol\":2401:2821  function claim (uint256 _level) external{... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":1252:1316  function unpause () public onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_118:\n        /* \"staking.sol\":1299:1309  _unpause() */\n      tag_121\n        /* \"staking.sol\":1299:1307  _unpause */\n      tag_122\n        /* \"staking.sol\":1299:1309  _unpause() */\n      jump\t// in\n    tag_121:\n        /* \"staking.sol\":1252:1316  function unpause () public onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":1827:2395  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_43:\n        /* \"staking.sol\":1918:1928  msg.sender */\n      caller\n        /* \"staking.sol\":1897:1915  address _msgSender */\n      0x00\n        /* \"staking.sol\":1946:1974  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":1946:1962  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1946:1974  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":1946:1982  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":1946:1990  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":1946:2001  userLevelDeposit[_msgSender][_level].balance >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"staking.sol\":1938:2024  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6581:6583   */\n      0x20\n        /* \"staking.sol\":1938:2024  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6563:6584   */\n      mstore\n        /* \"#utility.yul\":6620:6622   */\n      0x12\n        /* \"#utility.yul\":6600:6618   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6593:6623   */\n      mstore\n      shl(0x72, 0x139bdd08195b9bdd59da0819195c1bdcda5d)\n        /* \"#utility.yul\":6639:6657   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6632:6680   */\n      mstore\n        /* \"#utility.yul\":6697:6715   */\n      0x64\n      add\n        /* \"staking.sol\":1938:2024  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      tag_96\n        /* \"#utility.yul\":6379:6721   */\n      jump\n        /* \"staking.sol\":1938:2024  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2042:2070  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2042:2058  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2042:2070  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":2042:2078  userLevelDeposit[_msgSender][_level] */\n      dup7\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"staking.sol\":2042:2089  userLevelDeposit[_msgSender][_level].unlockTime */\n      add\n      sload\n        /* \"staking.sol\":2093:2108  block.timestamp */\n      timestamp\n      lt\n        /* \"staking.sol\":2042:2108  userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp */\n      iszero\n        /* \"staking.sol\":2034:2137  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5176:5178   */\n      0x20\n        /* \"staking.sol\":2034:2137  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5158:5179   */\n      mstore\n        /* \"#utility.yul\":5215:5217   */\n      0x18\n        /* \"#utility.yul\":5195:5213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5188:5218   */\n      mstore\n        /* \"#utility.yul\":5254:5280   */\n      0x4465706f736974206e6f7420756e6c6f636b6564207965740000000000000000\n        /* \"#utility.yul\":5234:5252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5227:5281   */\n      mstore\n        /* \"#utility.yul\":5298:5316   */\n      0x64\n      add\n        /* \"staking.sol\":2034:2137  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      tag_96\n        /* \"#utility.yul\":4974:5322   */\n      jump\n        /* \"staking.sol\":2034:2137  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n    tag_127:\n        /* \"staking.sol\":2148:2163  uint256 rewards */\n      0x00\n        /* \"staking.sol\":2166:2202  calculateRewards(_msgSender, _level) */\n      tag_130\n        /* \"staking.sol\":2183:2193  _msgSender */\n      dup3\n        /* \"staking.sol\":2195:2201  _level */\n      dup5\n        /* \"staking.sol\":2166:2182  calculateRewards */\n      tag_73\n        /* \"staking.sol\":2166:2202  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2221:2249  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2221:2237  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2221:2249  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2221:2257  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":2221:2276  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":2148:2202  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":2269:2276  _amount */\n      dup7\n      swap3\n        /* \"staking.sol\":2221:2257  userLevelDeposit[_msgSender][_level] */\n      swap1\n      swap2\n        /* \"staking.sol\":2221:2249  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":2221:2276  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      tag_131\n      swap1\n        /* \"staking.sol\":2269:2276  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":2221:2276  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      tag_132\n      jump\t// in\n    tag_131:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":2287:2300  acceptedToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"staking.sol\":2287:2309  acceptedToken.transfer */\n      0xa9059cbb\n        /* \"staking.sol\":2310:2320  _msgSender */\n      dup4\n        /* \"staking.sol\":2322:2339  _amount + rewards */\n      tag_133\n        /* \"staking.sol\":2332:2339  rewards */\n      dup5\n        /* \"staking.sol\":2322:2329  _amount */\n      dup9\n        /* \"staking.sol\":2322:2339  _amount + rewards */\n      tag_105\n      jump\t// in\n    tag_133:\n        /* \"staking.sol\":2287:2340  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3367:3399   */\n      swap1\n      swap3\n      and\n        /* \"staking.sol\":2287:2340  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3349:3400   */\n      mstore\n        /* \"#utility.yul\":3416:3434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3409:3443   */\n      mstore\n        /* \"#utility.yul\":3322:3340   */\n      0x44\n      add\n        /* \"staking.sol\":2287:2340  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_138:\n      pop\n        /* \"staking.sol\":2356:2388  Withdraw(_msgSender, 0, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"staking.sol\":2365:2375  _msgSender */\n      dup3\n        /* \"staking.sol\":2377:2378  0 */\n      0x00\n        /* \"staking.sol\":2380:2387  _amount */\n      dup7\n        /* \"staking.sol\":2356:2388  Withdraw(_msgSender, 0, _amount) */\n      mload(0x40)\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":1887:2395  {... */\n      pop\n      pop\n        /* \"staking.sol\":1827:2395  function withdraw (uint256 _amount, uint256 _level) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":3743:4232  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){... */\n    tag_55:\n        /* \"staking.sol\":3801:3819  User memory level0 */\n      tag_142\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_142:\n        /* \"staking.sol\":3822:3840  User memory level1 */\n      tag_144\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_144:\n        /* \"staking.sol\":3842:3860  User memory level2 */\n      tag_145\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_145:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3950:3973  userLevelDeposit[_user] */\n      dup2\n      and\n        /* \"staking.sol\":3862:3883  uint256 level0Rewards */\n      0x00\n        /* \"staking.sol\":3950:3973  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3950:3966  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3950:3973  userLevelDeposit[_user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":3950:3976  userLevelDeposit[_user][0] */\n      dup5\n      dup1\n      mstore\n      dup1\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"staking.sol\":3941:3976  level0 = userLevelDeposit[_user][0] */\n      dup3\n      mload\n      0x60\n      dup1\n      dup3\n      add\n      dup6\n      mstore\n      dup3\n      sload\n      dup3\n      mstore\n      0x01\n      dup1\n      dup5\n      add\n      sload\n      dup4\n      dup9\n      add\n      mstore\n      swap3\n      dup8\n      add\n      sload\n      dup3\n      dup7\n      add\n      mstore\n        /* \"staking.sol\":3995:4021  userLevelDeposit[_user][1] */\n      dup3\n      dup9\n      mstore\n      dup4\n      dup7\n      mstore\n      dup5\n      dup9\n      keccak256\n        /* \"staking.sol\":3986:4021  level1 = userLevelDeposit[_user][1] */\n      dup6\n      mload\n      dup1\n      dup4\n      add\n      dup8\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      dup2\n      dup6\n      add\n      sload\n      dup2\n      dup10\n      add\n      mstore\n      swap1\n      dup9\n      add\n      sload\n      dup2\n      dup8\n      add\n      mstore\n        /* \"staking.sol\":4040:4066  userLevelDeposit[_user][2] */\n      dup8\n      dup10\n      mstore\n      swap4\n      dup7\n      mstore\n      dup5\n      dup9\n      keccak256\n        /* \"staking.sol\":4031:4066  level2 = userLevelDeposit[_user][2] */\n      dup6\n      mload\n      swap2\n      dup3\n      add\n      dup7\n      mstore\n      dup1\n      sload\n      dup3\n      mstore\n      swap3\n      dup4\n      add\n      sload\n      swap6\n      dup2\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      swap5\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"staking.sol\":3941:3976  level0 = userLevelDeposit[_user][0] */\n      swap2\n      swap3\n        /* \"staking.sol\":3862:3883  uint256 level0Rewards */\n      dup1\n      dup1\n        /* \"staking.sol\":4095:4121  calculateRewards(_user, 0) */\n      tag_147\n        /* \"staking.sol\":3967:3972  _user */\n      dup8\n        /* \"staking.sol\":3862:3883  uint256 level0Rewards */\n      dup3\n        /* \"staking.sol\":4095:4111  calculateRewards */\n      tag_73\n        /* \"staking.sol\":4095:4121  calculateRewards(_user, 0) */\n      jump\t// in\n    tag_147:\n        /* \"staking.sol\":4079:4121  level0Rewards = calculateRewards(_user, 0) */\n      swap3\n      pop\n        /* \"staking.sol\":4147:4173  calculateRewards(_user, 1) */\n      tag_148\n        /* \"staking.sol\":4164:4169  _user */\n      dup8\n        /* \"staking.sol\":4171:4172  1 */\n      0x01\n        /* \"staking.sol\":4147:4163  calculateRewards */\n      tag_73\n        /* \"staking.sol\":4147:4173  calculateRewards(_user, 1) */\n      jump\t// in\n    tag_148:\n        /* \"staking.sol\":4131:4173  level1Rewards = calculateRewards(_user, 1) */\n      swap2\n      pop\n        /* \"staking.sol\":4199:4225  calculateRewards(_user, 2) */\n      tag_149\n        /* \"staking.sol\":4216:4221  _user */\n      dup8\n        /* \"staking.sol\":4223:4224  2 */\n      0x02\n        /* \"staking.sol\":4199:4215  calculateRewards */\n      tag_73\n        /* \"staking.sol\":4199:4225  calculateRewards(_user, 2) */\n      jump\t// in\n    tag_149:\n        /* \"staking.sol\":4183:4225  level2Rewards = calculateRewards(_user, 2) */\n      swap1\n      pop\n        /* \"staking.sol\":3743:4232  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){... */\n      swap2\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      swap6\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"staking.sol\":1182:1242  function pause () public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_161:\n        /* \"staking.sol\":1227:1235  _pause() */\n      tag_121\n        /* \"staking.sol\":1227:1233  _pause */\n      tag_165\n        /* \"staking.sol\":1227:1235  _pause() */\n      jump\t// in\n        /* \"staking.sol\":4651:4787  function withdrawTokens() external onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_169:\n        /* \"staking.sol\":4706:4719  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":4741:4779  acceptedToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"staking.sol\":4773:4777  this */\n      address\n        /* \"staking.sol\":4741:4779  acceptedToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2375:2426   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4706:4719  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":4706:4728  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"staking.sol\":4729:4739  msg.sender */\n      caller\n      swap1\n        /* \"staking.sol\":4706:4719  acceptedToken */\n      dup4\n      swap1\n        /* \"staking.sol\":4741:4764  acceptedToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2348:2366   */\n      0x24\n      add\n        /* \"staking.sol\":4741:4779  acceptedToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"staking.sol\":4706:4780  acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this))) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3367:3399   */\n      swap1\n      swap3\n      and\n        /* \"staking.sol\":4706:4780  acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this))) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3349:3400   */\n      mstore\n        /* \"#utility.yul\":3416:3434   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3409:3443   */\n      mstore\n        /* \"#utility.yul\":3322:3340   */\n      0x44\n      add\n        /* \"staking.sol\":4706:4780  acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this))) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_182\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_182:\n      pop\n        /* \"staking.sol\":4651:4787  function withdrawTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":2827:3264  function compound (uint256 _level) external{... */\n    tag_70:\n        /* \"staking.sol\":2901:2911  msg.sender */\n      caller\n        /* \"staking.sol\":2880:2898  address _msgSender */\n      0x00\n        /* \"staking.sol\":2929:2957  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":2929:2945  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2929:2957  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2929:2965  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":2929:2973  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":2921:2999  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6235:6237   */\n      0x20\n        /* \"staking.sol\":2921:2999  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6217:6238   */\n      mstore\n        /* \"#utility.yul\":6274:6276   */\n      0x11\n        /* \"#utility.yul\":6254:6272   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6247:6277   */\n      mstore\n      shl(0x7a, 0x139bc81858dd1a5d994819195c1bdcda5d)\n        /* \"#utility.yul\":6293:6311   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6286:6333   */\n      mstore\n        /* \"#utility.yul\":6350:6368   */\n      0x64\n      add\n        /* \"staking.sol\":2921:2999  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_96\n        /* \"#utility.yul\":6033:6374   */\n      jump\n        /* \"staking.sol\":2921:2999  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n    tag_185:\n        /* \"staking.sol\":3010:3025  uint256 rewards */\n      0x00\n        /* \"staking.sol\":3028:3064  calculateRewards(_msgSender, _level) */\n      tag_187\n        /* \"staking.sol\":3045:3055  _msgSender */\n      dup3\n        /* \"staking.sol\":3057:3063  _level */\n      dup5\n        /* \"staking.sol\":3028:3044  calculateRewards */\n      tag_73\n        /* \"staking.sol\":3028:3064  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3075:3103  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3075:3091  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3075:3103  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3075:3111  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":3075:3130  userLevelDeposit[_msgSender][_level].balance += rewards */\n      dup1\n      sload\n        /* \"staking.sol\":3010:3064  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"staking.sol\":3075:3111  userLevelDeposit[_msgSender][_level] */\n      swap1\n      swap2\n        /* \"staking.sol\":3075:3103  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":3075:3130  userLevelDeposit[_msgSender][_level].balance += rewards */\n      tag_188\n      swap1\n        /* \"staking.sol\":3010:3064  uint256 rewards = calculateRewards(_msgSender, _level) */\n      dup5\n      swap1\n        /* \"staking.sol\":3075:3130  userLevelDeposit[_msgSender][_level].balance += rewards */\n      tag_105\n      jump\t// in\n    tag_188:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3140:3168  userLevelDeposit[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3140:3156  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3140:3168  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3140:3176  userLevelDeposit[_msgSender][_level] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":3140:3184  userLevelDeposit[_msgSender][_level].started */\n      0x01\n      add\n        /* \"staking.sol\":3140:3203  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      dup1\n      sload\n        /* \"staking.sol\":3188:3203  block.timestamp */\n      timestamp\n      swap3\n        /* \"staking.sol\":3140:3168  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":3140:3203  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_189\n      swap1\n        /* \"staking.sol\":3188:3203  block.timestamp */\n      dup5\n      swap1\n        /* \"staking.sol\":3140:3203  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_105\n      jump\t// in\n    tag_189:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":3219:3257  Compound (_msgSender, _level, rewards) */\n      mload(0x40)\n      0x0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d186873\n      swap1\n      tag_113\n      swap1\n        /* \"staking.sol\":3229:3239  _msgSender */\n      dup5\n      swap1\n        /* \"staking.sol\":3241:3247  _level */\n      dup7\n      swap1\n        /* \"staking.sol\":3249:3256  rewards */\n      dup6\n      swap1\n        /* \"staking.sol\":3219:3257  Compound (_msgSender, _level, rewards) */\n      tag_140\n      jump\t// in\n        /* \"staking.sol\":3270:3733  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3406:3429  userLevelDeposit[_user] */\n      dup3\n      and\n        /* \"staking.sol\":3349:3356  uint256 */\n      0x00\n        /* \"staking.sol\":3406:3429  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3406:3422  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3406:3429  userLevelDeposit[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3406:3437  userLevelDeposit[_user][_level] */\n      dup5\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":3406:3445  userLevelDeposit[_user][_level].started */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":3349:3356  uint256 */\n      dup2\n      swap1\n        /* \"staking.sol\":3388:3445  block.timestamp - userLevelDeposit[_user][_level].started */\n      tag_192\n      swap1\n        /* \"staking.sol\":3388:3403  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3388:3445  block.timestamp - userLevelDeposit[_user][_level].started */\n      tag_132\n      jump\t// in\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3473:3496  userLevelDeposit[_user] */\n      dup6\n      and\n        /* \"staking.sol\":3455:3470  uint256 balance */\n      0x00\n        /* \"staking.sol\":3473:3496  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3473:3489  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3473:3496  userLevelDeposit[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3473:3504  userLevelDeposit[_user][_level] */\n      dup8\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3473:3512  userLevelDeposit[_user][_level].balance */\n      sload\n        /* \"staking.sol\":3537:3546  levelInfo */\n      0x03\n        /* \"staking.sol\":3537:3554  levelInfo[_level] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"staking.sol\":3537:3558  levelInfo[_level].APY */\n      sload\n        /* \"staking.sol\":3367:3445  uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].started */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":3473:3512  userLevelDeposit[_user][_level].balance */\n      swap2\n        /* \"staking.sol\":3537:3558  levelInfo[_level].APY */\n      swap1\n        /* \"staking.sol\":3624:3632  365 days */\n      0x01e13380\n        /* \"staking.sol\":3615:3620  10000 */\n      0x2710\n        /* \"staking.sol\":3598:3611  balance * APY */\n      tag_193\n        /* \"staking.sol\":3537:3558  levelInfo[_level].APY */\n      dup5\n        /* \"staking.sol\":3473:3512  userLevelDeposit[_user][_level].balance */\n      dup7\n        /* \"staking.sol\":3598:3611  balance * APY */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"staking.sol\":3597:3620  (balance * APY) / 10000 */\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"staking.sol\":3596:3632  ((balance * APY) / 10000) / 365 days */\n      tag_197\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_197:\n        /* \"staking.sol\":3569:3632  uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days */\n      swap1\n      pop\n        /* \"staking.sol\":3642:3663  uint256 rewardsEarned */\n      0x00\n        /* \"staking.sol\":3666:3695  timeStaked * rewardsPerSecond */\n      tag_198\n        /* \"staking.sol\":3569:3632  uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days */\n      dup3\n        /* \"staking.sol\":3666:3676  timeStaked */\n      dup7\n        /* \"staking.sol\":3666:3695  timeStaked * rewardsPerSecond */\n      tag_194\n      jump\t// in\n    tag_198:\n        /* \"staking.sol\":3642:3695  uint256 rewardsEarned = timeStaked * rewardsPerSecond */\n      swap9\n        /* \"staking.sol\":3270:3733  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":1323:1821  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5529:5531   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5511:5532   */\n      mstore\n        /* \"#utility.yul\":5568:5570   */\n      0x10\n        /* \"#utility.yul\":5548:5566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5541:5571   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5587:5605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5580:5626   */\n      mstore\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_96\n        /* \"#utility.yul\":5327:5667   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_201:\n        /* \"staking.sol\":1454:1467  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":1454:1516  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"staking.sol\":1426:1436  msg.sender */\n      caller\n        /* \"staking.sol\":1454:1516  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2677:2711   */\n      dup2\n      swap1\n      mstore\n        /* \"staking.sol\":1501:1505  this */\n      address\n        /* \"#utility.yul\":2727:2745   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2720:2763   */\n      mstore\n        /* \"#utility.yul\":2779:2797   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2772:2806   */\n      dup6\n      swap1\n      mstore\n        /* \"staking.sol\":1426:1436  msg.sender */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1454:1467  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":1454:1480  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2612:2630   */\n      0x64\n      add\n        /* \"staking.sol\":1454:1516  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_207:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_209\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_209:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_210\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_210:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1527:1555  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1527:1543  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1527:1555  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":1527:1563  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":1527:1582  userLevelDeposit[_msgSender][_level].balance += _amount */\n      dup1\n      sload\n        /* \"staking.sol\":1575:1582  _amount */\n      dup6\n      swap3\n        /* \"staking.sol\":1527:1555  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":1527:1582  userLevelDeposit[_msgSender][_level].balance += _amount */\n      tag_211\n      swap1\n        /* \"staking.sol\":1575:1582  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":1527:1582  userLevelDeposit[_msgSender][_level].balance += _amount */\n      tag_105\n      jump\t// in\n    tag_211:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1592:1620  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1592:1608  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1592:1620  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":1592:1628  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":1592:1636  userLevelDeposit[_msgSender][_level].started */\n      0x01\n      add\n        /* \"staking.sol\":1592:1655  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      dup1\n      sload\n        /* \"staking.sol\":1640:1655  block.timestamp */\n      timestamp\n      swap3\n        /* \"staking.sol\":1592:1620  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":1592:1655  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_212\n      swap1\n        /* \"staking.sol\":1640:1655  block.timestamp */\n      dup5\n      swap1\n        /* \"staking.sol\":1592:1655  userLevelDeposit[_msgSender][_level].started += block.timestamp */\n      tag_105\n      jump\t// in\n    tag_212:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":1733:1750  levelInfo[_level] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"staking.sol\":1733:1742  levelInfo */\n      0x03\n        /* \"staking.sol\":1733:1750  levelInfo[_level] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":1733:1761  levelInfo[_level].lockPeriod */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":1715:1761  block.timestamp + levelInfo[_level].lockPeriod */\n      tag_213\n      swap1\n        /* \"staking.sol\":1715:1730  block.timestamp */\n      timestamp\n        /* \"staking.sol\":1715:1761  block.timestamp + levelInfo[_level].lockPeriod */\n      tag_105\n      jump\t// in\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1665:1693  userLevelDeposit[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1665:1681  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1665:1693  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":1665:1701  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":1665:1712  userLevelDeposit[_msgSender][_level].unlockTime */\n      add\n        /* \"staking.sol\":1665:1761  userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":1777:1814  Deposit (_msgSender, _level, _amount) */\n      mload\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n      tag_113\n      swap1\n        /* \"staking.sol\":1682:1692  _msgSender */\n      dup4\n      swap1\n        /* \"staking.sol\":1694:1700  _level */\n      dup6\n      swap1\n        /* \"staking.sol\":1806:1813  _amount */\n      dup8\n      swap1\n        /* \"staking.sol\":1777:1814  Deposit (_msgSender, _level, _amount) */\n      tag_140\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4769:4771   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4751:4772   */\n      mstore\n        /* \"#utility.yul\":4808:4810   */\n      0x26\n        /* \"#utility.yul\":4788:4806   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4781:4811   */\n      mstore\n        /* \"#utility.yul\":4847:4881   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4827:4845   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4820:4882   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4898:4916   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4891:4927   */\n      mstore\n        /* \"#utility.yul\":4944:4963   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_96\n        /* \"#utility.yul\":4567:4969   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4420:4422   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4402:4423   */\n      mstore\n        /* \"#utility.yul\":4459:4461   */\n      0x14\n        /* \"#utility.yul\":4439:4457   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4432:4462   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":4478:4496   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4471:4521   */\n      mstore\n        /* \"#utility.yul\":4538:4556   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_96\n        /* \"#utility.yul\":4218:4562   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n    tag_233:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2178:2183  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2183  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n    tag_237:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2393:2425   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2375:2426   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2363:2365   */\n      0x20\n        /* \"#utility.yul\":2348:2366   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5529:5531   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5511:5532   */\n      mstore\n        /* \"#utility.yul\":5568:5570   */\n      0x10\n        /* \"#utility.yul\":5548:5566   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5541:5571   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5587:5605   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5580:5626   */\n      mstore\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_96\n        /* \"#utility.yul\":5327:5667   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_242:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1929  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      tag_237\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_248:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_250:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_54:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_252:\n        /* \"#utility.yul\":343:372   */\n      tag_253\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_248\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:637   */\n    tag_26:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_255:\n        /* \"#utility.yul\":551:580   */\n      tag_256\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_248\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":541:580   */\n      swap5\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":383:637   */\n      jump\t// out\n        /* \"#utility.yul\":642:919   */\n    tag_112:\n        /* \"#utility.yul\":709:715   */\n      0x00\n        /* \"#utility.yul\":762:764   */\n      0x20\n        /* \"#utility.yul\":750:759   */\n      dup3\n        /* \"#utility.yul\":741:748   */\n      dup5\n        /* \"#utility.yul\":737:760   */\n      sub\n        /* \"#utility.yul\":733:765   */\n      slt\n        /* \"#utility.yul\":730:782   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":778:779   */\n      0x00\n        /* \"#utility.yul\":775:776   */\n      dup1\n        /* \"#utility.yul\":768:780   */\n      revert\n        /* \"#utility.yul\":730:782   */\n    tag_258:\n        /* \"#utility.yul\":810:819   */\n      dup2\n        /* \"#utility.yul\":804:820   */\n      mload\n        /* \"#utility.yul\":863:868   */\n      dup1\n        /* \"#utility.yul\":856:869   */\n      iszero\n        /* \"#utility.yul\":849:870   */\n      iszero\n        /* \"#utility.yul\":842:847   */\n      dup2\n        /* \"#utility.yul\":839:871   */\n      eq\n        /* \"#utility.yul\":829:889   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":885:886   */\n      0x00\n        /* \"#utility.yul\":882:883   */\n      dup1\n        /* \"#utility.yul\":875:887   */\n      revert\n        /* \"#utility.yul\":924:1104   */\n    tag_36:\n        /* \"#utility.yul\":983:989   */\n      0x00\n        /* \"#utility.yul\":1036:1038   */\n      0x20\n        /* \"#utility.yul\":1024:1033   */\n      dup3\n        /* \"#utility.yul\":1015:1022   */\n      dup5\n        /* \"#utility.yul\":1011:1034   */\n      sub\n        /* \"#utility.yul\":1007:1039   */\n      slt\n        /* \"#utility.yul\":1004:1056   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":1052:1053   */\n      0x00\n        /* \"#utility.yul\":1049:1050   */\n      dup1\n        /* \"#utility.yul\":1042:1054   */\n      revert\n        /* \"#utility.yul\":1004:1056   */\n    tag_261:\n      pop\n        /* \"#utility.yul\":1075:1098   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":924:1104   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1293   */\n    tag_177:\n        /* \"#utility.yul\":1179:1185   */\n      0x00\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1220:1229   */\n      dup3\n        /* \"#utility.yul\":1211:1218   */\n      dup5\n        /* \"#utility.yul\":1207:1230   */\n      sub\n        /* \"#utility.yul\":1203:1235   */\n      slt\n        /* \"#utility.yul\":1200:1252   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1248:1249   */\n      0x00\n        /* \"#utility.yul\":1245:1246   */\n      dup1\n        /* \"#utility.yul\":1238:1250   */\n      revert\n        /* \"#utility.yul\":1200:1252   */\n    tag_263:\n      pop\n        /* \"#utility.yul\":1271:1287   */\n      mload\n      swap2\n        /* \"#utility.yul\":1109:1293   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1298:1546   */\n    tag_42:\n        /* \"#utility.yul\":1366:1372   */\n      0x00\n        /* \"#utility.yul\":1374:1380   */\n      dup1\n        /* \"#utility.yul\":1427:1429   */\n      0x40\n        /* \"#utility.yul\":1415:1424   */\n      dup4\n        /* \"#utility.yul\":1406:1413   */\n      dup6\n        /* \"#utility.yul\":1402:1425   */\n      sub\n        /* \"#utility.yul\":1398:1430   */\n      slt\n        /* \"#utility.yul\":1395:1447   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":1443:1444   */\n      0x00\n        /* \"#utility.yul\":1440:1441   */\n      dup1\n        /* \"#utility.yul\":1433:1445   */\n      revert\n        /* \"#utility.yul\":1395:1447   */\n    tag_265:\n      pop\n      pop\n        /* \"#utility.yul\":1466:1489   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1536:1538   */\n      0x20\n        /* \"#utility.yul\":1521:1539   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1508:1540   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1298:1546   */\n      jump\t// out\n        /* \"#utility.yul\":1551:1867   */\n    tag_32:\n        /* \"#utility.yul\":1628:1634   */\n      0x00\n        /* \"#utility.yul\":1636:1642   */\n      dup1\n        /* \"#utility.yul\":1644:1650   */\n      0x00\n        /* \"#utility.yul\":1697:1699   */\n      0x60\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1676:1683   */\n      dup7\n        /* \"#utility.yul\":1672:1695   */\n      sub\n        /* \"#utility.yul\":1668:1700   */\n      slt\n        /* \"#utility.yul\":1665:1717   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1665:1717   */\n    tag_267:\n      pop\n      pop\n        /* \"#utility.yul\":1736:1759   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":1806:1808   */\n      0x20\n        /* \"#utility.yul\":1791:1809   */\n      dup4\n      add\n        /* \"#utility.yul\":1778:1810   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1857:1859   */\n      0x40\n        /* \"#utility.yul\":1842:1860   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1829:1861   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1551:1867   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2817:3170   */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3045:3077   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3027:3078   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3109:3111   */\n      0x20\n        /* \"#utility.yul\":3094:3112   */\n      dup4\n      add\n        /* \"#utility.yul\":3087:3121   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3152:3154   */\n      0x40\n        /* \"#utility.yul\":3137:3155   */\n      dup3\n      add\n        /* \"#utility.yul\":3130:3164   */\n      mstore\n        /* \"#utility.yul\":3015:3017   */\n      0x60\n        /* \"#utility.yul\":3000:3018   */\n      add\n      swap1\n        /* \"#utility.yul\":2817:3170   */\n      jump\t// out\n        /* \"#utility.yul\":5672:6028   */\n    tag_97:\n        /* \"#utility.yul\":5874:5876   */\n      0x20\n        /* \"#utility.yul\":5856:5877   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5893:5911   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5886:5916   */\n      mstore\n        /* \"#utility.yul\":5952:5986   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5947:5949   */\n      0x40\n        /* \"#utility.yul\":5932:5950   */\n      dup3\n      add\n        /* \"#utility.yul\":5925:5987   */\n      mstore\n        /* \"#utility.yul\":6019:6021   */\n      0x60\n        /* \"#utility.yul\":6004:6022   */\n      add\n      swap1\n        /* \"#utility.yul\":5672:6028   */\n      jump\t// out\n        /* \"#utility.yul\":8710:8838   */\n    tag_105:\n        /* \"#utility.yul\":8750:8753   */\n      0x00\n        /* \"#utility.yul\":8781:8782   */\n      dup3\n        /* \"#utility.yul\":8777:8783   */\n      not\n        /* \"#utility.yul\":8774:8775   */\n      dup3\n        /* \"#utility.yul\":8771:8784   */\n      gt\n        /* \"#utility.yul\":8768:8807   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":8787:8805   */\n      tag_299\n      tag_300\n      jump\t// in\n    tag_299:\n      pop\n        /* \"#utility.yul\":8823:8832   */\n      add\n      swap1\n        /* \"#utility.yul\":8710:8838   */\n      jump\t// out\n        /* \"#utility.yul\":8843:9060   */\n    tag_196:\n        /* \"#utility.yul\":8883:8884   */\n      0x00\n        /* \"#utility.yul\":8909:8910   */\n      dup3\n        /* \"#utility.yul\":8899:9031   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":8953:8963   */\n      0x4e487b71\n        /* \"#utility.yul\":8948:8951   */\n      0xe0\n        /* \"#utility.yul\":8944:8964   */\n      shl\n        /* \"#utility.yul\":8941:8942   */\n      0x00\n        /* \"#utility.yul\":8934:8965   */\n      mstore\n        /* \"#utility.yul\":8988:8992   */\n      0x12\n        /* \"#utility.yul\":8985:8986   */\n      0x04\n        /* \"#utility.yul\":8978:8993   */\n      mstore\n        /* \"#utility.yul\":9016:9020   */\n      0x24\n        /* \"#utility.yul\":9013:9014   */\n      0x00\n        /* \"#utility.yul\":9006:9021   */\n      revert\n        /* \"#utility.yul\":8899:9031   */\n    tag_302:\n      pop\n        /* \"#utility.yul\":9045:9054   */\n      div\n      swap1\n        /* \"#utility.yul\":8843:9060   */\n      jump\t// out\n        /* \"#utility.yul\":9065:9233   */\n    tag_194:\n        /* \"#utility.yul\":9105:9112   */\n      0x00\n        /* \"#utility.yul\":9171:9172   */\n      dup2\n        /* \"#utility.yul\":9167:9168   */\n      0x00\n        /* \"#utility.yul\":9163:9169   */\n      not\n        /* \"#utility.yul\":9159:9173   */\n      div\n        /* \"#utility.yul\":9156:9157   */\n      dup4\n        /* \"#utility.yul\":9153:9174   */\n      gt\n        /* \"#utility.yul\":9148:9149   */\n      dup3\n        /* \"#utility.yul\":9141:9150   */\n      iszero\n        /* \"#utility.yul\":9134:9151   */\n      iszero\n        /* \"#utility.yul\":9130:9175   */\n      and\n        /* \"#utility.yul\":9127:9198   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":9178:9196   */\n      tag_305\n      tag_300\n      jump\t// in\n    tag_305:\n      pop\n        /* \"#utility.yul\":9218:9227   */\n      mul\n      swap1\n        /* \"#utility.yul\":9065:9233   */\n      jump\t// out\n        /* \"#utility.yul\":9238:9363   */\n    tag_132:\n        /* \"#utility.yul\":9278:9282   */\n      0x00\n        /* \"#utility.yul\":9306:9307   */\n      dup3\n        /* \"#utility.yul\":9303:9304   */\n      dup3\n        /* \"#utility.yul\":9300:9308   */\n      lt\n        /* \"#utility.yul\":9297:9331   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":9311:9329   */\n      tag_308\n      tag_300\n      jump\t// in\n    tag_308:\n      pop\n        /* \"#utility.yul\":9348:9357   */\n      sub\n      swap1\n        /* \"#utility.yul\":9238:9363   */\n      jump\t// out\n        /* \"#utility.yul\":9368:9495   */\n    tag_300:\n        /* \"#utility.yul\":9429:9439   */\n      0x4e487b71\n        /* \"#utility.yul\":9424:9427   */\n      0xe0\n        /* \"#utility.yul\":9420:9440   */\n      shl\n        /* \"#utility.yul\":9417:9418   */\n      0x00\n        /* \"#utility.yul\":9410:9441   */\n      mstore\n        /* \"#utility.yul\":9460:9464   */\n      0x11\n        /* \"#utility.yul\":9457:9458   */\n      0x04\n        /* \"#utility.yul\":9450:9465   */\n      mstore\n        /* \"#utility.yul\":9484:9488   */\n      0x24\n        /* \"#utility.yul\":9481:9482   */\n      0x00\n        /* \"#utility.yul\":9474:9489   */\n      revert\n\n    auxdata: 0xa2646970667358221220e09f89124cfc6f62847bdda6056b89e7afe8564b587f7176d6e73d67dea3116f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_376": {
									"entryPoint": null,
									"id": 376,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 106,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x13F3 CODESIZE SUB DUP1 PUSH2 0x13F3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBA JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xEA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x12FA DUP1 PUSH2 0xF9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBEB8314C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE788CEE5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xEDF501AD EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x259EE752 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x32E96203 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x660 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1C7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP10 ADD MLOAD DUP2 DUP4 ADD MSTORE SWAP8 DUP3 ADD MLOAD DUP2 DUP4 ADD MSTORE DUP7 MLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP8 DUP8 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP6 DUP2 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE DUP5 MLOAD PUSH1 0xC0 DUP8 ADD MSTORE SWAP6 DUP5 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x184 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x111C JUMP JUMPDEST PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x119A JUMP JUMPDEST PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF SLOAD DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92F00 SLOAD DUP2 DUP5 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054C SLOAD DUP2 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054D SLOAD DUP2 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP6 MSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4D SLOAD DUP2 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4E SLOAD DUP2 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 MLOAD SWAP5 MLOAD DUP6 MSTORE SWAP3 MLOAD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE MLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x47F PUSH2 0x466 CALLDATASIZE PUSH1 0x4 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 ADD SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP3 DUP5 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP TIMESTAMP SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x594 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x653 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x692 PUSH2 0xF69 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08195B9BDD59DA0819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x774 DUP3 DUP5 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x7AC SWAP1 DUP5 SWAP1 PUSH2 0x1297 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0x7CD DUP5 DUP9 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x827 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH2 0x880 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x8D6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x8FA PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP3 DUP8 ADD SLOAD DUP3 DUP7 ADD MSTORE DUP3 DUP9 MSTORE DUP4 DUP7 MSTORE DUP5 DUP9 KECCAK256 DUP6 MLOAD DUP1 DUP4 ADD DUP8 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP6 ADD SLOAD DUP2 DUP10 ADD MSTORE SWAP1 DUP9 ADD SLOAD DUP2 DUP8 ADD MSTORE DUP8 DUP10 MSTORE SWAP4 DUP7 MSTORE DUP5 DUP9 KECCAK256 DUP6 MLOAD SWAP2 DUP3 ADD DUP7 MSTORE DUP1 SLOAD DUP3 MSTORE SWAP3 DUP4 ADD SLOAD SWAP6 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 DUP1 DUP1 PUSH2 0x99B DUP8 DUP3 PUSH2 0xC69 JUMP JUMPDEST SWAP3 POP PUSH2 0x9A8 DUP8 PUSH1 0x1 PUSH2 0xC69 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B5 DUP8 PUSH1 0x2 PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x692 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x692 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xBB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 DUP5 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xBF5 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD TIMESTAMP SWAP3 SWAP1 PUSH2 0xC30 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 SWAP1 PUSH2 0x653 SWAP1 DUP5 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0xC9C SWAP1 TIMESTAMP PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0xCDF DUP5 DUP7 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0xCF3 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD01 DUP3 DUP7 PUSH2 0x1278 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE5 SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xE19 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD TIMESTAMP SWAP3 SWAP1 PUSH2 0xE54 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xE75 SWAP1 TIMESTAMP PUSH2 0x123E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x653 SWAP1 DUP4 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0xB53 DUP2 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFE9 CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x110C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1115 DUP3 PUSH2 0x10DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x112F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1138 DUP4 PUSH2 0x10DE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1251 JUMPI PUSH2 0x1251 PUSH2 0x12AE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1273 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1292 PUSH2 0x12AE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x12A9 JUMPI PUSH2 0x12A9 PUSH2 0x12AE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 SWAP16 DUP10 SLT 0x4C 0xFC PUSH16 0x62847BDDA6056B89E7AFE8564B587F71 PUSH23 0xD6E73D67DEA3116F64736F6C6343000807003300000000 ",
							"sourceMap": "224:4565:4:-:0;;;1055:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:3;921:18:0;:32::i;:::-;991:5:1;981:15;;-1:-1:-1;;;;981:15:1;;;-1:-1:-1;1094:30:4;;-1:-1:-1;;;;;;1094:30:4;-1:-1:-1;;;;;1094:30:4;;;;;;;;;;224:4565;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;224:4565:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_179": {
									"entryPoint": 4182,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 4102,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_195": {
									"entryPoint": 3945,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptedToken_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateRewards_695": {
									"entryPoint": 3177,
									"id": 695,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@changeLevelValues_818": {
									"entryPoint": 1191,
									"id": 818,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@claim_582": {
									"entryPoint": 1266,
									"id": 582,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@compound_637": {
									"entryPoint": 2902,
									"id": 637,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_460": {
									"entryPoint": 3341,
									"id": 460,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getLevelsInfo_792": {
									"entryPoint": null,
									"id": 792,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@getUserInfo_761": {
									"entryPoint": 2190,
									"id": 761,
									"parameterSlots": 1,
									"returnSlots": 6
								},
								"@levelInfo_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_385": {
									"entryPoint": 2548,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2496,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3793,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_394": {
									"entryPoint": 1632,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userLevelDeposit_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawTokens_838": {
									"entryPoint": 2598,
									"id": 838,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_529": {
									"entryPoint": 1684,
									"id": 529,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 4540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_struct_Level": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_User": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4584,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__to_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4782,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9497:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:5"
															},
															"nodeType": "YulIf",
															"src": "272:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:5",
														"type": ""
													}
												],
												"src": "192:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:5"
															},
															"nodeType": "YulIf",
															"src": "480:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:5",
														"type": ""
													}
												],
												"src": "383:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "720:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "766:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "775:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "778:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "768:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "768:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "741:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "750:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "762:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:32:5"
															},
															"nodeType": "YulIf",
															"src": "730:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "791:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "810:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "804:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "795:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "873:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "885:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "875:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "875:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "842:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "863:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "856:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "856:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "849:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "849:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "839:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:40:5"
															},
															"nodeType": "YulIf",
															"src": "829:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "898:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "908:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "686:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "697:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "709:6:5",
														"type": ""
													}
												],
												"src": "642:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1040:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1049:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1052:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1042:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1042:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1042:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1015:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1024:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1011:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1011:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1036:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1007:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:32:5"
															},
															"nodeType": "YulIf",
															"src": "1004:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1065:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1088:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1075:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1075:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1065:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "960:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "971:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "983:6:5",
														"type": ""
													}
												],
												"src": "924:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1236:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1245:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1248:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1238:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1238:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1238:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1211:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1203:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:32:5"
															},
															"nodeType": "YulIf",
															"src": "1200:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1261:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1277:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1271:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1271:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1261:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1156:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1167:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1179:6:5",
														"type": ""
													}
												],
												"src": "1109:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1385:161:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1431:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1440:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1443:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1433:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1433:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1415:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1402:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1398:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1398:32:5"
															},
															"nodeType": "YulIf",
															"src": "1395:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1456:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1479:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1466:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1498:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1508:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1498:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1343:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1354:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1366:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1374:6:5",
														"type": ""
													}
												],
												"src": "1298:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1655:212:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1676:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1672:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1697:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1668:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"nodeType": "YulIf",
															"src": "1665:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1726:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1736:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1726:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1768:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1795:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1806:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1791:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1778:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1778:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1768:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1819:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1846:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1857:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1829:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1605:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1616:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1628:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1636:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1644:6:5",
														"type": ""
													}
												],
												"src": "1551:316:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1921:97:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1938:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1949:5:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1943:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:12:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1931:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1931:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1981:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1998:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2005:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1994:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1994:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1988:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1988:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1965:47:5"
														}
													]
												},
												"name": "abi_encode_struct_Level",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1905:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1912:3:5",
														"type": ""
													}
												],
												"src": "1872:146:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2071:153:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2088:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2099:5:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2093:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2093:12:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2081:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2126:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2131:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2148:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2155:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2144:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2144:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2138:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2115:47:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2182:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2187:4:5",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2204:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2211:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2200:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2200:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2194:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2194:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2171:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2171:47:5"
														}
													]
												},
												"name": "abi_encode_struct_User",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2062:3:5",
														"type": ""
													}
												],
												"src": "2023:201:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2330:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2340:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2352:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2363:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2348:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2348:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2340:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2382:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2397:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2413:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2418:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2409:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2409:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2422:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2405:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2405:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2393:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2393:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2375:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2375:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2375:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2299:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2310:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2321:4:5",
														"type": ""
													}
												],
												"src": "2229:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2594:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2604:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2616:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2627:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2612:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2612:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2604:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2639:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2657:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2662:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2653:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2653:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2666:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2649:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2649:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2643:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2684:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2699:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2707:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2695:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2695:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2677:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2731:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2727:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2759:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2747:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2747:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2720:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2720:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2783:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2794:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2779:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2779:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2799:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2772:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2772:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2772:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2547:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2558:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2566:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2574:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2585:4:5",
														"type": ""
													}
												],
												"src": "2437:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2982:188:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2992:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3004:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3015:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2992:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3034:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3049:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3065:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3070:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3061:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3061:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3074:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3057:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3057:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3045:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3045:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3027:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3027:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3098:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3109:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3094:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3094:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3114:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3087:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3141:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3152:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3137:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3157:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3130:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3130:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3130:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2935:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2946:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2954:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2962:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2973:4:5",
														"type": ""
													}
												],
												"src": "2817:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3304:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3314:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3326:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3337:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3322:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3314:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3356:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3371:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3387:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3392:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3383:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3383:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3396:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3379:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3379:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3349:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3420:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3431:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3416:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3416:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3436:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3409:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3265:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3276:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3284:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3295:4:5",
														"type": ""
													}
												],
												"src": "3175:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3611:188:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3621:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3633:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3644:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3629:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3621:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3663:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3678:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3694:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3699:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3690:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3690:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3703:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3686:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3686:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3674:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3674:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3656:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3656:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3727:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3738:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3723:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3723:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3743:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3716:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3716:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3770:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3781:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3766:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3766:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3786:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3759:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3564:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3575:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3583:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3591:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3602:4:5",
														"type": ""
													}
												],
												"src": "3454:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3899:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3909:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3921:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3932:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3917:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3917:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3909:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3951:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3976:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3969:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3969:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3962:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3962:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3944:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3944:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3944:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3868:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3879:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3890:4:5",
														"type": ""
													}
												],
												"src": "3804:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4111:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4121:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4133:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4144:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4129:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4129:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4121:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4163:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4178:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4194:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4199:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4190:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4190:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4203:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4186:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4186:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4174:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4174:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4156:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4080:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4091:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4102:4:5",
														"type": ""
													}
												],
												"src": "3996:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4392:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4409:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4420:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4402:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4402:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4443:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4454:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4439:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4439:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4459:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4432:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4432:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4432:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4482:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4493:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4478:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4498:22:5",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4471:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4471:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4530:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4542:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4553:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4538:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4530:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4369:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4383:4:5",
														"type": ""
													}
												],
												"src": "4218:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4741:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4758:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4769:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4751:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4792:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4803:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4788:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4781:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4781:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4831:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4842:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4827:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4827:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4847:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4820:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4820:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4820:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4902:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4913:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4898:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4898:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4918:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4891:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4891:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4891:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4936:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4948:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4959:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4944:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4936:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4718:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4732:4:5",
														"type": ""
													}
												],
												"src": "4567:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5148:174:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5165:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5176:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5158:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5158:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5158:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5199:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5210:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5195:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5195:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5215:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5188:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5238:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5249:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5234:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5234:18:5"
																	},
																	{
																		"hexValue": "4465706f736974206e6f7420756e6c6f636b656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5254:26:5",
																		"type": "",
																		"value": "Deposit not unlocked yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5227:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:54:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5227:54:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5290:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5302:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5313:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5298:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5290:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5125:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5139:4:5",
														"type": ""
													}
												],
												"src": "4974:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5501:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5518:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5529:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5511:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5511:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5511:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5552:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5563:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5548:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5548:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5568:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5541:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5541:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5591:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5602:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5587:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5607:18:5",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5580:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5580:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5635:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5647:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5658:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5643:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5643:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5478:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5492:4:5",
														"type": ""
													}
												],
												"src": "5327:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5846:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5863:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5874:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5856:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5856:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5856:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5897:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5908:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5893:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5893:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5913:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5886:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5886:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5886:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5936:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5947:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5932:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5932:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5952:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5996:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6004:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5823:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5837:4:5",
														"type": ""
													}
												],
												"src": "5672:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6207:167:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6224:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6235:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6217:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6217:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6217:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6258:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6269:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6254:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6254:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6274:2:5",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6247:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6247:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6297:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6308:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6293:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6293:18:5"
																	},
																	{
																		"hexValue": "4e6f20616374697665206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6313:19:5",
																		"type": "",
																		"value": "No active deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6286:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6286:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6342:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6354:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6365:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6350:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6342:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6184:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6198:4:5",
														"type": ""
													}
												],
												"src": "6033:341:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6553:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6570:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6581:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6563:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6563:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6563:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6604:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6615:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6600:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6620:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6593:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6593:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6593:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6643:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6654:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6639:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6639:18:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6659:20:5",
																		"type": "",
																		"value": "Not enough deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6632:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6632:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6632:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6689:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6701:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6689:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6530:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6544:4:5",
														"type": ""
													}
												],
												"src": "6379:342:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7015:215:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7025:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7037:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7048:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7033:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7033:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7025:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7085:6:5"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7093:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "7061:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7061:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7061:42:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7136:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7148:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7159:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7144:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7144:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "7112:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7112:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7196:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7208:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7219:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7204:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7204:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "7172:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7172:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7172:52:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__to_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6968:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6979:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6987:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6995:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7006:4:5",
														"type": ""
													}
												],
												"src": "6726:504:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7602:344:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7612:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7624:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7635:3:5",
																		"type": "",
																		"value": "384"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7620:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7620:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7612:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7671:6:5"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7679:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7648:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7648:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7648:41:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7721:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7733:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7744:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7729:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7729:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7698:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7698:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7698:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7780:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7792:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7803:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7788:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7788:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7757:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7757:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7757:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7828:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7839:3:5",
																				"type": "",
																				"value": "288"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7824:19:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7845:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7817:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7817:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7817:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7872:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7883:3:5",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7868:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7868:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7889:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7861:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7861:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7861:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7916:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7927:3:5",
																				"type": "",
																				"value": "352"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7912:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7912:19:5"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "7933:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7905:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7905:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7905:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7531:9:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7542:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7550:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7558:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7566:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7574:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7582:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7593:4:5",
														"type": ""
													}
												],
												"src": "7235:711:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8052:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8062:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8074:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8085:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8070:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8062:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8104:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8115:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8097:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8097:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8097:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8021:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8032:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8043:4:5",
														"type": ""
													}
												],
												"src": "7951:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8262:119:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8272:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8284:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8295:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8280:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8272:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8314:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8325:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8307:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8307:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8307:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8352:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8363:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8348:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8348:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8368:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8341:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8341:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8341:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8223:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8234:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8242:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8253:4:5",
														"type": ""
													}
												],
												"src": "8133:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8543:162:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8553:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8565:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8576:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8561:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8561:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8553:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8595:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8606:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8588:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8588:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8588:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8633:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8644:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8629:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8629:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8649:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8622:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8622:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8622:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8676:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8687:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8672:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8692:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8665:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8665:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8665:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8496:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8507:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8515:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8523:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8534:4:5",
														"type": ""
													}
												],
												"src": "8386:319:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8758:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8785:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8787:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8787:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8787:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8774:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8781:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8777:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8777:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8771:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:13:5"
															},
															"nodeType": "YulIf",
															"src": "8768:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8816:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8827:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8830:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8823:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8823:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8816:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8741:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8744:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8750:3:5",
														"type": ""
													}
												],
												"src": "8710:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8889:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8920:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8941:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8948:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8953:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8944:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8944:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8934:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8934:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8934:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8985:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8988:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8978:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8978:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8978:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9013:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9016:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9006:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9006:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9006:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8909:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8902:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8902:9:5"
															},
															"nodeType": "YulIf",
															"src": "8899:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9040:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9049:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9052:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9045:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9040:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8874:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8877:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8883:1:5",
														"type": ""
													}
												],
												"src": "8843:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9117:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9176:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9178:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9178:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9178:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9148:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9141:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9141:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9134:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9134:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9156:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9167:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9163:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9163:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9171:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9159:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9159:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9153:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9153:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9130:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9130:45:5"
															},
															"nodeType": "YulIf",
															"src": "9127:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9207:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9222:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9225:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9218:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9218:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9207:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9096:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9099:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9105:7:5",
														"type": ""
													}
												],
												"src": "9065:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9287:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9309:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9311:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9311:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9311:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9303:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9306:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9300:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9300:8:5"
															},
															"nodeType": "YulIf",
															"src": "9297:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9340:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9352:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9355:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9348:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9348:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9340:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9269:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9272:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9278:4:5",
														"type": ""
													}
												],
												"src": "9238:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9400:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9417:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9424:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9429:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9420:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9420:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9410:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9410:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9410:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9457:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9460:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9450:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9450:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9450:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9481:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9484:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9474:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9474:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9474:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9368:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_struct_Level(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_struct_User(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Deposit not unlocked yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No active deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not enough deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__to_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr_t_struct$_Level_$320_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        abi_encode_struct_Level(value0, headStart)\n        abi_encode_struct_Level(value1, add(headStart, 64))\n        abi_encode_struct_Level(value2, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_struct$_User_$315_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 384)\n        abi_encode_struct_User(value0, headStart)\n        abi_encode_struct_User(value1, add(headStart, 96))\n        abi_encode_struct_User(value2, add(headStart, 192))\n        mstore(add(headStart, 288), value3)\n        mstore(add(headStart, 320), value4)\n        mstore(add(headStart, 352), value5)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c80638456cb59116100a2578063beb8314c11610071578063beb8314c146102ba578063e2bbb158146102db578063e788cee5146102ee578063edf501ad14610458578063f2fde38b1461049457600080fd5b80638456cb59146102865780638d8f2adb1461028e5780638da5cb5b14610296578063aa5f7e26146102a757600080fd5b8063441a3e70116100e9578063441a3e70146101a1578063451c3d80146101b45780635c975abb146101df5780636386c1c7146101fc578063715018a61461027e57600080fd5b8063259ee7521461011b57806332e9620314610171578063379607f5146101865780633f4ba83a14610199575b600080fd5b61015161012936600461111c565b6002602081815260009384526040808520909152918352912080546001820154919092015483565b604080519384526020840192909252908201526060015b60405180910390f35b61018461017f3660046111bc565b6104a7565b005b610184610194366004611168565b6104f2565b610184610660565b6101846101af36600461119a565b610694565b6001546101c7906001600160a01b031681565b6040516001600160a01b039091168152602001610168565b600054600160a01b900460ff166040519015158152602001610168565b61020f61020a3660046110fa565b61088e565b6040805187518152602080890151818301529782015181830152865160608201528787015160808201529581015160a0870152845160c08701529584015160e0860152929094015161010084015261012083015261014082019290925261016081019190915261018001610168565b6101846109c0565b6101846109f4565b610184610a26565b6000546001600160a01b03166101c7565b6101846102b5366004611168565b610b56565b6102cd6102c836600461111c565b610c69565b604051908152602001610168565b6101846102e936600461119a565b610d0d565b60408051808201825260008082526020918201819052825180840184528181528201819052825180840184528181528201819052825180840184527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5481527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f0054818401908152845180860186527fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c5481527fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054d54818601908152600290945260038552855180870187527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d5481527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4e5481870190815287519451855292519584019590955251948201949094529051606082015290516080820152905160a082015260c001610168565b61047f610466366004611168565b6003602052600090815260409020805460019091015482565b60408051928352602083019190915201610168565b6101846104a23660046110fa565b610ed1565b6000546001600160a01b031633146104da5760405162461bcd60e51b81526004016104d190611209565b60405180910390fd5b60009283526003602052604090922090815560010155565b33600081815260026020908152604080832085845290915290205461054d5760405162461bcd60e51b8152602060048201526011602482015270139bc81858dd1a5d994819195c1bdcda5d607a1b60448201526064016104d1565b60006105598284610c69565b6001600160a01b038316600090815260026020908152604080832087845290915281206001018054929350429290919061059490849061123e565b909155505060015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061f9190611146565b507f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7828483604051610653939291906111e8565b60405180910390a1505050565b6000546001600160a01b0316331461068a5760405162461bcd60e51b81526004016104d190611209565b610692610f69565b565b3360008181526002602090815260408083208584529091529020548311156106f35760405162461bcd60e51b8152602060048201526012602482015271139bdd08195b9bdd59da0819195c1bdcda5d60721b60448201526064016104d1565b6001600160a01b038116600090815260026020818152604080842086855290915290912001544210156107685760405162461bcd60e51b815260206004820152601860248201527f4465706f736974206e6f7420756e6c6f636b656420796574000000000000000060448201526064016104d1565b60006107748284610c69565b6001600160a01b03831660009081526002602090815260408083208784529091528120805492935086929091906107ac908490611297565b90915550506001546001600160a01b031663a9059cbb836107cd848861123e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561081357600080fd5b505af1158015610827573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084b9190611146565b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56882600086604051610880939291906111e8565b60405180910390a150505050565b6108b260405180606001604052806000815260200160008152602001600081525090565b6108d660405180606001604052806000815260200160008152602001600081525090565b6108fa60405180606001604052806000815260200160008152602001600081525090565b5050506001600160a01b03811660009081526002602081815260408084208480528083528185208251606080820185528254825260018084015483880152928701548286015282885283865284882085518083018752815481528185015481890152908801548187015287895293865284882085519182018652805482529283015495810195909552940154918301919091529192808061099b8782610c69565b92506109a8876001610c69565b91506109b5876002610c69565b905091939550919395565b6000546001600160a01b031633146109ea5760405162461bcd60e51b81526004016104d190611209565b6106926000611006565b6000546001600160a01b03163314610a1e5760405162461bcd60e51b81526004016104d190611209565b610692611056565b6000546001600160a01b03163314610a505760405162461bcd60e51b81526004016104d190611209565b6001546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90339083906370a082319060240160206040518083038186803b158015610a9d57600080fd5b505afa158015610ab1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad59190611181565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610b1b57600080fd5b505af1158015610b2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b539190611146565b50565b336000818152600260209081526040808320858452909152902054610bb15760405162461bcd60e51b8152602060048201526011602482015270139bc81858dd1a5d994819195c1bdcda5d607a1b60448201526064016104d1565b6000610bbd8284610c69565b6001600160a01b0383166000908152600260209081526040808320878452909152812080549293508392909190610bf590849061123e565b90915550506001600160a01b038216600090815260026020908152604080832086845290915281206001018054429290610c3090849061123e565b90915550506040517f0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d18687390610653908490869085906111e8565b6001600160a01b03821660009081526002602090815260408083208484529091528120600101548190610c9c9042611297565b6001600160a01b0385166000908152600260209081526040808320878452825280832054600390925282205492935091906301e13380612710610cdf8486611278565b610ce99190611256565b610cf39190611256565b90506000610d018286611278565b98975050505050505050565b600054600160a01b900460ff1615610d5a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104d1565b6001546040516323b872dd60e01b8152336004820181905230602483015260448201859052916001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610dad57600080fd5b505af1158015610dc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610de59190611146565b506001600160a01b038116600090815260026020908152604080832085845290915281208054859290610e1990849061123e565b90915550506001600160a01b038116600090815260026020908152604080832085845290915281206001018054429290610e5490849061123e565b9091555050600082815260036020526040902060010154610e75904261123e565b6001600160a01b0382166000908152600260208181526040808420878552909152918290200191909155517f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1590610653908390859087906111e8565b6000546001600160a01b03163314610efb5760405162461bcd60e51b81526004016104d190611209565b6001600160a01b038116610f605760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d1565b610b5381611006565b600054600160a01b900460ff16610fb95760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104d1565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156110a35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104d1565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fe93390565b80356001600160a01b03811681146110f557600080fd5b919050565b60006020828403121561110c57600080fd5b611115826110de565b9392505050565b6000806040838503121561112f57600080fd5b611138836110de565b946020939093013593505050565b60006020828403121561115857600080fd5b8151801515811461111557600080fd5b60006020828403121561117a57600080fd5b5035919050565b60006020828403121561119357600080fd5b5051919050565b600080604083850312156111ad57600080fd5b50508035926020909101359150565b6000806000606084860312156111d157600080fd5b505081359360208301359350604090920135919050565b6001600160a01b039390931683526020830191909152604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611251576112516112ae565b500190565b60008261127357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611292576112926112ae565b500290565b6000828210156112a9576112a96112ae565b500390565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220e09f89124cfc6f62847bdda6056b89e7afe8564b587f7176d6e73d67dea3116f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBEB8314C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x2DB JUMPI DUP1 PUSH4 0xE788CEE5 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xEDF501AD EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x259EE752 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x32E96203 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x186 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x151 PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0x11BC JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x184 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0x4F2 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x660 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x694 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1C7 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP10 ADD MLOAD DUP2 DUP4 ADD MSTORE SWAP8 DUP3 ADD MLOAD DUP2 DUP4 ADD MSTORE DUP7 MLOAD PUSH1 0x60 DUP3 ADD MSTORE DUP8 DUP8 ADD MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP6 DUP2 ADD MLOAD PUSH1 0xA0 DUP8 ADD MSTORE DUP5 MLOAD PUSH1 0xC0 DUP8 ADD MSTORE SWAP6 DUP5 ADD MLOAD PUSH1 0xE0 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP5 ADD MLOAD PUSH2 0x100 DUP5 ADD MSTORE PUSH2 0x120 DUP4 ADD MSTORE PUSH2 0x140 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH2 0x160 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x180 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x9C0 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x9F4 JUMP JUMPDEST PUSH2 0x184 PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1168 JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST PUSH2 0x2CD PUSH2 0x2C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x111C JUMP JUMPDEST PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x119A JUMP JUMPDEST PUSH2 0xD0D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF SLOAD DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92F00 SLOAD DUP2 DUP5 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054C SLOAD DUP2 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054D SLOAD DUP2 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP6 MSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4D SLOAD DUP2 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4E SLOAD DUP2 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 MLOAD SWAP5 MLOAD DUP6 MSTORE SWAP3 MLOAD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE MLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x47F PUSH2 0x466 CALLDATASIZE PUSH1 0x4 PUSH2 0x1168 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x168 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 ADD SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x54D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x559 DUP3 DUP5 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP TIMESTAMP SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x594 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61F SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x653 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x692 PUSH2 0xF69 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08195B9BDD59DA0819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x774 DUP3 DUP5 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x7AC SWAP1 DUP5 SWAP1 PUSH2 0x1297 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0x7CD DUP5 DUP9 PUSH2 0x123E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x813 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x827 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x84B SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH2 0x880 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x8B2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x8D6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x8FA PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP3 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE SWAP3 DUP8 ADD SLOAD DUP3 DUP7 ADD MSTORE DUP3 DUP9 MSTORE DUP4 DUP7 MSTORE DUP5 DUP9 KECCAK256 DUP6 MLOAD DUP1 DUP4 ADD DUP8 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP6 ADD SLOAD DUP2 DUP10 ADD MSTORE SWAP1 DUP9 ADD SLOAD DUP2 DUP8 ADD MSTORE DUP8 DUP10 MSTORE SWAP4 DUP7 MSTORE DUP5 DUP9 KECCAK256 DUP6 MLOAD SWAP2 DUP3 ADD DUP7 MSTORE DUP1 SLOAD DUP3 MSTORE SWAP3 DUP4 ADD SLOAD SWAP6 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP5 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP3 DUP1 DUP1 PUSH2 0x99B DUP8 DUP3 PUSH2 0xC69 JUMP JUMPDEST SWAP3 POP PUSH2 0x9A8 DUP8 PUSH1 0x1 PUSH2 0xC69 JUMP JUMPDEST SWAP2 POP PUSH2 0x9B5 DUP8 PUSH1 0x2 PUSH2 0xC69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x692 PUSH1 0x0 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH2 0x692 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD5 SWAP2 SWAP1 PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB53 SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xBB1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBD DUP3 DUP5 PUSH2 0xC69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xBF5 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD TIMESTAMP SWAP3 SWAP1 PUSH2 0xC30 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 SWAP1 PUSH2 0x653 SWAP1 DUP5 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 SWAP1 PUSH2 0xC9C SWAP1 TIMESTAMP PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0xCDF DUP5 DUP7 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0xCE9 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST PUSH2 0xCF3 SWAP2 SWAP1 PUSH2 0x1256 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD01 DUP3 DUP7 PUSH2 0x1278 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDE5 SWAP2 SWAP1 PUSH2 0x1146 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xE19 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD TIMESTAMP SWAP3 SWAP1 PUSH2 0xE54 SWAP1 DUP5 SWAP1 PUSH2 0x123E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xE75 SWAP1 TIMESTAMP PUSH2 0x123E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x653 SWAP1 DUP4 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D1 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0xB53 DUP2 PUSH2 0x1006 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4D1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xFE9 CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x10F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x110C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1115 DUP3 PUSH2 0x10DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x112F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1138 DUP4 PUSH2 0x10DE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x117A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1251 JUMPI PUSH2 0x1251 PUSH2 0x12AE JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1273 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1292 JUMPI PUSH2 0x1292 PUSH2 0x12AE JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x12A9 JUMPI PUSH2 0x12A9 PUSH2 0x12AE JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 SWAP16 DUP10 SLT 0x4C 0xFC PUSH16 0x62847BDDA6056B89E7AFE8564B587F71 PUSH23 0xD6E73D67DEA3116F64736F6C6343000807003300000000 ",
							"sourceMap": "224:4565:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;620:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8588:25:5;;;8644:2;8629:18;;8622:34;;;;8672:18;;;8665:34;8576:2;8561:18;620:68:4;;;;;;;;4458:187;;;;;;:::i;:::-;;:::i;:::-;;2401:420;;;;;;:::i;:::-;;:::i;1252:64::-;;;:::i;1827:568::-;;;;;;:::i;:::-;;:::i;317:27::-;;;;;-1:-1:-1;;;;;317:27:4;;;;;;-1:-1:-1;;;;;2393:32:5;;;2375:51;;2363:2;2348:18;317:27:4;2229:203:5;1098:84:1;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1098:84;;3969:14:5;;3962:22;3944:41;;3932:2;3917:18;1098:84:1;3804:187:5;3743:489:4;;;;;;:::i;:::-;;:::i;:::-;;;;2093:12:5;;2081:25;;2155:4;2144:16;;;2138:23;2122:14;;;2115:47;2200:16;;;2194:23;2178:14;;;2171:47;2093:12;;7744:2;7729:18;;2081:25;2144:16;;;2138:23;2122:14;;;2115:47;2200:16;;;2194:23;2178:14;;;2171:47;2093:12;;7803:3;7788:19;;2081:25;2144:16;;;2138:23;2122:14;;;2115:47;2200:16;;;;2194:23;2178:14;;;2171:47;7839:3;7824:19;;7817:35;7883:3;7868:19;;7861:35;;;;7927:3;7912:19;;7905:35;;;;7635:3;7620:19;3743:489:4;7235:711:5;1668:101:0;;;:::i;1182:60:4:-;;;:::i;4651:136::-;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;2827:437:4;;;;;;:::i;:::-;;:::i;3270:463::-;;;;;;:::i;:::-;;:::i;:::-;;;8097:25:5;;;8085:2;8070:18;3270:463:4;7951:177:5;1323:498:4;;;;;;:::i;:::-;;:::i;4238:214::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4357:21:4;;;;;;;4366:12;4357:21;;;;;;;;;;;4388;;;;;;;4397:12;4388:21;;;;;;;;;;;4438:1;4428:12;;;4366:9;4428:12;;4419:21;;;;;;;4428:12;4419:21;;;;;;;;;;;4238:214;;1943:12:5;;1931:25;;1988:23;;1972:14;;;1965:47;;;;1943:12;7144:18;;;1931:25;;;;1988:23;;1972:14;;;1965:47;1943:12;;7219:3;7204:19;;1931:25;1988:23;;1972:14;;;1965:47;7048:3;7033:19;4238:214:4;6726:504:5;694:42:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8307:25:5;;;8363:2;8348:18;;8341:34;;;;8280:18;694:42:4;8133:248:5;1918:198:0;;;;;;:::i;:::-;;:::i;4458:187:4:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;4562:16:4::1;::::0;;;:9:::1;:16;::::0;;;;;:27;;;4599::::1;;:39:::0;4458:187::o;2401:420::-;2472:10;2451:18;2500:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;2492:78;;;;-1:-1:-1;;;2492:78:4;;6235:2:5;2492:78:4;;;6217:21:5;6274:2;6254:18;;;6247:30;-1:-1:-1;;;6293:18:5;;;6286:47;6350:18;;2492:78:4;6033:341:5;2492:78:4;2581:15;2599:36;2616:10;2628:6;2599:16;:36::i;:::-;-1:-1:-1;;;;;2646:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:44;;:63;;2581:54;;-1:-1:-1;2694:15:4;;2646:44;;:28;:63;;2694:15;;2646:63;:::i;:::-;;;;-1:-1:-1;;2720:13:4;;:43;;-1:-1:-1;;;2720:43:4;;-1:-1:-1;;;;;3367:32:5;;;2720:43:4;;;3349:51:5;3416:18;;;3409:34;;;2720:13:4;;;;:22;;3322:18:5;;2720:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2779:35;2786:10;2798:6;2806:7;2779:35;;;;;;;;:::i;:::-;;;;;;;;2441:380;;2401:420;:::o;1252:64::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1299:10:4::1;:8;:10::i;:::-;1252:64::o:0;1827:568::-;1918:10;1897:18;1946:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;:55;-1:-1:-1;1946:55:4;1938:86;;;;-1:-1:-1;;;1938:86:4;;6581:2:5;1938:86:4;;;6563:21:5;6620:2;6600:18;;;6593:30;-1:-1:-1;;;6639:18:5;;;6632:48;6697:18;;1938:86:4;6379:342:5;1938:86:4;-1:-1:-1;;;;;2042:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;;:47;;2093:15;-1:-1:-1;2042:66:4;2034:103;;;;-1:-1:-1;;;2034:103:4;;5176:2:5;2034:103:4;;;5158:21:5;5215:2;5195:18;;;5188:30;5254:26;5234:18;;;5227:54;5298:18;;2034:103:4;4974:348:5;2034:103:4;2148:15;2166:36;2183:10;2195:6;2166:16;:36::i;:::-;-1:-1:-1;;;;;2221:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:55;;2148:54;;-1:-1:-1;2269:7:4;;2221:36;;:28;:55;;2269:7;;2221:55;:::i;:::-;;;;-1:-1:-1;;2287:13:4;;-1:-1:-1;;;;;2287:13:4;:22;2310:10;2322:17;2332:7;2322;:17;:::i;:::-;2287:53;;-1:-1:-1;;;;;;2287:53:4;;;;;;;-1:-1:-1;;;;;3367:32:5;;;2287:53:4;;;3349:51:5;3416:18;;;3409:34;3322:18;;2287:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2356:32;2365:10;2377:1;2380:7;2356:32;;;;;;;;:::i;:::-;;;;;;;;1887:508;;1827:568;;:::o;3743:489::-;3801:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3801:18:4;3822;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3822:18:4;3842;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;3842:18:4;-1:-1:-1;;;;;;;;3950:23:4;;3862:21;3950:23;;;:16;:23;;;;;;;;:26;;;;;;;;;3941:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3995:26;;;;;;;;;3986:35;;;;;;;;;;;;;;;;;;;;;;;;;;;4040:26;;;;;;;;;4031:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3941;;3862:21;;4095:26;3967:5;3862:21;4095:16;:26::i;:::-;4079:42;;4147:26;4164:5;4171:1;4147:16;:26::i;:::-;4131:42;;4199:26;4216:5;4223:1;4199:16;:26::i;:::-;4183:42;;3743:489;;;;;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;1182:60:4:-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1227:8:4::1;:6;:8::i;4651:136::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4706:13:4::1;::::0;4741:38:::1;::::0;-1:-1:-1;;;4741:38:4;;4773:4:::1;4741:38;::::0;::::1;2375:51:5::0;-1:-1:-1;;;;;4706:13:4;;::::1;::::0;:22:::1;::::0;4729:10:::1;::::0;4706:13;;4741:23:::1;::::0;2348:18:5;;4741:38:4::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4706:74;::::0;-1:-1:-1;;;;;;4706:74:4::1;::::0;;;;;;-1:-1:-1;;;;;3367:32:5;;;4706:74:4::1;::::0;::::1;3349:51:5::0;3416:18;;;3409:34;3322:18;;4706:74:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4651:136::o:0;2827:437::-;2901:10;2880:18;2929:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;2921:78;;;;-1:-1:-1;;;2921:78:4;;6235:2:5;2921:78:4;;;6217:21:5;6274:2;6254:18;;;6247:30;-1:-1:-1;;;6293:18:5;;;6286:47;6350:18;;2921:78:4;6033:341:5;2921:78:4;3010:15;3028:36;3045:10;3057:6;3028:16;:36::i;:::-;-1:-1:-1;;;;;3075:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:55;;3010:54;;-1:-1:-1;3010:54:4;;3075:36;;:28;:55;;3010:54;;3075:55;:::i;:::-;;;;-1:-1:-1;;;;;;;3140:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:44;;:63;;3188:15;;3140:28;:63;;3188:15;;3140:63;:::i;:::-;;;;-1:-1:-1;;3219:38:4;;;;;;3229:10;;3241:6;;3249:7;;3219:38;:::i;3270:463::-;-1:-1:-1;;;;;3406:23:4;;3349:7;3406:23;;;:16;:23;;;;;;;;:31;;;;;;;;:39;;;3349:7;;3388:57;;:15;:57;:::i;:::-;-1:-1:-1;;;;;3473:23:4;;3455:15;3473:23;;;:16;:23;;;;;;;;:31;;;;;;;;:39;3537:9;:17;;;;;:21;3367:78;;-1:-1:-1;3473:39:4;3537:21;3624:8;3615:5;3598:13;3537:21;3473:39;3598:13;:::i;:::-;3597:23;;;;:::i;:::-;3596:36;;;;:::i;:::-;3569:63;-1:-1:-1;3642:21:4;3666:29;3569:63;3666:10;:29;:::i;:::-;3642:53;3270:463;-1:-1:-1;;;;;;;;3270:463:4:o;1323:498::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;5529:2:5;1403:38:1;;;5511:21:5;5568:2;5548:18;;;5541:30;-1:-1:-1;;;5587:18:5;;;5580:46;5643:18;;1403:38:1;5327:340:5;1403:38:1;1454:13:4::1;::::0;:62:::1;::::0;-1:-1:-1;;;1454:62:4;;1426:10:::1;1454:62;::::0;::::1;2677:34:5::0;;;1501:4:4::1;2727:18:5::0;;;2720:43;2779:18;;;2772:34;;;1426:10:4;-1:-1:-1;;;;;1454:13:4::1;::::0;:26:::1;::::0;2612:18:5;;1454:62:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;1527:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;:55;;1575:7;;1527:28;:55:::1;::::0;1575:7;;1527:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;1592:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;:44:::1;;:63:::0;;1640:15:::1;::::0;1592:28;:63:::1;::::0;1640:15;;1592:63:::1;:::i;:::-;::::0;;;-1:-1:-1;;1733:17:4::1;::::0;;;:9:::1;:17;::::0;;;;:28:::1;;::::0;1715:46:::1;::::0;:15:::1;:46;:::i;:::-;-1:-1:-1::0;;;;;1665:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;;;:47:::1;:96:::0;;;;1777:37;::::1;::::0;::::1;::::0;1682:10;;1694:6;;1806:7;;1777:37:::1;:::i;1918:198:0:-:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4769:2:5;1998:73:0::1;::::0;::::1;4751:21:5::0;4808:2;4788:18;;;4781:30;4847:34;4827:18;;;4820:62;-1:-1:-1;;;4898:18:5;;;4891:36;4944:19;;1998:73:0::1;4567:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;2110:117:1:-:0;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;4420:2:5;1669:41:1;;;4402:21:5;4459:2;4439:18;;;4432:30;-1:-1:-1;;;4478:18:5;;;4471:50;4538:18;;1669:41:1;4218:344:5;1669:41:1;2178:5:::1;2168:15:::0;;-1:-1:-1;;;;2168:15:1::1;::::0;;2198:22:::1;719:10:3::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;2393:32:5;;;2375:51;;2363:2;2348:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;5529:2:5;1403:38:1;;;5511:21:5;5568:2;5548:18;;;5541:30;-1:-1:-1;;;5587:18:5;;;5580:46;5643:18;;1403:38:1;5327:340:5;1403:38:1;1922:7:::1;:14:::0;;-1:-1:-1;;;;1922:14:1::1;-1:-1:-1::0;;;1922:14:1::1;::::0;;1951:20:::1;1958:12;719:10:3::0;;640:96;14:173:5;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:5:o;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:5:o;642:277::-;709:6;762:2;750:9;741:7;737:23;733:32;730:52;;;778:1;775;768:12;730:52;810:9;804:16;863:5;856:13;849:21;842:5;839:32;829:60;;885:1;882;875:12;924:180;983:6;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;-1:-1:-1;1075:23:5;;924:180;-1:-1:-1;924:180:5:o;1109:184::-;1179:6;1232:2;1220:9;1211:7;1207:23;1203:32;1200:52;;;1248:1;1245;1238:12;1200:52;-1:-1:-1;1271:16:5;;1109:184;-1:-1:-1;1109:184:5:o;1298:248::-;1366:6;1374;1427:2;1415:9;1406:7;1402:23;1398:32;1395:52;;;1443:1;1440;1433:12;1395:52;-1:-1:-1;;1466:23:5;;;1536:2;1521:18;;;1508:32;;-1:-1:-1;1298:248:5:o;1551:316::-;1628:6;1636;1644;1697:2;1685:9;1676:7;1672:23;1668:32;1665:52;;;1713:1;1710;1703:12;1665:52;-1:-1:-1;;1736:23:5;;;1806:2;1791:18;;1778:32;;-1:-1:-1;1857:2:5;1842:18;;;1829:32;;1551:316;-1:-1:-1;1551:316:5:o;2817:353::-;-1:-1:-1;;;;;3045:32:5;;;;3027:51;;3109:2;3094:18;;3087:34;;;;3152:2;3137:18;;3130:34;3015:2;3000:18;;2817:353::o;5672:356::-;5874:2;5856:21;;;5893:18;;;5886:30;5952:34;5947:2;5932:18;;5925:62;6019:2;6004:18;;5672:356::o;8710:128::-;8750:3;8781:1;8777:6;8774:1;8771:13;8768:39;;;8787:18;;:::i;:::-;-1:-1:-1;8823:9:5;;8710:128::o;8843:217::-;8883:1;8909;8899:132;;8953:10;8948:3;8944:20;8941:1;8934:31;8988:4;8985:1;8978:15;9016:4;9013:1;9006:15;8899:132;-1:-1:-1;9045:9:5;;8843:217::o;9065:168::-;9105:7;9171:1;9167;9163:6;9159:14;9156:1;9153:21;9148:1;9141:9;9134:17;9130:45;9127:71;;;9178:18;;:::i;:::-;-1:-1:-1;9218:9:5;;9065:168::o;9238:125::-;9278:4;9306:1;9303;9300:8;9297:34;;;9311:18;;:::i;:::-;-1:-1:-1;9348:9:5;;9238:125::o;9368:127::-;9429:10;9424:3;9420:20;9417:1;9410:31;9460:4;9457:1;9450:15;9484:4;9481:1;9474:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "971600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptedToken()": "2382",
								"calculateRewards(address,uint256)": "infinite",
								"changeLevelValues(uint256,uint256,uint256)": "46737",
								"claim(uint256)": "infinite",
								"compound(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"getLevelsInfo()": "13323",
								"getUserInfo(address)": "infinite",
								"levelInfo(uint256)": "4665",
								"owner()": "2398",
								"pause()": "29802",
								"paused()": "2376",
								"renounceOwnership()": "28225",
								"transferOwnership(address)": "28419",
								"unpause()": "29840",
								"userLevelDeposit(address,uint256)": "6891",
								"withdraw(uint256,uint256)": "infinite",
								"withdrawTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 4789,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1055,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 991,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1094,
									"end": 1124,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 4789,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e09f89124cfc6f62847bdda6056b89e7afe8564b587f7176d6e73d67dea3116f64736f6c63430008070033",
									".code": [
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "BEB8314C"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "BEB8314C"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "E788CEE5"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "EDF501AD"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "8D8F2ADB"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "AA5F7E26"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "451C3D80"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "6386C1C7"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "259EE752"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "32E96203"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "379607F5"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "3F4BA83A"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 4789,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8588,
											"end": 8613,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8613,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8588,
											"end": 8613,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8644,
											"end": 8646,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8629,
											"end": 8647,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8656,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8656,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8672,
											"end": 8690,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8672,
											"end": 8690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8672,
											"end": 8690,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8665,
											"end": 8699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8576,
											"end": 8578,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 620,
											"end": 688,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 688,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 620,
											"end": 688,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 317,
											"end": 344,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2393,
											"end": 2425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2425,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2425,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2426,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2229,
											"end": 2432,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 3983,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3969,
											"end": 3983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3962,
											"end": 3984,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3985,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3944,
											"end": 3985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 3934,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3804,
											"end": 3991,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2155,
											"end": 2159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7744,
											"end": 7746,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7729,
											"end": 7747,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7729,
											"end": 7747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7803,
											"end": 7806,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7788,
											"end": 7807,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7788,
											"end": 7807,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7842,
											"name": "PUSH",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 7824,
											"end": 7843,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 7843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7817,
											"end": 7852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7883,
											"end": 7886,
											"name": "PUSH",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7868,
											"end": 7887,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7868,
											"end": 7887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7896,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7896,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7896,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7861,
											"end": 7896,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7927,
											"end": 7930,
											"name": "PUSH",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7912,
											"end": 7931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7931,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7905,
											"end": 7940,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7635,
											"end": 7638,
											"name": "PUSH",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 7620,
											"end": 7639,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 7235,
											"end": 7946,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4651,
											"end": 4787,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4651,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4651,
											"end": 4787,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4651,
											"end": 4787,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8097,
											"end": 8122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8122,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8085,
											"end": 8087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8070,
											"end": 8088,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 7951,
											"end": 8128,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4238,
											"end": 4452,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4238,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4378,
											"name": "PUSH",
											"source": 4,
											"value": "3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF"
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "PUSH",
											"source": 4,
											"value": "3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92F00"
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4357,
											"end": 4378,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4397,
											"end": 4409,
											"name": "PUSH",
											"source": 4,
											"value": "A15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054C"
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "PUSH",
											"source": 4,
											"value": "A15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054D"
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4409,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4438,
											"end": 4439,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4375,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4440,
											"name": "PUSH",
											"source": 4,
											"value": "C3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4D"
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "PUSH",
											"source": 4,
											"value": "C3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4E"
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4419,
											"end": 4440,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4452,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4238,
											"end": 4452,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7144,
											"end": 7162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7222,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7204,
											"end": 7223,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7204,
											"end": 7223,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7051,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7033,
											"end": 7052,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 6726,
											"end": 7230,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 694,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 694,
											"end": 736,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8307,
											"end": 8332,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8307,
											"end": 8332,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8307,
											"end": 8332,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8363,
											"end": 8365,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8348,
											"end": 8366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8341,
											"end": 8375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8341,
											"end": 8375,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8341,
											"end": 8375,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8341,
											"end": 8375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8280,
											"end": 8298,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 694,
											"end": 736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 8133,
											"end": 8381,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4571,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4578,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4589,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4626,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4599,
											"end": 4626,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4638,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4458,
											"end": 4645,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2472,
											"end": 2482,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2451,
											"end": 2469,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2516,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2528,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2536,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2500,
											"end": 2544,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6235,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6276,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81858DD1A5D994819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6286,
											"end": 6333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6368,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6350,
											"end": 6368,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6033,
											"end": 6374,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2492,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2616,
											"end": 2626,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2599,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2599,
											"end": 2635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2599,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2599,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2662,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2682,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2690,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2646,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2635,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2635,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2690,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2674,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2694,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2646,
											"end": 2709,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2733,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2720,
											"end": 2742,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH",
											"source": 4,
											"value": "34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7"
										},
										{
											"begin": 2786,
											"end": 2796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2806,
											"end": 2813,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 2814,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2441,
											"end": 2821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2821,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1299,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1299,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1252,
											"end": 1316,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1962,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1974,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1982,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 1990,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1946,
											"end": 2001,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 1946,
											"end": 2001,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6583,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6563,
											"end": 6584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6622,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6593,
											"end": 6623,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08195B9BDD59DA0819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6632,
											"end": 6680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6379,
											"end": 6721,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1938,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2070,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2078,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2089,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2089,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2108,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2042,
											"end": 2108,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5178,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5158,
											"end": 5179,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5217,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5195,
											"end": 5213,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5254,
											"end": 5280,
											"name": "PUSH",
											"source": 5,
											"value": "4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000"
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5227,
											"end": 5281,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5298,
											"end": 5316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 4974,
											"end": 5322,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2034,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2183,
											"end": 2193,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2195,
											"end": 2201,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2166,
											"end": 2202,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2166,
											"end": 2202,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2166,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2237,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2202,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2202,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2257,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2269,
											"end": 2276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2221,
											"end": 2276,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2309,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2310,
											"end": 2320,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2332,
											"end": 2339,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2329,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2322,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 2365,
											"end": 2375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2380,
											"end": 2387,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2356,
											"end": 2388,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1827,
											"end": 2395,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3801,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3840,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3822,
											"end": 3840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3842,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3883,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3966,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3973,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3950,
											"end": 3976,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3995,
											"end": 4021,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 4021,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4040,
											"end": 4066,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4031,
											"end": 4066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3941,
											"end": 3976,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3883,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3967,
											"end": 3972,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3883,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4095,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4095,
											"end": 4121,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4095,
											"end": 4121,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4095,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4121,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4079,
											"end": 4121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4147,
											"end": 4173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4164,
											"end": 4169,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4171,
											"end": 4172,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4147,
											"end": 4173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4147,
											"end": 4173,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4147,
											"end": 4173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4173,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4216,
											"end": 4221,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4224,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4199,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4199,
											"end": 4225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4183,
											"end": 4225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4183,
											"end": 4225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 4232,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1182,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 1227,
											"end": 1233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 1227,
											"end": 1235,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4651,
											"end": 4787,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4651,
											"end": 4787,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4773,
											"end": 4777,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2375,
											"end": 2426,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4728,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 4706,
											"end": 4728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4739,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4729,
											"end": 4739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4719,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4764,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 4741,
											"end": 4764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2366,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2348,
											"end": 2366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4741,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3399,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4780,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4651,
											"end": 4787,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2827,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2911,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2945,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2957,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2965,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2973,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6235,
											"end": 6237,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6238,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6274,
											"end": 6276,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6254,
											"end": 6272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6247,
											"end": 6277,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81858DD1A5D994819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6311,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6286,
											"end": 6333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6350,
											"end": 6368,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6350,
											"end": 6368,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6033,
											"end": 6374,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2921,
											"end": 2999,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3025,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3057,
											"end": 3063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3028,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3028,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3091,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3103,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3075,
											"end": 3130,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3156,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3176,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3184,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3140,
											"end": 3184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3203,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3203,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3168,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3203,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3140,
											"end": 3203,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "PUSH",
											"source": 4,
											"value": "E311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873"
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3239,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3229,
											"end": 3239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3219,
											"end": 3257,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3422,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3437,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3445,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3406,
											"end": 3445,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3406,
											"end": 3445,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3349,
											"end": 3356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3403,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3388,
											"end": 3445,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3489,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3496,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3504,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3546,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3554,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3558,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3445,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3445,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3537,
											"end": 3558,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3632,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 3615,
											"end": 3620,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3537,
											"end": 3558,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3598,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3597,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3596,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3569,
											"end": 3632,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3663,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3569,
											"end": 3632,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3676,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3666,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3695,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3270,
											"end": 3733,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1323,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5531,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5626,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5327,
											"end": 5667,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1436,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2711,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2711,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1501,
											"end": 1505,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2720,
											"end": 2763,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2797,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2779,
											"end": 2797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2806,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2612,
											"end": 2630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1454,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1563,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1527,
											"end": 1582,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1608,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1628,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1636,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1592,
											"end": 1636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1640,
											"end": 1655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1592,
											"end": 1655,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1742,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1750,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1761,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1733,
											"end": 1761,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1761,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1730,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1715,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1681,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1693,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1761,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1761,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1761,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1692,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1806,
											"end": 1813,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1777,
											"end": 1814,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4769,
											"end": 4771,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4751,
											"end": 4772,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4781,
											"end": 4811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4847,
											"end": 4881,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4827,
											"end": 4845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4882,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4891,
											"end": 4927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 4963,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4944,
											"end": 4963,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4567,
											"end": 4969,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4423,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4459,
											"end": 4461,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4439,
											"end": 4457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4432,
											"end": 4462,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4496,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4521,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4538,
											"end": 4556,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4538,
											"end": 4556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4218,
											"end": 4562,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2393,
											"end": 2425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2425,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2425,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2375,
											"end": 2426,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2365,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2366,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5531,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5511,
											"end": 5532,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5548,
											"end": 5566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5580,
											"end": 5626,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5327,
											"end": 5667,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 741,
											"end": 748,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 737,
											"end": 760,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 733,
											"end": 765,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 778,
											"end": 779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 768,
											"end": 780,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 856,
											"end": 869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 849,
											"end": 870,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 839,
											"end": 871,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 829,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 829,
											"end": 889,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 885,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 875,
											"end": 887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1038,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1022,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1034,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1007,
											"end": 1039,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1054,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1235,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1287,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1430,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1540,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1540,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1683,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1809,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1810,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1810,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1861,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2817,
											"end": 3170,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2817,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3045,
											"end": 3077,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 3077,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 3077,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3045,
											"end": 3077,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3078,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3109,
											"end": 3111,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3094,
											"end": 3112,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3087,
											"end": 3121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3152,
											"end": 3154,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3137,
											"end": 3155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3137,
											"end": 3155,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3164,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3000,
											"end": 3018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3018,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2817,
											"end": 3170,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5672,
											"end": 6028,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5672,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5876,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5893,
											"end": 5911,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5893,
											"end": 5911,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5893,
											"end": 5911,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5886,
											"end": 5916,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5952,
											"end": 5986,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5947,
											"end": 5949,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5932,
											"end": 5950,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5925,
											"end": 5987,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5672,
											"end": 6028,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8710,
											"end": 8838,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 8710,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8750,
											"end": 8753,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8781,
											"end": 8782,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8777,
											"end": 8783,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 8774,
											"end": 8775,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8771,
											"end": 8784,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8768,
											"end": 8807,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8768,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8768,
											"end": 8807,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8823,
											"end": 8832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8823,
											"end": 8832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8710,
											"end": 8838,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8843,
											"end": 9060,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 8843,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8883,
											"end": 8884,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8909,
											"end": 8910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8899,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 8899,
											"end": 9031,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8953,
											"end": 8963,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 8948,
											"end": 8951,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 8944,
											"end": 8964,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 8941,
											"end": 8942,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8934,
											"end": 8965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8988,
											"end": 8992,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 8985,
											"end": 8986,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8978,
											"end": 8993,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9020,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9013,
											"end": 9014,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9021,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8899,
											"end": 9031,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 8899,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8843,
											"end": 9060,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9065,
											"end": 9233,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9065,
											"end": 9233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9105,
											"end": 9112,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9172,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9167,
											"end": 9168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9163,
											"end": 9169,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9159,
											"end": 9173,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 9156,
											"end": 9157,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9153,
											"end": 9174,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9148,
											"end": 9149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9141,
											"end": 9150,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9134,
											"end": 9151,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9130,
											"end": 9175,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9198,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9127,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9127,
											"end": 9198,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9178,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9178,
											"end": 9196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 9178,
											"end": 9196,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9178,
											"end": 9196,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9178,
											"end": 9196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9218,
											"end": 9227,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9065,
											"end": 9233,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9238,
											"end": 9363,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 9238,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9278,
											"end": 9282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9306,
											"end": 9307,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9303,
											"end": 9304,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9300,
											"end": 9308,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9297,
											"end": 9331,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9297,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9297,
											"end": 9331,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9311,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9348,
											"end": 9357,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9348,
											"end": 9357,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9238,
											"end": 9363,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9368,
											"end": 9495,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 9368,
											"end": 9495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9429,
											"end": 9439,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 9424,
											"end": 9427,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9420,
											"end": 9440,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 9417,
											"end": 9418,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9441,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9460,
											"end": 9464,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9457,
											"end": 9458,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9465,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9484,
											"end": 9488,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9481,
											"end": 9482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9489,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptedToken()": "451c3d80",
							"calculateRewards(address,uint256)": "beb8314c",
							"changeLevelValues(uint256,uint256,uint256)": "32e96203",
							"claim(uint256)": "379607f5",
							"compound(uint256)": "aa5f7e26",
							"deposit(uint256,uint256)": "e2bbb158",
							"getLevelsInfo()": "e788cee5",
							"getUserInfo(address)": "6386c1c7",
							"levelInfo(uint256)": "edf501ad",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"userLevelDeposit(address,uint256)": "259ee752",
							"withdraw(uint256,uint256)": "441a3e70",
							"withdrawTokens()": "8d8f2adb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Compound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"name\":\"changeLevelValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLevelsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level2\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"level0Rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level1Rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level2Rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLevelDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"AcesStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"staking.sol\":{\"keccak256\":\"0x3183bfe43664dbc94fc5253f6d77318b7919c0030bdfcea9645b347316691947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc8c83c62df6555eba390234c82c9eee09ee4cc0fb4815613021ca20008357d2\",\"dweb:/ipfs/QmWV7m24wzHYrZnJGPRz4FrGujECv7Ss1n7nVNnGAMWJfx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "staking.sol:AcesStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "staking.sol:AcesStaking",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 308,
								"contract": "staking.sol:AcesStaking",
								"label": "acceptedToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)274"
							},
							{
								"astId": 327,
								"contract": "staking.sol:AcesStaking",
								"label": "userLevelDeposit",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(User)315_storage))"
							},
							{
								"astId": 332,
								"contract": "staking.sol:AcesStaking",
								"label": "levelInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(Level)320_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)274": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(User)315_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct AcesStaking.User))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(User)315_storage)"
							},
							"t_mapping(t_uint256,t_struct(Level)320_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.Level)",
								"numberOfBytes": "32",
								"value": "t_struct(Level)320_storage"
							},
							"t_mapping(t_uint256,t_struct(User)315_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)315_storage"
							},
							"t_struct(Level)320_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.Level",
								"members": [
									{
										"astId": 317,
										"contract": "staking.sol:AcesStaking",
										"label": "APY",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 319,
										"contract": "staking.sol:AcesStaking",
										"label": "lockPeriod",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(User)315_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.User",
								"members": [
									{
										"astId": 310,
										"contract": "staking.sol:AcesStaking",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 312,
										"contract": "staking.sol:AcesStaking",
										"label": "started",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 314,
										"contract": "staking.sol:AcesStaking",
										"label": "unlockTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 297,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								296
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Pausable": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 297,
							"src": "115:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "617:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								296
							],
							"name": "Pausable",
							"nameLocation": "605:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 115,
									"name": "Paused",
									"nameLocation": "715:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:1"
									},
									"src": "709:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 120,
									"name": "Unpaused",
									"nameLocation": "826:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:1"
									},
									"src": "820:32:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "858:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 121,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "971:32:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "981:15:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:1"
									},
									"scope": 196,
									"src": "957:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1151:31:1",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "1161:14:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:1"
									},
									"scope": 196,
									"src": "1098:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1393:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 144,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1412:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:1"
											},
											{
												"id": 150,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 152,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:1"
									},
									"src": "1368:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1659:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 163,
									"name": "whenPaused",
									"nameLocation": "1646:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:1"
									},
									"src": "1637:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1912:66:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1946:25:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1898:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 196,
									"src": "1863:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2158:69:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2207:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "2193:27:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "2147:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:1"
									},
									"scope": 196,
									"src": "2110:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "587:1642:1",
							"usedErrors": []
						}
					],
					"src": "90:2140:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 274,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 274,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 274,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 274,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 274,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 274,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 264,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 273,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 275,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 281,
												"id": 284,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 296,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 290,
												"id": 293,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 296,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"AcesStaking": [
							839
						],
						"Context": [
							296
						],
						"IERC20": [
							274
						],
						"Ownable": [
							104
						],
						"Pausable": [
							196
						]
					},
					"id": 840,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 840,
							"sourceUnit": 275,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 840,
							"sourceUnit": 105,
							"src": "114:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 840,
							"sourceUnit": 197,
							"src": "167:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 302,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "248:7:4"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:4"
								},
								{
									"baseName": {
										"id": 304,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "257:8:4"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "257:8:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 839,
							"linearizedBaseContracts": [
								839,
								196,
								104,
								296
							],
							"name": "AcesStaking",
							"nameLocation": "233:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "451c3d80",
									"id": 308,
									"mutability": "mutable",
									"name": "acceptedToken",
									"nameLocation": "331:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 839,
									"src": "317:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$274",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 307,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 306,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 274,
											"src": "317:6:4"
										},
										"referencedDeclaration": 274,
										"src": "317:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$274",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AcesStaking.User",
									"id": 315,
									"members": [
										{
											"constant": false,
											"id": 310,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "417:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "409:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "409:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 312,
											"mutability": "mutable",
											"name": "started",
											"nameLocation": "442:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "434:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 311,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "434:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 314,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "467:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "459:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 313,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "459:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "394:4:4",
									"nodeType": "StructDefinition",
									"scope": 839,
									"src": "387:97:4",
									"visibility": "public"
								},
								{
									"canonicalName": "AcesStaking.Level",
									"id": 320,
									"members": [
										{
											"constant": false,
											"id": 317,
											"mutability": "mutable",
											"name": "APY",
											"nameLocation": "523:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 320,
											"src": "515:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 316,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "515:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 319,
											"mutability": "mutable",
											"name": "lockPeriod",
											"nameLocation": "544:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 320,
											"src": "536:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 318,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "536:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Level",
									"nameLocation": "499:5:4",
									"nodeType": "StructDefinition",
									"scope": 839,
									"src": "492:69:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "259ee752",
									"id": 327,
									"mutability": "mutable",
									"name": "userLevelDeposit",
									"nameLocation": "672:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 839,
									"src": "620:68:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
									},
									"typeName": {
										"id": 326,
										"keyType": {
											"id": 321,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "628:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "620:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
										},
										"valueType": {
											"id": 325,
											"keyType": {
												"id": 322,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "647:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "639:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
												"typeString": "mapping(uint256 => struct AcesStaking.User)"
											},
											"valueType": {
												"id": 324,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 323,
													"name": "User",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 315,
													"src": "658:4:4"
												},
												"referencedDeclaration": 315,
												"src": "658:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$315_storage_ptr",
													"typeString": "struct AcesStaking.User"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "edf501ad",
									"id": 332,
									"mutability": "mutable",
									"name": "levelInfo",
									"nameLocation": "727:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 839,
									"src": "694:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
										"typeString": "mapping(uint256 => struct AcesStaking.Level)"
									},
									"typeName": {
										"id": 331,
										"keyType": {
											"id": 328,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "702:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "694:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
											"typeString": "mapping(uint256 => struct AcesStaking.Level)"
										},
										"valueType": {
											"id": 330,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 329,
												"name": "Level",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 320,
												"src": "713:5:4"
											},
											"referencedDeclaration": 320,
											"src": "713:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Level_$320_storage_ptr",
												"typeString": "struct AcesStaking.Level"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 340,
									"name": "Deposit",
									"nameLocation": "764:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "781:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "773:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "795:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "787:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "787:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "810:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "802:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "772:45:4"
									},
									"src": "758:60:4"
								},
								{
									"anonymous": false,
									"id": 348,
									"name": "Withdraw",
									"nameLocation": "829:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "847:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "839:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "861:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "853:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "876:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "868:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:45:4"
									},
									"src": "823:61:4"
								},
								{
									"anonymous": false,
									"id": 356,
									"name": "Claim",
									"nameLocation": "895:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "910:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "902:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "924:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "916:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "916:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "939:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "931:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:45:4"
									},
									"src": "889:58:4"
								},
								{
									"anonymous": false,
									"id": 364,
									"name": "Compound",
									"nameLocation": "958:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "976:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "968:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "968:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "990:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "982:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1005:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "997:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "967:45:4"
									},
									"src": "952:61:4"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "1084:47:4",
										"statements": [
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 369,
														"name": "acceptedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1094:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 371,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 366,
																"src": "1117:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 370,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1110:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$274_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 372,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1110:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"src": "1094:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$274",
														"typeString": "contract IERC20"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "1094:30:4"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1075:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1067:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:17:4"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:0:4"
									},
									"scope": 839,
									"src": "1055:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "1217:25:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 381,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "1227:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1227:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "1227:8:4"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1207:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1207:9:4"
										}
									],
									"name": "pause",
									"nameLocation": "1191:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1197:2:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1217:0:4"
									},
									"scope": 839,
									"src": "1182:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "1289:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 390,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1299:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1299:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "1299:10:4"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 388,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 387,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1279:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1279:9:4"
										}
									],
									"name": "unpause",
									"nameLocation": "1261:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1269:2:4"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:4"
									},
									"scope": 839,
									"src": "1252:64:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 459,
										"nodeType": "Block",
										"src": "1395:426:4",
										"statements": [
											{
												"assignments": [
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "1413:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 459,
														"src": "1405:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 403,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1405:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 407,
												"initialValue": {
													"expression": {
														"id": 405,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1426:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1426:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 411,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1481:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 414,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1501:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AcesStaking_$839",
																		"typeString": "contract AcesStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AcesStaking_$839",
																		"typeString": "contract AcesStaking"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1493:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1493:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1493:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1508:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 408,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "1454:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "1454:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1454:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "1454:62:4"
											},
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 419,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1527:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 422,
																"indexExpression": {
																	"id": 420,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1544:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1527:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 423,
															"indexExpression": {
																"id": 421,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1556:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1527:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 424,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "1527:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 425,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "1575:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1527:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1527:55:4"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 428,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1592:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 431,
																"indexExpression": {
																	"id": 429,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1609:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1592:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 432,
															"indexExpression": {
																"id": 430,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1621:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1592:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 433,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "1592:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 434,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1640:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1640:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1592:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "1592:63:4"
											},
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 438,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "1665:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 439,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1682:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1665:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 442,
															"indexExpression": {
																"id": 440,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "1694:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1665:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "1665:47:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 444,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1715:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1715:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 446,
																	"name": "levelInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "1733:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																		"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																	}
																},
																"id": 448,
																"indexExpression": {
																	"id": 447,
																	"name": "_level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "1743:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1733:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Level_$320_storage",
																	"typeString": "struct AcesStaking.Level storage ref"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lockPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 319,
															"src": "1733:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1715:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1665:96:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "1665:96:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 454,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "1786:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 455,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1798:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 456,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "1806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "1777:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 458,
												"nodeType": "EmitStatement",
												"src": "1772:42:4"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 400,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1381:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1381:13:4"
										}
									],
									"name": "deposit",
									"nameLocation": "1332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1349:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1341:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "1366:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 460,
												"src": "1358:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1358:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:33:4"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1395:0:4"
									},
									"scope": 839,
									"src": "1323:498:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "1887:508:4",
										"statements": [
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "1905:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "1897:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 467,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1897:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"expression": {
														"id": 469,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1918:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1918:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1897:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 473,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "1946:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 475,
																		"indexExpression": {
																			"id": 474,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "1963:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1946:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 477,
																	"indexExpression": {
																		"id": 476,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "1975:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1946:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 478,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "1946:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 479,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "1994:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1946:55:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206465706f736974",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2003:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															},
															"value": "Not enough deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															}
														],
														"id": 472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1938:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1938:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "1938:86:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 485,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2042:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 487,
																		"indexExpression": {
																			"id": 486,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 468,
																			"src": "2059:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2042:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 489,
																	"indexExpression": {
																		"id": 488,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 464,
																		"src": "2071:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2042:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "2042:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 491,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2093:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2093:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f736974206e6f7420756e6c6f636b656420796574",
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2110:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
																"typeString": "literal_string \"Deposit not unlocked yet\""
															},
															"value": "Deposit not unlocked yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
																"typeString": "literal_string \"Deposit not unlocked yet\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2034:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2034:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2034:103:4"
											},
											{
												"assignments": [
													498
												],
												"declarations": [
													{
														"constant": false,
														"id": 498,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2156:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 528,
														"src": "2148:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 497,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"id": 500,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2183:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 501,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "2195:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 499,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2166:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2166:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:54:4"
											},
											{
												"expression": {
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 504,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2221:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 507,
																"indexExpression": {
																	"id": 505,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "2238:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2221:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 508,
															"indexExpression": {
																"id": 506,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 464,
																"src": "2250:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2221:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 509,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "2221:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 510,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 462,
														"src": "2269:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2221:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2221:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2310:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 517,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "2322:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 518,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "2332:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2322:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 513,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2287:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2287:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2287:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "2287:53:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 523,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "2365:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2377:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 525,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "2380:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "2356:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "EmitStatement",
												"src": "2351:37:4"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "1836:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1854:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1846:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "1871:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "1863:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1845:33:4"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1887:0:4"
									},
									"scope": 839,
									"src": "1827:568:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "2441:380:4",
										"statements": [
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "2459:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "2451:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 534,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2451:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 538,
												"initialValue": {
													"expression": {
														"id": 536,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2472:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2472:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2451:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 540,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2500:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 542,
																		"indexExpression": {
																			"id": 541,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 535,
																			"src": "2517:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2500:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 544,
																	"indexExpression": {
																		"id": 543,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 531,
																		"src": "2529:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2500:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 545,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "2500:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2500:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2550:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2492:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2492:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2492:78:4"
											},
											{
												"assignments": [
													552
												],
												"declarations": [
													{
														"constant": false,
														"id": 552,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2589:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "2581:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2581:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2616:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 555,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2628:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 553,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "2599:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2599:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2581:54:4"
											},
											{
												"expression": {
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 558,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2646:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 561,
																"indexExpression": {
																	"id": 559,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "2663:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2646:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 562,
															"indexExpression": {
																"id": 560,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 531,
																"src": "2675:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2646:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 563,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "2646:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 564,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2694:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2694:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2646:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "2646:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2743:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "2755:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 568,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2720:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2720:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2720:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "2720:43:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 576,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 535,
															"src": "2786:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "2798:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 578,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "2806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 575,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2779:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "EmitStatement",
												"src": "2774:40:4"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2410:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "2425:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "2417:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2417:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2416:16:4"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2441:0:4"
									},
									"scope": 839,
									"src": "2401:420:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "2870:394:4",
										"statements": [
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "2888:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "2880:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 587,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2880:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"expression": {
														"id": 589,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2901:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2901:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2880:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 593,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2929:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 595,
																		"indexExpression": {
																			"id": 594,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 588,
																			"src": "2946:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2929:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 597,
																	"indexExpression": {
																		"id": 596,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 584,
																		"src": "2958:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2929:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$315_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "2929:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2976:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2929:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2979:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2921:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2921:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "2921:78:4"
											},
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "3018:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 636,
														"src": "3010:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3010:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [
														{
															"id": 607,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3045:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 608,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "3057:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 606,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "3028:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3028:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3010:54:4"
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 611,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "3075:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 614,
																"indexExpression": {
																	"id": 612,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "3092:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3075:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 615,
															"indexExpression": {
																"id": 613,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "3104:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3075:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "3075:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 617,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 605,
														"src": "3123:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3075:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "3075:55:4"
											},
											{
												"expression": {
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 620,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "3140:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 623,
																"indexExpression": {
																	"id": 621,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "3157:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3140:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 624,
															"indexExpression": {
																"id": 622,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "3169:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3140:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "3140:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 626,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3188:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3188:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3140:63:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "3140:63:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 631,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 588,
															"src": "3229:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "3241:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 633,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "3249:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 630,
														"name": "Compound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "3219:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 635,
												"nodeType": "EmitStatement",
												"src": "3214:43:4"
											}
										]
									},
									"functionSelector": "aa5f7e26",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compound",
									"nameLocation": "2836:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "2854:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "2846:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:16:4"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2870:0:4"
									},
									"scope": 839,
									"src": "2827:437:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "3357:376:4",
										"statements": [
											{
												"assignments": [
													647
												],
												"declarations": [
													{
														"constant": false,
														"id": 647,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "3375:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3367:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3367:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 648,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3388:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3388:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 650,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "3406:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 652,
																"indexExpression": {
																	"id": 651,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "3423:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3406:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 654,
															"indexExpression": {
																"id": 653,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "3430:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3406:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$315_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 655,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "3406:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3388:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3367:78:4"
											},
											{
												"assignments": [
													659
												],
												"declarations": [
													{
														"constant": false,
														"id": 659,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3463:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3455:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3455:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 660,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3473:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 662,
															"indexExpression": {
																"id": 661,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "3490:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3473:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 664,
														"indexExpression": {
															"id": 663,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "3497:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3473:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 310,
													"src": "3473:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3455:57:4"
											},
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "APY",
														"nameLocation": "3531:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3523:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3523:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 669,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3537:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 671,
														"indexExpression": {
															"id": 670,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "3547:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3537:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "APY",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 317,
													"src": "3537:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3523:35:4"
											},
											{
												"assignments": [
													675
												],
												"declarations": [
													{
														"constant": false,
														"id": 675,
														"mutability": "mutable",
														"name": "rewardsPerSecond",
														"nameLocation": "3577:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3569:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 674,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3569:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 685,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 676,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 659,
																				"src": "3598:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 677,
																				"name": "APY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 668,
																				"src": "3608:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3598:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 679,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3597:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3615:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "3597:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 682,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3596:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:8:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "3596:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3569:63:4"
											},
											{
												"assignments": [
													687
												],
												"declarations": [
													{
														"constant": false,
														"id": 687,
														"mutability": "mutable",
														"name": "rewardsEarned",
														"nameLocation": "3650:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 694,
														"src": "3642:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 686,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3642:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 688,
														"name": "timeStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "3666:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 689,
														"name": "rewardsPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "3679:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3666:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3642:53:4"
											},
											{
												"expression": {
													"id": 692,
													"name": "rewardsEarned",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 687,
													"src": "3713:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 645,
												"id": 693,
												"nodeType": "Return",
												"src": "3706:20:4"
											}
										]
									},
									"functionSelector": "beb8314c",
									"id": 695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "3279:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3305:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3297:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3297:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "3320:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3312:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3296:31:4"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "3349:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3348:9:4"
									},
									"scope": 839,
									"src": "3270:463:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "3931:301:4",
										"statements": [
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 715,
														"name": "level0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "3941:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 716,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3950:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 718,
															"indexExpression": {
																"id": 717,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "3967:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3950:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 720,
														"indexExpression": {
															"hexValue": "30",
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3974:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3950:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "3941:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "3941:35:4"
											},
											{
												"expression": {
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 723,
														"name": "level1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3986:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 724,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "3995:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 726,
															"indexExpression": {
																"id": 725,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "4012:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3995:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 728,
														"indexExpression": {
															"hexValue": "31",
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4019:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3995:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "3986:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "3986:35:4"
											},
											{
												"expression": {
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 731,
														"name": "level2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "4031:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "4040:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 734,
															"indexExpression": {
																"id": 733,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "4057:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4040:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$315_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 736,
														"indexExpression": {
															"hexValue": "32",
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4064:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4040:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$315_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "4031:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "4031:35:4"
											},
											{
												"expression": {
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 739,
														"name": "level0Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "4079:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 741,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "4112:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "4095:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4095:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4079:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "4079:42:4"
											},
											{
												"expression": {
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 746,
														"name": "level1Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "4131:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 748,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "4164:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "31",
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4171:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 747,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "4147:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4147:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4131:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "4131:42:4"
											},
											{
												"expression": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 753,
														"name": "level2Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 713,
														"src": "4183:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 755,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 697,
																"src": "4216:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "32",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4223:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 754,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "4199:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4199:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4183:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "4183:42:4"
											}
										]
									},
									"functionSelector": "6386c1c7",
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nameLocation": "3752:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3772:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "3764:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:15:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "level0",
												"nameLocation": "3813:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "3801:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$315_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 700,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 699,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3801:4:4"
													},
													"referencedDeclaration": 315,
													"src": "3801:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "level1",
												"nameLocation": "3834:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "3822:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$315_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 703,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 702,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3822:4:4"
													},
													"referencedDeclaration": 315,
													"src": "3822:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "level2",
												"nameLocation": "3854:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "3842:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$315_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3842:4:4"
													},
													"referencedDeclaration": 315,
													"src": "3842:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$315_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "level0Rewards",
												"nameLocation": "3870:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "3862:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3862:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "level1Rewards",
												"nameLocation": "3893:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "3885:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "level2Rewards",
												"nameLocation": "3917:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "3909:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3800:131:4"
									},
									"scope": 839,
									"src": "3743:489:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "4347:105:4",
										"statements": [
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 773,
														"name": "level0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "4357:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 774,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4366:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 776,
														"indexExpression": {
															"hexValue": "30",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4376:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4366:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "4357:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "4357:21:4"
											},
											{
												"expression": {
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 779,
														"name": "level1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "4388:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 780,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4397:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 782,
														"indexExpression": {
															"hexValue": "31",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4407:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4397:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "4388:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "4388:21:4"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 785,
														"name": "level2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "4419:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 786,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "4428:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 788,
														"indexExpression": {
															"hexValue": "32",
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4438:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4428:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$320_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "4419:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "4419:21:4"
											}
										]
									},
									"functionSelector": "e788cee5",
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevelsInfo",
									"nameLocation": "4247:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4260:2:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "level0",
												"nameLocation": "4298:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "4285:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 320,
														"src": "4285:5:4"
													},
													"referencedDeclaration": 320,
													"src": "4285:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "level1",
												"nameLocation": "4319:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "4306:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 767,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 766,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 320,
														"src": "4306:5:4"
													},
													"referencedDeclaration": 320,
													"src": "4306:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "level2",
												"nameLocation": "4340:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "4327:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$320_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 770,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 769,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 320,
														"src": "4327:5:4"
													},
													"referencedDeclaration": 320,
													"src": "4327:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$320_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4284:63:4"
									},
									"scope": 839,
									"src": "4238:214:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 817,
										"nodeType": "Block",
										"src": "4552:93:4",
										"statements": [
											{
												"expression": {
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 803,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "4562:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 805,
															"indexExpression": {
																"id": 804,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "4572:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4562:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$320_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "APY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "4562:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 807,
														"name": "_APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "4585:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4562:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "4562:27:4"
											},
											{
												"expression": {
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 810,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "4599:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$320_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 812,
															"indexExpression": {
																"id": 811,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "4609:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4599:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$320_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "4599:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 814,
														"name": "_lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4629:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4599:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 816,
												"nodeType": "ExpressionStatement",
												"src": "4599:39:4"
											}
										]
									},
									"functionSelector": "32e96203",
									"id": 818,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 801,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 800,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4542:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4542:9:4"
										}
									],
									"name": "changeLevelValues",
									"nameLocation": "4467:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "4493:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "4485:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4485:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "_APY",
												"nameLocation": "4508:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "4500:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "_lockTime",
												"nameLocation": "4522:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "4514:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4514:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4484:48:4"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4552:0:4"
									},
									"scope": 839,
									"src": "4458:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 837,
										"nodeType": "Block",
										"src": "4696:91:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 826,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4729:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4729:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 832,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4773:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AcesStaking_$839",
																				"typeString": "contract AcesStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AcesStaking_$839",
																				"typeString": "contract AcesStaking"
																			}
																		],
																		"id": 831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4765:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 830,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4765:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4765:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 828,
																	"name": "acceptedToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "4741:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$274",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 213,
																"src": "4741:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4741:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 823,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4706:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "4706:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4706:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 836,
												"nodeType": "ExpressionStatement",
												"src": "4706:74:4"
											}
										]
									},
									"functionSelector": "8d8f2adb",
									"id": 838,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 821,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 820,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4686:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4686:9:4"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "4660:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4674:2:4"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4696:0:4"
									},
									"scope": 839,
									"src": "4651:136:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 840,
							"src": "224:4565:4",
							"usedErrors": []
						}
					],
					"src": "32:4757:4"
				},
				"id": 4
			}
		}
	}
}