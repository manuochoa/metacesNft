{
	"id": "270455dd1c3bbc94438a62c57832d27f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ncontract AcesStaking is Ownable, Pausable {\n    // Address of the token for the staking.\n    IERC20 public acceptedToken;\n    \n    // Struc with user details.\n    struct User {\n        uint256 balance;\n        uint256 started;\n        uint256 lastClaim;\n        uint256 unlockTime;\n    }  \n\n    struct Level {\n        uint256 APY;\n        uint256 lockPeriod;\n    } \n    \n    // Mapping for user details of  each class.\n    mapping(address => mapping(uint256 => User)) public userLevelDeposit;\n    mapping(uint256 => Level) public levelInfo;\n\n    // Events.\n    event Deposit (address user, uint256 class, uint256 amount);\n    event Withdraw (address user, uint256 class, uint256 amount);\n    event Claim (address user, uint256 class, uint256 amount);\n    event Compound (address user, uint256 class, uint256 amount);\n \n    // Set the token to be staked.\n    constructor(address _token ) {\n        acceptedToken = IERC20(_token);\n    }   \n    \n    // Pause and Unpause the contract\n    function pause () public onlyOwner {\n        _pause();\n    }\n    \n    function unpause () public onlyOwner {\n        _unpause();\n    } \n\n    function deposit (uint256 _amount, uint256 _level) public whenNotPaused {\n        address _msgSender = msg.sender;       \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        if(userLevelDeposit[_msgSender][_level].balance > 0){\n            _amount += calculateRewards(_msgSender, _level);\n        }\n\n        userLevelDeposit[_msgSender][_level].balance += _amount;\n        userLevelDeposit[_msgSender][_level].started = block.timestamp;\n        userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp;\n        userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod;\n\n        emit Deposit (_msgSender, _level, _amount);\n    }\n\n    function withdraw (uint256 _amount, uint256 _level) public  {\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\");\n        require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n        \n        userLevelDeposit[_msgSender][_level].balance -= _amount;\n\n        acceptedToken.transfer(_msgSender, _amount + rewards);\n\n        emit Withdraw(_msgSender, 0, _amount);\n    }\n\n    function claim (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp;\n\n        acceptedToken.transfer(_msgSender, rewards);\n\n        emit Claim (_msgSender, _level, rewards);\n    }\n\n    function compound (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        userLevelDeposit[_msgSender][_level].balance += rewards;\n        userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp;\n\n        emit Compound (_msgSender, _level, rewards);\n    }\n\n    function calculateRewards (address _user, uint256 _level) public view returns (uint256){\n        uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].lastClaim;\n        uint256 balance = userLevelDeposit[_user][_level].balance; \n        uint256 APY = levelInfo[_level].APY;\n\n        uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days;\n        uint256 rewardsEarned = timeStaked * rewardsPerSecond;\n\n        return rewardsEarned;\n    }    \n\n    function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){\n        level0 = userLevelDeposit[_user][0];\n        level1 = userLevelDeposit[_user][1];\n        level2 = userLevelDeposit[_user][2];  \n\n        level0Rewards = calculateRewards(_user, 0);\n        level1Rewards = calculateRewards(_user, 1);\n        level2Rewards = calculateRewards(_user, 2);\n    }\n\n    function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){\n        level0 = levelInfo[0];\n        level1 = levelInfo[1];\n        level2 = levelInfo[2];     \n    }\n\n    function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {\n        levelInfo[level].APY = _APY;\n        levelInfo[level].lockPeriod = _lockTime;\n    }\n\n    function withdrawTokens() external onlyOwner {\n        acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this)));\n    }\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"AcesStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Compound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptedToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockTime",
									"type": "uint256"
								}
							],
							"name": "changeLevelValues",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLevelsInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level1",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level2",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastClaim",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastClaim",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level1",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastClaim",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level2",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "level0Rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "level1Rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "level2Rewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "levelInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userLevelDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "started",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastClaim",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":224:5027  contract AcesStaking is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":1082:1158  constructor(address _token ) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":991:996  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  0x01\n    /* \"staking.sol\":1121:1151  acceptedToken = IERC20(_token) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"staking.sol\":224:5027  contract AcesStaking is Ownable, Pausable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"staking.sol\":224:5027  contract AcesStaking is Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":224:5027  contract AcesStaking is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xbeb8314c\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xbeb8314c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe788cee5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xedf501ad\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x8456cb59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8d8f2adb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xaa5f7e26\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x441a3e70\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x451c3d80\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6386c1c7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x259ee752\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x32e96203\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":647:715  mapping(address => mapping(uint256 => User)) public userLevelDeposit */\n    tag_3:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      0x02\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap3\n      dup3\n      add\n      sload\n      0x03\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap3\n      swap2\n      swap1\n      dup5\n      jump\n    tag_24:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8674:8699   */\n      swap5\n      dup6\n      mstore\n        /* \"#utility.yul\":8730:8732   */\n      0x20\n        /* \"#utility.yul\":8715:8733   */\n      dup6\n      add\n        /* \"#utility.yul\":8708:8742   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":8758:8776   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":8751:8785   */\n      mstore\n        /* \"#utility.yul\":8816:8818   */\n      0x60\n        /* \"#utility.yul\":8801:8819   */\n      dup3\n      add\n        /* \"#utility.yul\":8794:8828   */\n      mstore\n        /* \"#utility.yul\":8661:8664   */\n      0x80\n        /* \"#utility.yul\":8646:8665   */\n      add\n        /* \"staking.sol\":647:715  mapping(address => mapping(uint256 => User)) public userLevelDeposit */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":4696:4883  function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"staking.sol\":2635:3056  function claim (uint256 _level) external{... */\n    tag_5:\n      tag_30\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n        /* \"staking.sol\":1279:1343  function unpause () public onlyOwner {... */\n    tag_6:\n      tag_30\n      tag_39\n      jump\t// in\n        /* \"staking.sol\":2061:2629  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_7:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n    tag_8:\n      sload(0x01)\n      tag_44\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2449:2481   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2431:2482   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"#utility.yul\":2404:2422   */\n      add\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n      tag_28\n        /* \"#utility.yul\":2285:2488   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":4025:4039   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4018:4040   */\n      iszero\n        /* \"#utility.yul\":4000:4041   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3988:3990   */\n      0x20\n        /* \"#utility.yul\":3973:3991   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":3860:4047   */\n      jump\n        /* \"staking.sol\":3981:4470  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){... */\n    tag_10:\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":2093:2105   */\n      dup8\n      mload\n        /* \"#utility.yul\":2081:2106   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2155:2159   */\n      0x20\n        /* \"#utility.yul\":2144:2160   */\n      dup1\n      dup10\n      add\n        /* \"#utility.yul\":2138:2161   */\n      mload\n        /* \"#utility.yul\":2122:2136   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":2115:2162   */\n      mstore\n        /* \"#utility.yul\":2200:2216   */\n      dup9\n      dup4\n      add\n        /* \"#utility.yul\":2194:2217   */\n      mload\n        /* \"#utility.yul\":2178:2192   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":2171:2218   */\n      mstore\n        /* \"#utility.yul\":2267:2271   */\n      0x60\n        /* \"#utility.yul\":2256:2272   */\n      swap9\n      dup10\n      add\n        /* \"#utility.yul\":2250:2273   */\n      mload\n        /* \"#utility.yul\":2234:2248   */\n      dup10\n      dup4\n      add\n        /* \"#utility.yul\":2227:2274   */\n      mstore\n        /* \"#utility.yul\":2093:2105   */\n      dup8\n      mload\n        /* \"#utility.yul\":7800:7803   */\n      0x80\n        /* \"#utility.yul\":7785:7804   */\n      dup4\n      add\n        /* \"#utility.yul\":2081:2106   */\n      mstore\n        /* \"#utility.yul\":2144:2160   */\n      dup1\n      dup9\n      add\n        /* \"#utility.yul\":2138:2161   */\n      mload\n        /* \"#utility.yul\":2122:2136   */\n      0xa0\n      dup4\n      add\n        /* \"#utility.yul\":2115:2162   */\n      mstore\n        /* \"#utility.yul\":2200:2216   */\n      dup8\n      dup4\n      add\n        /* \"#utility.yul\":2194:2217   */\n      mload\n        /* \"#utility.yul\":2178:2192   */\n      0xc0\n      dup4\n      add\n        /* \"#utility.yul\":2171:2218   */\n      mstore\n        /* \"#utility.yul\":2256:2272   */\n      swap7\n      dup9\n      add\n        /* \"#utility.yul\":2250:2273   */\n      mload\n        /* \"#utility.yul\":2234:2248   */\n      0xe0\n      dup3\n      add\n        /* \"#utility.yul\":2227:2274   */\n      mstore\n        /* \"#utility.yul\":2093:2105   */\n      dup6\n      mload\n        /* \"#utility.yul\":7860:7863   */\n      0x0100\n        /* \"#utility.yul\":7845:7864   */\n      dup3\n      add\n        /* \"#utility.yul\":2081:2106   */\n      mstore\n        /* \"#utility.yul\":2144:2160   */\n      swap6\n      dup6\n      add\n        /* \"#utility.yul\":2138:2161   */\n      mload\n        /* \"#utility.yul\":2122:2136   */\n      0x0120\n      dup8\n      add\n        /* \"#utility.yul\":2115:2162   */\n      mstore\n        /* \"#utility.yul\":2200:2216   */\n      dup5\n      add\n        /* \"#utility.yul\":2194:2217   */\n      mload\n        /* \"#utility.yul\":2178:2192   */\n      0x0140\n      dup7\n      add\n        /* \"#utility.yul\":2171:2218   */\n      mstore\n        /* \"#utility.yul\":2256:2272   */\n      swap5\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2250:2273   */\n      mload\n        /* \"#utility.yul\":2234:2248   */\n      0x0160\n      dup5\n      add\n        /* \"#utility.yul\":2227:2274   */\n      mstore\n        /* \"#utility.yul\":7896:7899   */\n      0x0180\n        /* \"#utility.yul\":7881:7900   */\n      dup4\n      add\n        /* \"#utility.yul\":7874:7909   */\n      mstore\n        /* \"#utility.yul\":7940:7943   */\n      0x01a0\n        /* \"#utility.yul\":7925:7944   */\n      dup3\n      add\n        /* \"#utility.yul\":7918:7953   */\n      mstore\n        /* \"#utility.yul\":7984:7987   */\n      0x01c0\n        /* \"#utility.yul\":7969:7988   */\n      dup2\n      add\n        /* \"#utility.yul\":7962:7997   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7691:7694   */\n      0x01e0\n        /* \"#utility.yul\":7676:7695   */\n      add\n        /* \"staking.sol\":3981:4470  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){... */\n      tag_28\n        /* \"#utility.yul\":7291:8003   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_30\n      tag_59\n      jump\t// in\n        /* \"staking.sol\":1209:1269  function pause () public onlyOwner {... */\n    tag_12:\n      tag_30\n      tag_61\n      jump\t// in\n        /* \"staking.sol\":4889:5025  function withdrawTokens() external onlyOwner {... */\n    tag_13:\n      tag_30\n      tag_63\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_44)\n        /* \"staking.sol\":3062:3500  function compound (uint256 _level) external{... */\n    tag_15:\n      tag_30\n      tag_69\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"staking.sol\":3506:3971  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_16:\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n        /* \"#utility.yul\":8154:8179   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8142:8144   */\n      0x20\n        /* \"#utility.yul\":8127:8145   */\n      add\n        /* \"staking.sol\":3506:3971  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n      tag_28\n        /* \"#utility.yul\":8008:8185   */\n      jump\n        /* \"staking.sol\":1350:2055  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_17:\n      tag_30\n      tag_77\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n        /* \"staking.sol\":4476:4690  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){... */\n    tag_18:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"staking.sol\":4595:4616  level0 = levelInfo[0] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n        /* \"staking.sol\":4604:4616  levelInfo[0] */\n      0x3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff\n        /* \"staking.sol\":4595:4616  level0 = levelInfo[0] */\n      sload\n      dup2\n      mstore\n      sload(0x3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f00)\n      dup2\n      dup5\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4626:4647  level1 = levelInfo[1] */\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      dup7\n      mstore\n        /* \"staking.sol\":4635:4647  levelInfo[1] */\n      0xa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c\n        /* \"staking.sol\":4626:4647  level1 = levelInfo[1] */\n      sload\n      dup2\n      mstore\n      sload(0xa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054d)\n      dup2\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4676:4677  2 */\n      0x02\n        /* \"staking.sol\":4666:4678  levelInfo[2] */\n      swap1\n      swap5\n      mstore\n        /* \"staking.sol\":4604:4613  levelInfo */\n      0x03\n        /* \"staking.sol\":4666:4678  levelInfo[2] */\n      dup6\n      mstore\n        /* \"staking.sol\":4657:4678  level2 = levelInfo[2] */\n      dup6\n      mload\n      dup1\n      dup8\n      add\n      dup8\n      mstore\n        /* \"staking.sol\":4666:4678  levelInfo[2] */\n      0xc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d\n        /* \"staking.sol\":4657:4678  level2 = levelInfo[2] */\n      sload\n      dup2\n      mstore\n      sload(0xc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4e)\n      dup2\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4476:4690  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){... */\n      dup8\n      mload\n        /* \"#utility.yul\":1943:1955   */\n      swap5\n      mload\n        /* \"#utility.yul\":1931:1956   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap3\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      swap6\n      dup5\n      add\n        /* \"#utility.yul\":1965:2012   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":1943:1955   */\n      mload\n        /* \"#utility.yul\":7200:7218   */\n      swap5\n      dup3\n      add\n        /* \"#utility.yul\":1931:1956   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap1\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      0x60\n      dup3\n      add\n        /* \"#utility.yul\":1965:2012   */\n      mstore\n        /* \"#utility.yul\":1943:1955   */\n      swap1\n      mload\n        /* \"#utility.yul\":7275:7278   */\n      0x80\n        /* \"#utility.yul\":7260:7279   */\n      dup3\n      add\n        /* \"#utility.yul\":1931:1956   */\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap1\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":1965:2012   */\n      mstore\n        /* \"#utility.yul\":7104:7107   */\n      0xc0\n        /* \"#utility.yul\":7089:7108   */\n      add\n        /* \"staking.sol\":4476:4690  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2){... */\n      tag_28\n        /* \"#utility.yul\":6782:7286   */\n      jump\n        /* \"staking.sol\":721:763  mapping(uint256 => Level) public levelInfo */\n    tag_19:\n      tag_83\n      tag_84\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_84:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_83:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8364:8389   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":8420:8422   */\n      0x20\n        /* \"#utility.yul\":8405:8423   */\n      dup4\n      add\n        /* \"#utility.yul\":8398:8432   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8337:8355   */\n      add\n        /* \"staking.sol\":721:763  mapping(uint256 => Level) public levelInfo */\n      tag_28\n        /* \"#utility.yul\":8190:8438   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_30\n      tag_89\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"staking.sol\":4696:4883  function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"staking.sol\":4800:4816  levelInfo[level] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"staking.sol\":4800:4809  levelInfo */\n      0x03\n        /* \"staking.sol\":4800:4816  levelInfo[level] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"staking.sol\":4800:4827  levelInfo[level].APY = _APY */\n      swap1\n      dup2\n      sstore\n        /* \"staking.sol\":4837:4864  levelInfo[level].lockPeriod */\n      0x01\n      add\n        /* \"staking.sol\":4837:4876  levelInfo[level].lockPeriod = _lockTime */\n      sstore\n        /* \"staking.sol\":4696:4883  function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":2635:3056  function claim (uint256 _level) external{... */\n    tag_37:\n        /* \"staking.sol\":2706:2716  msg.sender */\n      caller\n        /* \"staking.sol\":2685:2703  address _msgSender */\n      0x00\n        /* \"staking.sol\":2734:2762  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":2734:2750  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2734:2762  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2734:2770  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":2734:2778  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":2726:2804  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6291:6293   */\n      0x20\n        /* \"staking.sol\":2726:2804  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6273:6294   */\n      mstore\n        /* \"#utility.yul\":6330:6332   */\n      0x11\n        /* \"#utility.yul\":6310:6328   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6303:6333   */\n      mstore\n      shl(0x7a, 0x139bc81858dd1a5d994819195c1bdcda5d)\n        /* \"#utility.yul\":6349:6367   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6342:6389   */\n      mstore\n        /* \"#utility.yul\":6406:6424   */\n      0x64\n      add\n        /* \"staking.sol\":2726:2804  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_96\n        /* \"#utility.yul\":6089:6430   */\n      jump\n        /* \"staking.sol\":2726:2804  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n    tag_100:\n        /* \"staking.sol\":2815:2830  uint256 rewards */\n      0x00\n        /* \"staking.sol\":2833:2869  calculateRewards(_msgSender, _level) */\n      tag_103\n        /* \"staking.sol\":2850:2860  _msgSender */\n      dup3\n        /* \"staking.sol\":2862:2868  _level */\n      dup5\n        /* \"staking.sol\":2833:2849  calculateRewards */\n      tag_73\n        /* \"staking.sol\":2833:2869  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2880:2908  userLevelDeposit[_msgSender] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":2880:2896  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2880:2908  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":2880:2916  userLevelDeposit[_msgSender][_level] */\n      dup11\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":2929:2944  block.timestamp */\n      timestamp\n        /* \"staking.sol\":2880:2926  userLevelDeposit[_msgSender][_level].lastClaim */\n      swap2\n      add\n        /* \"staking.sol\":2880:2944  userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp */\n      sstore\n        /* \"staking.sol\":2955:2968  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":2955:2998  acceptedToken.transfer(_msgSender, rewards) */\n      swap1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3405:3456   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3472:3490   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3465:3499   */\n      dup5\n      swap1\n      mstore\n        /* \"staking.sol\":2815:2869  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":2955:2968  acceptedToken */\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":2955:2977  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3378:3396   */\n      0x44\n      add\n        /* \"staking.sol\":2955:2998  acceptedToken.transfer(_msgSender, rewards) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_108\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_108:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      pop\n        /* \"staking.sol\":3014:3049  Claim (_msgSender, _level, rewards) */\n      0x34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7\n        /* \"staking.sol\":3021:3031  _msgSender */\n      dup3\n        /* \"staking.sol\":3033:3039  _level */\n      dup5\n        /* \"staking.sol\":3041:3048  rewards */\n      dup4\n        /* \"staking.sol\":3014:3049  Claim (_msgSender, _level, rewards) */\n      mload(0x40)\n      tag_111\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":2675:3056  {... */\n      pop\n      pop\n        /* \"staking.sol\":2635:3056  function claim (uint256 _level) external{... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":1279:1343  function unpause () public onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_116:\n        /* \"staking.sol\":1326:1336  _unpause() */\n      tag_119\n        /* \"staking.sol\":1326:1334  _unpause */\n      tag_120\n        /* \"staking.sol\":1326:1336  _unpause() */\n      jump\t// in\n    tag_119:\n        /* \"staking.sol\":1279:1343  function unpause () public onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":2061:2629  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_43:\n        /* \"staking.sol\":2152:2162  msg.sender */\n      caller\n        /* \"staking.sol\":2131:2149  address _msgSender */\n      0x00\n        /* \"staking.sol\":2180:2208  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":2180:2196  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2180:2208  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2180:2216  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":2180:2224  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":2180:2235  userLevelDeposit[_msgSender][_level].balance >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"staking.sol\":2172:2258  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6637:6639   */\n      0x20\n        /* \"staking.sol\":2172:2258  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6619:6640   */\n      mstore\n        /* \"#utility.yul\":6676:6678   */\n      0x12\n        /* \"#utility.yul\":6656:6674   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6649:6679   */\n      mstore\n      shl(0x72, 0x139bdd08195b9bdd59da0819195c1bdcda5d)\n        /* \"#utility.yul\":6695:6713   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6688:6736   */\n      mstore\n        /* \"#utility.yul\":6753:6771   */\n      0x64\n      add\n        /* \"staking.sol\":2172:2258  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      tag_96\n        /* \"#utility.yul\":6435:6777   */\n      jump\n        /* \"staking.sol\":2172:2258  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n    tag_122:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2276:2304  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2276:2292  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2276:2304  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2276:2312  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":2276:2323  userLevelDeposit[_msgSender][_level].unlockTime */\n      0x03\n      add\n      sload\n        /* \"staking.sol\":2327:2342  block.timestamp */\n      timestamp\n      lt\n        /* \"staking.sol\":2276:2342  userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp */\n      iszero\n        /* \"staking.sol\":2268:2371  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5232:5234   */\n      0x20\n        /* \"staking.sol\":2268:2371  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5214:5235   */\n      mstore\n        /* \"#utility.yul\":5271:5273   */\n      0x18\n        /* \"#utility.yul\":5251:5269   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5244:5274   */\n      mstore\n        /* \"#utility.yul\":5310:5336   */\n      0x4465706f736974206e6f7420756e6c6f636b6564207965740000000000000000\n        /* \"#utility.yul\":5290:5308   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5283:5337   */\n      mstore\n        /* \"#utility.yul\":5354:5372   */\n      0x64\n      add\n        /* \"staking.sol\":2268:2371  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n      tag_96\n        /* \"#utility.yul\":5030:5378   */\n      jump\n        /* \"staking.sol\":2268:2371  require(userLevelDeposit[_msgSender][_level].unlockTime <= block.timestamp, \"Deposit not unlocked yet\") */\n    tag_125:\n        /* \"staking.sol\":2382:2397  uint256 rewards */\n      0x00\n        /* \"staking.sol\":2400:2436  calculateRewards(_msgSender, _level) */\n      tag_128\n        /* \"staking.sol\":2417:2427  _msgSender */\n      dup3\n        /* \"staking.sol\":2429:2435  _level */\n      dup5\n        /* \"staking.sol\":2400:2416  calculateRewards */\n      tag_73\n        /* \"staking.sol\":2400:2436  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2455:2483  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2455:2471  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":2455:2483  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2455:2491  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":2455:2510  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":2382:2436  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":2503:2510  _amount */\n      dup7\n      swap3\n        /* \"staking.sol\":2455:2491  userLevelDeposit[_msgSender][_level] */\n      swap1\n      swap2\n        /* \"staking.sol\":2455:2483  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":2455:2510  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      tag_129\n      swap1\n        /* \"staking.sol\":2503:2510  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":2455:2510  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      tag_130\n      jump\t// in\n    tag_129:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":2521:2534  acceptedToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"staking.sol\":2521:2543  acceptedToken.transfer */\n      0xa9059cbb\n        /* \"staking.sol\":2544:2554  _msgSender */\n      dup4\n        /* \"staking.sol\":2556:2573  _amount + rewards */\n      tag_131\n        /* \"staking.sol\":2566:2573  rewards */\n      dup5\n        /* \"staking.sol\":2556:2563  _amount */\n      dup9\n        /* \"staking.sol\":2556:2573  _amount + rewards */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"staking.sol\":2521:2574  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3423:3455   */\n      swap1\n      swap3\n      and\n        /* \"staking.sol\":2521:2574  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3405:3456   */\n      mstore\n        /* \"#utility.yul\":3472:3490   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3465:3499   */\n      mstore\n        /* \"#utility.yul\":3378:3396   */\n      0x44\n      add\n        /* \"staking.sol\":2521:2574  acceptedToken.transfer(_msgSender, _amount + rewards) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_137:\n      pop\n        /* \"staking.sol\":2590:2622  Withdraw(_msgSender, 0, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"staking.sol\":2599:2609  _msgSender */\n      dup3\n        /* \"staking.sol\":2611:2612  0 */\n      0x00\n        /* \"staking.sol\":2614:2621  _amount */\n      dup7\n        /* \"staking.sol\":2590:2622  Withdraw(_msgSender, 0, _amount) */\n      mload(0x40)\n      tag_138\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":2121:2629  {... */\n      pop\n      pop\n        /* \"staking.sol\":2061:2629  function withdraw (uint256 _amount, uint256 _level) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":3981:4470  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){... */\n    tag_55:\n        /* \"staking.sol\":4039:4057  User memory level0 */\n      tag_141\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_141:\n        /* \"staking.sol\":4060:4078  User memory level1 */\n      tag_143\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_143:\n        /* \"staking.sol\":4080:4098  User memory level2 */\n      tag_144\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\n    tag_144:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4188:4211  userLevelDeposit[_user] */\n      dup2\n      and\n        /* \"staking.sol\":4100:4121  uint256 level0Rewards */\n      0x00\n        /* \"staking.sol\":4188:4211  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4188:4204  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":4188:4211  userLevelDeposit[_user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":4188:4214  userLevelDeposit[_user][0] */\n      dup5\n      dup1\n      mstore\n      dup1\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"staking.sol\":4179:4214  level0 = userLevelDeposit[_user][0] */\n      dup3\n      mload\n      0x80\n      dup1\n      dup3\n      add\n      dup6\n      mstore\n      dup3\n      sload\n      dup3\n      mstore\n      0x01\n      dup1\n      dup5\n      add\n      sload\n      dup4\n      dup9\n      add\n      mstore\n      dup4\n      dup9\n      add\n      sload\n      dup4\n      dup8\n      add\n      mstore\n      0x03\n      swap4\n      dup5\n      add\n      sload\n      0x60\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"staking.sol\":4233:4259  userLevelDeposit[_user][1] */\n      dup2\n      dup11\n      mstore\n      dup6\n      dup9\n      mstore\n      dup7\n      dup11\n      keccak256\n        /* \"staking.sol\":4224:4259  level1 = userLevelDeposit[_user][1] */\n      dup8\n      mload\n      dup1\n      dup6\n      add\n      dup10\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      dup2\n      dup5\n      add\n      sload\n      dup2\n      dup12\n      add\n      mstore\n      dup2\n      dup12\n      add\n      sload\n      dup2\n      dup11\n      add\n      mstore\n      swap1\n      dup7\n      add\n      sload\n      dup2\n      dup4\n      add\n      mstore\n        /* \"staking.sol\":4278:4304  userLevelDeposit[_user][2] */\n      dup10\n      dup12\n      mstore\n      swap6\n      dup9\n      mstore\n      dup7\n      dup11\n      keccak256\n        /* \"staking.sol\":4269:4304  level2 = userLevelDeposit[_user][2] */\n      dup8\n      mload\n      swap4\n      dup5\n      add\n      dup9\n      mstore\n      dup1\n      sload\n      dup5\n      mstore\n      swap2\n      dup3\n      add\n      sload\n      swap8\n      dup4\n      add\n      swap8\n      swap1\n      swap8\n      mstore\n      swap7\n      dup8\n      add\n      sload\n      swap5\n      dup2\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      swap5\n      add\n      sload\n      swap3\n      dup3\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"staking.sol\":4179:4214  level0 = userLevelDeposit[_user][0] */\n      swap2\n      swap3\n        /* \"staking.sol\":4224:4259  level1 = userLevelDeposit[_user][1] */\n      swap1\n      swap2\n        /* \"staking.sol\":4269:4304  level2 = userLevelDeposit[_user][2] */\n      swap1\n        /* \"staking.sol\":4100:4121  uint256 level0Rewards */\n      dup1\n      dup1\n        /* \"staking.sol\":4333:4359  calculateRewards(_user, 0) */\n      tag_146\n        /* \"staking.sol\":4205:4210  _user */\n      dup8\n        /* \"staking.sol\":4100:4121  uint256 level0Rewards */\n      dup3\n        /* \"staking.sol\":4333:4349  calculateRewards */\n      tag_73\n        /* \"staking.sol\":4333:4359  calculateRewards(_user, 0) */\n      jump\t// in\n    tag_146:\n        /* \"staking.sol\":4317:4359  level0Rewards = calculateRewards(_user, 0) */\n      swap3\n      pop\n        /* \"staking.sol\":4385:4411  calculateRewards(_user, 1) */\n      tag_147\n        /* \"staking.sol\":4402:4407  _user */\n      dup8\n        /* \"staking.sol\":4409:4410  1 */\n      0x01\n        /* \"staking.sol\":4385:4401  calculateRewards */\n      tag_73\n        /* \"staking.sol\":4385:4411  calculateRewards(_user, 1) */\n      jump\t// in\n    tag_147:\n        /* \"staking.sol\":4369:4411  level1Rewards = calculateRewards(_user, 1) */\n      swap2\n      pop\n        /* \"staking.sol\":4437:4463  calculateRewards(_user, 2) */\n      tag_148\n        /* \"staking.sol\":4454:4459  _user */\n      dup8\n        /* \"staking.sol\":4461:4462  2 */\n      0x02\n        /* \"staking.sol\":4437:4453  calculateRewards */\n      tag_73\n        /* \"staking.sol\":4437:4463  calculateRewards(_user, 2) */\n      jump\t// in\n    tag_148:\n        /* \"staking.sol\":4421:4463  level2Rewards = calculateRewards(_user, 2) */\n      swap1\n      pop\n        /* \"staking.sol\":3981:4470  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, uint256 level0Rewards, uint256 level1Rewards,  uint256 level2Rewards){... */\n      swap2\n      swap4\n      swap6\n      pop\n      swap2\n      swap4\n      swap6\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"staking.sol\":1209:1269  function pause () public onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_160:\n        /* \"staking.sol\":1254:1262  _pause() */\n      tag_119\n        /* \"staking.sol\":1254:1260  _pause */\n      tag_164\n        /* \"staking.sol\":1254:1262  _pause() */\n      jump\t// in\n        /* \"staking.sol\":4889:5025  function withdrawTokens() external onlyOwner {... */\n    tag_63:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_168:\n        /* \"staking.sol\":4944:4957  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":4979:5017  acceptedToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"staking.sol\":5011:5015  this */\n      address\n        /* \"staking.sol\":4979:5017  acceptedToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2431:2482   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4944:4957  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":4944:4966  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"staking.sol\":4967:4977  msg.sender */\n      caller\n      swap1\n        /* \"staking.sol\":4944:4957  acceptedToken */\n      dup4\n      swap1\n        /* \"staking.sol\":4979:5002  acceptedToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2404:2422   */\n      0x24\n      add\n        /* \"staking.sol\":4979:5017  acceptedToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"staking.sol\":4944:5018  acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this))) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3423:3455   */\n      swap1\n      swap3\n      and\n        /* \"staking.sol\":4944:5018  acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this))) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3405:3456   */\n      mstore\n        /* \"#utility.yul\":3472:3490   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3465:3499   */\n      mstore\n        /* \"#utility.yul\":3378:3396   */\n      0x44\n      add\n        /* \"staking.sol\":4944:5018  acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this))) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_181\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_181:\n      pop\n        /* \"staking.sol\":4889:5025  function withdrawTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":3062:3500  function compound (uint256 _level) external{... */\n    tag_70:\n        /* \"staking.sol\":3136:3146  msg.sender */\n      caller\n        /* \"staking.sol\":3115:3133  address _msgSender */\n      0x00\n        /* \"staking.sol\":3164:3192  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":3164:3180  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3164:3192  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3164:3200  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":3164:3208  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":3156:3234  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6291:6293   */\n      0x20\n        /* \"staking.sol\":3156:3234  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6273:6294   */\n      mstore\n        /* \"#utility.yul\":6330:6332   */\n      0x11\n        /* \"#utility.yul\":6310:6328   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6303:6333   */\n      mstore\n      shl(0x7a, 0x139bc81858dd1a5d994819195c1bdcda5d)\n        /* \"#utility.yul\":6349:6367   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6342:6389   */\n      mstore\n        /* \"#utility.yul\":6406:6424   */\n      0x64\n      add\n        /* \"staking.sol\":3156:3234  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_96\n        /* \"#utility.yul\":6089:6430   */\n      jump\n        /* \"staking.sol\":3156:3234  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n    tag_184:\n        /* \"staking.sol\":3245:3260  uint256 rewards */\n      0x00\n        /* \"staking.sol\":3263:3299  calculateRewards(_msgSender, _level) */\n      tag_186\n        /* \"staking.sol\":3280:3290  _msgSender */\n      dup3\n        /* \"staking.sol\":3292:3298  _level */\n      dup5\n        /* \"staking.sol\":3263:3279  calculateRewards */\n      tag_73\n        /* \"staking.sol\":3263:3299  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_186:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3310:3338  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3310:3326  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3310:3338  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3310:3346  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":3310:3365  userLevelDeposit[_msgSender][_level].balance += rewards */\n      dup1\n      sload\n        /* \"staking.sol\":3245:3299  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"staking.sol\":3310:3346  userLevelDeposit[_msgSender][_level] */\n      swap1\n      swap2\n        /* \"staking.sol\":3310:3338  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":3310:3365  userLevelDeposit[_msgSender][_level].balance += rewards */\n      tag_187\n      swap1\n        /* \"staking.sol\":3245:3299  uint256 rewards = calculateRewards(_msgSender, _level) */\n      dup5\n      swap1\n        /* \"staking.sol\":3310:3365  userLevelDeposit[_msgSender][_level].balance += rewards */\n      tag_132\n      jump\t// in\n    tag_187:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3375:3403  userLevelDeposit[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3375:3391  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3375:3403  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":3375:3411  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":3424:3439  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3375:3421  userLevelDeposit[_msgSender][_level].lastClaim */\n      swap2\n      add\n        /* \"staking.sol\":3375:3439  userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp */\n      sstore\n        /* \"staking.sol\":3455:3493  Compound (_msgSender, _level, rewards) */\n      mload\n      0x0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d186873\n      swap1\n      tag_111\n      swap1\n        /* \"staking.sol\":3392:3402  _msgSender */\n      dup5\n      swap1\n        /* \"staking.sol\":3404:3410  _level */\n      dup7\n      swap1\n        /* \"staking.sol\":3485:3492  rewards */\n      dup6\n      swap1\n        /* \"staking.sol\":3455:3493  Compound (_msgSender, _level, rewards) */\n      tag_139\n      jump\t// in\n        /* \"staking.sol\":3506:3971  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3642:3665  userLevelDeposit[_user] */\n      dup3\n      and\n        /* \"staking.sol\":3585:3592  uint256 */\n      0x00\n        /* \"staking.sol\":3642:3665  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3642:3658  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3642:3665  userLevelDeposit[_user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":3642:3673  userLevelDeposit[_user][_level] */\n      dup6\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      dup3\n      keccak256\n        /* \"staking.sol\":3642:3683  userLevelDeposit[_user][_level].lastClaim */\n      add\n      sload\n        /* \"staking.sol\":3585:3592  uint256 */\n      dup2\n      swap1\n        /* \"staking.sol\":3624:3683  block.timestamp - userLevelDeposit[_user][_level].lastClaim */\n      tag_190\n      swap1\n        /* \"staking.sol\":3624:3639  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3624:3683  block.timestamp - userLevelDeposit[_user][_level].lastClaim */\n      tag_130\n      jump\t// in\n    tag_190:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3711:3734  userLevelDeposit[_user] */\n      dup6\n      and\n        /* \"staking.sol\":3693:3708  uint256 balance */\n      0x00\n        /* \"staking.sol\":3711:3734  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3711:3727  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":3711:3734  userLevelDeposit[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3711:3742  userLevelDeposit[_user][_level] */\n      dup8\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3711:3750  userLevelDeposit[_user][_level].balance */\n      sload\n        /* \"staking.sol\":3775:3784  levelInfo */\n      0x03\n        /* \"staking.sol\":3775:3792  levelInfo[_level] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"staking.sol\":3775:3796  levelInfo[_level].APY */\n      sload\n        /* \"staking.sol\":3603:3683  uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].lastClaim */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":3711:3750  userLevelDeposit[_user][_level].balance */\n      swap2\n        /* \"staking.sol\":3775:3796  levelInfo[_level].APY */\n      swap1\n        /* \"staking.sol\":3862:3870  365 days */\n      0x01e13380\n        /* \"staking.sol\":3853:3858  10000 */\n      0x2710\n        /* \"staking.sol\":3836:3849  balance * APY */\n      tag_191\n        /* \"staking.sol\":3775:3796  levelInfo[_level].APY */\n      dup5\n        /* \"staking.sol\":3711:3750  userLevelDeposit[_user][_level].balance */\n      dup7\n        /* \"staking.sol\":3836:3849  balance * APY */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"staking.sol\":3835:3858  (balance * APY) / 10000 */\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"staking.sol\":3834:3870  ((balance * APY) / 10000) / 365 days */\n      tag_195\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_195:\n        /* \"staking.sol\":3807:3870  uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days */\n      swap1\n      pop\n        /* \"staking.sol\":3880:3901  uint256 rewardsEarned */\n      0x00\n        /* \"staking.sol\":3904:3933  timeStaked * rewardsPerSecond */\n      tag_196\n        /* \"staking.sol\":3807:3870  uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days */\n      dup3\n        /* \"staking.sol\":3904:3914  timeStaked */\n      dup7\n        /* \"staking.sol\":3904:3933  timeStaked * rewardsPerSecond */\n      tag_192\n      jump\t// in\n    tag_196:\n        /* \"staking.sol\":3880:3933  uint256 rewardsEarned = timeStaked * rewardsPerSecond */\n      swap9\n        /* \"staking.sol\":3506:3971  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":1350:2055  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5585:5587   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5567:5588   */\n      mstore\n        /* \"#utility.yul\":5624:5626   */\n      0x10\n        /* \"#utility.yul\":5604:5622   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5597:5627   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5643:5661   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5636:5682   */\n      mstore\n        /* \"#utility.yul\":5699:5717   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_96\n        /* \"#utility.yul\":5383:5723   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_199:\n        /* \"staking.sol\":1481:1494  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":1481:1543  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"staking.sol\":1453:1463  msg.sender */\n      caller\n        /* \"staking.sol\":1481:1543  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2733:2767   */\n      dup2\n      swap1\n      mstore\n        /* \"staking.sol\":1528:1532  this */\n      address\n        /* \"#utility.yul\":2783:2801   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2776:2819   */\n      mstore\n        /* \"#utility.yul\":2835:2853   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2828:2862   */\n      dup6\n      swap1\n      mstore\n        /* \"staking.sol\":1453:1463  msg.sender */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1481:1494  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":1481:1507  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2668:2686   */\n      0x64\n      add\n        /* \"staking.sol\":1481:1543  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_205\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_205:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_208:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1557:1585  userLevelDeposit[_msgSender] */\n      dup2\n      and\n        /* \"staking.sol\":1604:1605  0 */\n      0x00\n        /* \"staking.sol\":1557:1585  userLevelDeposit[_msgSender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1557:1573  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1557:1585  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":1557:1593  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":1557:1601  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":1557:1605  userLevelDeposit[_msgSender][_level].balance > 0 */\n      iszero\n        /* \"staking.sol\":1554:1678  if(userLevelDeposit[_msgSender][_level].balance > 0){... */\n      tag_209\n      jumpi\n        /* \"staking.sol\":1631:1667  calculateRewards(_msgSender, _level) */\n      tag_210\n        /* \"staking.sol\":1648:1658  _msgSender */\n      dup2\n        /* \"staking.sol\":1660:1666  _level */\n      dup4\n        /* \"staking.sol\":1631:1647  calculateRewards */\n      tag_73\n        /* \"staking.sol\":1631:1667  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_210:\n        /* \"staking.sol\":1620:1667  _amount += calculateRewards(_msgSender, _level) */\n      tag_211\n      swap1\n      dup5\n      tag_132\n      jump\t// in\n    tag_211:\n      swap3\n      pop\n        /* \"staking.sol\":1554:1678  if(userLevelDeposit[_msgSender][_level].balance > 0){... */\n    tag_209:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1688:1716  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1688:1704  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1688:1716  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":1688:1724  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":1688:1743  userLevelDeposit[_msgSender][_level].balance += _amount */\n      dup1\n      sload\n        /* \"staking.sol\":1736:1743  _amount */\n      dup6\n      swap3\n        /* \"staking.sol\":1688:1716  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":1688:1743  userLevelDeposit[_msgSender][_level].balance += _amount */\n      tag_212\n      swap1\n        /* \"staking.sol\":1736:1743  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":1688:1743  userLevelDeposit[_msgSender][_level].balance += _amount */\n      tag_132\n      jump\t// in\n    tag_212:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1753:1781  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1753:1769  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1753:1781  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":1753:1789  userLevelDeposit[_msgSender][_level] */\n      dup7\n      dup6\n      mstore\n      dup3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":1800:1815  block.timestamp */\n      timestamp\n        /* \"staking.sol\":1753:1797  userLevelDeposit[_msgSender][_level].started */\n      0x01\n      dup1\n      dup4\n      add\n        /* \"staking.sol\":1753:1815  userLevelDeposit[_msgSender][_level].started = block.timestamp */\n      dup3\n      swap1\n      sstore\n        /* \"staking.sol\":1825:1871  userLevelDeposit[_msgSender][_level].lastClaim */\n      swap2\n      swap1\n      swap5\n      add\n        /* \"staking.sol\":1825:1889  userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp */\n      dup5\n      swap1\n      sstore\n        /* \"staking.sol\":1967:1976  levelInfo */\n      0x03\n        /* \"staking.sol\":1967:1984  levelInfo[_level] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"staking.sol\":1967:1995  levelInfo[_level].lockPeriod */\n      swap1\n      swap2\n      add\n      sload\n        /* \"staking.sol\":1949:1995  block.timestamp + levelInfo[_level].lockPeriod */\n      tag_213\n      swap2\n      tag_132\n      jump\t// in\n    tag_213:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":1899:1927  userLevelDeposit[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":1899:1915  userLevelDeposit */\n      0x02\n        /* \"staking.sol\":1899:1927  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":1899:1935  userLevelDeposit[_msgSender][_level] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"staking.sol\":1899:1946  userLevelDeposit[_msgSender][_level].unlockTime */\n      0x03\n      add\n        /* \"staking.sol\":1899:1995  userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":2011:2048  Deposit (_msgSender, _level, _amount) */\n      mload\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n      tag_111\n      swap1\n        /* \"staking.sol\":1916:1926  _msgSender */\n      dup4\n      swap1\n        /* \"staking.sol\":1928:1934  _level */\n      dup6\n      swap1\n        /* \"staking.sol\":2040:2047  _amount */\n      dup8\n      swap1\n        /* \"staking.sol\":2011:2048  Deposit (_msgSender, _level, _amount) */\n      tag_139\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_223\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4825:4827   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4807:4828   */\n      mstore\n        /* \"#utility.yul\":4864:4866   */\n      0x26\n        /* \"#utility.yul\":4844:4862   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4837:4867   */\n      mstore\n        /* \"#utility.yul\":4903:4937   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4883:4901   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4876:4938   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4954:4972   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4947:4983   */\n      mstore\n        /* \"#utility.yul\":5000:5019   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_96\n        /* \"#utility.yul\":4623:5025   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_181\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4476:4478   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4458:4479   */\n      mstore\n        /* \"#utility.yul\":4515:4517   */\n      0x14\n        /* \"#utility.yul\":4495:4513   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4488:4518   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":4534:4552   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4527:4577   */\n      mstore\n        /* \"#utility.yul\":4594:4612   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_96\n        /* \"#utility.yul\":4274:4618   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n    tag_233:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2178:2183  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2183  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n    tag_237:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2449:2481   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2431:2482   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2419:2421   */\n      0x20\n        /* \"#utility.yul\":2404:2422   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5585:5587   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5567:5588   */\n      mstore\n        /* \"#utility.yul\":5624:5626   */\n      0x10\n        /* \"#utility.yul\":5604:5622   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5597:5627   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5643:5661   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5636:5682   */\n      mstore\n        /* \"#utility.yul\":5699:5717   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_96\n        /* \"#utility.yul\":5383:5723   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_242:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1929  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      tag_237\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_248:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_250:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_54:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_252:\n        /* \"#utility.yul\":343:372   */\n      tag_253\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_248\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:637   */\n    tag_26:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_255:\n        /* \"#utility.yul\":551:580   */\n      tag_256\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_248\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":541:580   */\n      swap5\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":383:637   */\n      jump\t// out\n        /* \"#utility.yul\":642:919   */\n    tag_110:\n        /* \"#utility.yul\":709:715   */\n      0x00\n        /* \"#utility.yul\":762:764   */\n      0x20\n        /* \"#utility.yul\":750:759   */\n      dup3\n        /* \"#utility.yul\":741:748   */\n      dup5\n        /* \"#utility.yul\":737:760   */\n      sub\n        /* \"#utility.yul\":733:765   */\n      slt\n        /* \"#utility.yul\":730:782   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":778:779   */\n      0x00\n        /* \"#utility.yul\":775:776   */\n      dup1\n        /* \"#utility.yul\":768:780   */\n      revert\n        /* \"#utility.yul\":730:782   */\n    tag_258:\n        /* \"#utility.yul\":810:819   */\n      dup2\n        /* \"#utility.yul\":804:820   */\n      mload\n        /* \"#utility.yul\":863:868   */\n      dup1\n        /* \"#utility.yul\":856:869   */\n      iszero\n        /* \"#utility.yul\":849:870   */\n      iszero\n        /* \"#utility.yul\":842:847   */\n      dup2\n        /* \"#utility.yul\":839:871   */\n      eq\n        /* \"#utility.yul\":829:889   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":885:886   */\n      0x00\n        /* \"#utility.yul\":882:883   */\n      dup1\n        /* \"#utility.yul\":875:887   */\n      revert\n        /* \"#utility.yul\":924:1104   */\n    tag_36:\n        /* \"#utility.yul\":983:989   */\n      0x00\n        /* \"#utility.yul\":1036:1038   */\n      0x20\n        /* \"#utility.yul\":1024:1033   */\n      dup3\n        /* \"#utility.yul\":1015:1022   */\n      dup5\n        /* \"#utility.yul\":1011:1034   */\n      sub\n        /* \"#utility.yul\":1007:1039   */\n      slt\n        /* \"#utility.yul\":1004:1056   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":1052:1053   */\n      0x00\n        /* \"#utility.yul\":1049:1050   */\n      dup1\n        /* \"#utility.yul\":1042:1054   */\n      revert\n        /* \"#utility.yul\":1004:1056   */\n    tag_261:\n      pop\n        /* \"#utility.yul\":1075:1098   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":924:1104   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1293   */\n    tag_176:\n        /* \"#utility.yul\":1179:1185   */\n      0x00\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1220:1229   */\n      dup3\n        /* \"#utility.yul\":1211:1218   */\n      dup5\n        /* \"#utility.yul\":1207:1230   */\n      sub\n        /* \"#utility.yul\":1203:1235   */\n      slt\n        /* \"#utility.yul\":1200:1252   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":1248:1249   */\n      0x00\n        /* \"#utility.yul\":1245:1246   */\n      dup1\n        /* \"#utility.yul\":1238:1250   */\n      revert\n        /* \"#utility.yul\":1200:1252   */\n    tag_263:\n      pop\n        /* \"#utility.yul\":1271:1287   */\n      mload\n      swap2\n        /* \"#utility.yul\":1109:1293   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1298:1546   */\n    tag_42:\n        /* \"#utility.yul\":1366:1372   */\n      0x00\n        /* \"#utility.yul\":1374:1380   */\n      dup1\n        /* \"#utility.yul\":1427:1429   */\n      0x40\n        /* \"#utility.yul\":1415:1424   */\n      dup4\n        /* \"#utility.yul\":1406:1413   */\n      dup6\n        /* \"#utility.yul\":1402:1425   */\n      sub\n        /* \"#utility.yul\":1398:1430   */\n      slt\n        /* \"#utility.yul\":1395:1447   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":1443:1444   */\n      0x00\n        /* \"#utility.yul\":1440:1441   */\n      dup1\n        /* \"#utility.yul\":1433:1445   */\n      revert\n        /* \"#utility.yul\":1395:1447   */\n    tag_265:\n      pop\n      pop\n        /* \"#utility.yul\":1466:1489   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1536:1538   */\n      0x20\n        /* \"#utility.yul\":1521:1539   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1508:1540   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1298:1546   */\n      jump\t// out\n        /* \"#utility.yul\":1551:1867   */\n    tag_32:\n        /* \"#utility.yul\":1628:1634   */\n      0x00\n        /* \"#utility.yul\":1636:1642   */\n      dup1\n        /* \"#utility.yul\":1644:1650   */\n      0x00\n        /* \"#utility.yul\":1697:1699   */\n      0x60\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1676:1683   */\n      dup7\n        /* \"#utility.yul\":1672:1695   */\n      sub\n        /* \"#utility.yul\":1668:1700   */\n      slt\n        /* \"#utility.yul\":1665:1717   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1665:1717   */\n    tag_267:\n      pop\n      pop\n        /* \"#utility.yul\":1736:1759   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":1806:1808   */\n      0x20\n        /* \"#utility.yul\":1791:1809   */\n      dup4\n      add\n        /* \"#utility.yul\":1778:1810   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1857:1859   */\n      0x40\n        /* \"#utility.yul\":1842:1860   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1829:1861   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1551:1867   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2873:3226   */\n    tag_139:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3101:3133   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3083:3134   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3165:3167   */\n      0x20\n        /* \"#utility.yul\":3150:3168   */\n      dup4\n      add\n        /* \"#utility.yul\":3143:3177   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3208:3210   */\n      0x40\n        /* \"#utility.yul\":3193:3211   */\n      dup3\n      add\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3071:3073   */\n      0x60\n        /* \"#utility.yul\":3056:3074   */\n      add\n      swap1\n        /* \"#utility.yul\":2873:3226   */\n      jump\t// out\n        /* \"#utility.yul\":5728:6084   */\n    tag_97:\n        /* \"#utility.yul\":5930:5932   */\n      0x20\n        /* \"#utility.yul\":5912:5933   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5949:5967   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5942:5972   */\n      mstore\n        /* \"#utility.yul\":6008:6042   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6003:6005   */\n      0x40\n        /* \"#utility.yul\":5988:6006   */\n      dup3\n      add\n        /* \"#utility.yul\":5981:6043   */\n      mstore\n        /* \"#utility.yul\":6075:6077   */\n      0x60\n        /* \"#utility.yul\":6060:6078   */\n      add\n      swap1\n        /* \"#utility.yul\":5728:6084   */\n      jump\t// out\n        /* \"#utility.yul\":8839:8967   */\n    tag_132:\n        /* \"#utility.yul\":8879:8882   */\n      0x00\n        /* \"#utility.yul\":8910:8911   */\n      dup3\n        /* \"#utility.yul\":8906:8912   */\n      not\n        /* \"#utility.yul\":8903:8904   */\n      dup3\n        /* \"#utility.yul\":8900:8913   */\n      gt\n        /* \"#utility.yul\":8897:8936   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":8916:8934   */\n      tag_299\n      tag_300\n      jump\t// in\n    tag_299:\n      pop\n        /* \"#utility.yul\":8952:8961   */\n      add\n      swap1\n        /* \"#utility.yul\":8839:8967   */\n      jump\t// out\n        /* \"#utility.yul\":8972:9189   */\n    tag_194:\n        /* \"#utility.yul\":9012:9013   */\n      0x00\n        /* \"#utility.yul\":9038:9039   */\n      dup3\n        /* \"#utility.yul\":9028:9160   */\n      tag_302\n      jumpi\n        /* \"#utility.yul\":9082:9092   */\n      0x4e487b71\n        /* \"#utility.yul\":9077:9080   */\n      0xe0\n        /* \"#utility.yul\":9073:9093   */\n      shl\n        /* \"#utility.yul\":9070:9071   */\n      0x00\n        /* \"#utility.yul\":9063:9094   */\n      mstore\n        /* \"#utility.yul\":9117:9121   */\n      0x12\n        /* \"#utility.yul\":9114:9115   */\n      0x04\n        /* \"#utility.yul\":9107:9122   */\n      mstore\n        /* \"#utility.yul\":9145:9149   */\n      0x24\n        /* \"#utility.yul\":9142:9143   */\n      0x00\n        /* \"#utility.yul\":9135:9150   */\n      revert\n        /* \"#utility.yul\":9028:9160   */\n    tag_302:\n      pop\n        /* \"#utility.yul\":9174:9183   */\n      div\n      swap1\n        /* \"#utility.yul\":8972:9189   */\n      jump\t// out\n        /* \"#utility.yul\":9194:9362   */\n    tag_192:\n        /* \"#utility.yul\":9234:9241   */\n      0x00\n        /* \"#utility.yul\":9300:9301   */\n      dup2\n        /* \"#utility.yul\":9296:9297   */\n      0x00\n        /* \"#utility.yul\":9292:9298   */\n      not\n        /* \"#utility.yul\":9288:9302   */\n      div\n        /* \"#utility.yul\":9285:9286   */\n      dup4\n        /* \"#utility.yul\":9282:9303   */\n      gt\n        /* \"#utility.yul\":9277:9278   */\n      dup3\n        /* \"#utility.yul\":9270:9279   */\n      iszero\n        /* \"#utility.yul\":9263:9280   */\n      iszero\n        /* \"#utility.yul\":9259:9304   */\n      and\n        /* \"#utility.yul\":9256:9327   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":9307:9325   */\n      tag_305\n      tag_300\n      jump\t// in\n    tag_305:\n      pop\n        /* \"#utility.yul\":9347:9356   */\n      mul\n      swap1\n        /* \"#utility.yul\":9194:9362   */\n      jump\t// out\n        /* \"#utility.yul\":9367:9492   */\n    tag_130:\n        /* \"#utility.yul\":9407:9411   */\n      0x00\n        /* \"#utility.yul\":9435:9436   */\n      dup3\n        /* \"#utility.yul\":9432:9433   */\n      dup3\n        /* \"#utility.yul\":9429:9437   */\n      lt\n        /* \"#utility.yul\":9426:9460   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":9440:9458   */\n      tag_308\n      tag_300\n      jump\t// in\n    tag_308:\n      pop\n        /* \"#utility.yul\":9477:9486   */\n      sub\n      swap1\n        /* \"#utility.yul\":9367:9492   */\n      jump\t// out\n        /* \"#utility.yul\":9497:9624   */\n    tag_300:\n        /* \"#utility.yul\":9558:9568   */\n      0x4e487b71\n        /* \"#utility.yul\":9553:9556   */\n      0xe0\n        /* \"#utility.yul\":9549:9569   */\n      shl\n        /* \"#utility.yul\":9546:9547   */\n      0x00\n        /* \"#utility.yul\":9539:9570   */\n      mstore\n        /* \"#utility.yul\":9589:9593   */\n      0x11\n        /* \"#utility.yul\":9586:9587   */\n      0x04\n        /* \"#utility.yul\":9579:9594   */\n      mstore\n        /* \"#utility.yul\":9613:9617   */\n      0x24\n        /* \"#utility.yul\":9610:9611   */\n      0x00\n        /* \"#utility.yul\":9603:9618   */\n      revert\n\n    auxdata: 0xa26469706673582212208afaca1eef5f9aaf8990806b5b73ad646923e7fcd31ace5439d2ffdbab3b049464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_378": {
									"entryPoint": null,
									"id": 378,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 106,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1457 CODESIZE SUB DUP1 PUSH2 0x1457 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xBA JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x6A JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xEA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x135E DUP1 PUSH2 0xF9 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBEB8314C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xE788CEE5 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xEDF501AD EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x259EE752 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x32E96203 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0x192 PUSH2 0x66C JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1D5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP10 ADD MLOAD DUP2 DUP4 ADD MSTORE DUP9 DUP4 ADD MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x60 SWAP9 DUP10 ADD MLOAD DUP10 DUP4 ADD MSTORE DUP8 MLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP1 DUP9 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP8 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE SWAP7 DUP9 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x100 DUP3 ADD MSTORE SWAP6 DUP6 ADD MLOAD PUSH2 0x120 DUP8 ADD MSTORE DUP5 ADD MLOAD PUSH2 0x140 DUP7 ADD MSTORE SWAP5 SWAP1 SWAP3 ADD MLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1E0 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x192 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x192 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0x192 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF SLOAD DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92F00 SLOAD DUP2 DUP5 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054C SLOAD DUP2 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054D SLOAD DUP2 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP6 MSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4D SLOAD DUP2 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4E SLOAD DUP2 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 MLOAD SWAP5 MLOAD DUP6 MSTORE SWAP3 MLOAD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE MLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 ADD SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP3 DUP5 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP11 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x65F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH2 0x69E PUSH2 0xFCD JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08195B9BDD59DA0819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 DUP3 DUP5 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x7B9 SWAP1 DUP5 SWAP1 PUSH2 0x12FB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0x7DA DUP5 DUP9 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x834 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH2 0x88D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x8C6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x8F1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x91C PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE DUP4 DUP9 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x3 SWAP4 DUP5 ADD SLOAD PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP11 MSTORE DUP6 DUP9 MSTORE DUP7 DUP11 KECCAK256 DUP8 MLOAD DUP1 DUP6 ADD DUP10 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP5 ADD SLOAD DUP2 DUP12 ADD MSTORE DUP2 DUP12 ADD SLOAD DUP2 DUP11 ADD MSTORE SWAP1 DUP7 ADD SLOAD DUP2 DUP4 ADD MSTORE DUP10 DUP12 MSTORE SWAP6 DUP9 MSTORE DUP7 DUP11 KECCAK256 DUP8 MLOAD SWAP4 DUP5 ADD DUP9 MSTORE DUP1 SLOAD DUP5 MSTORE SWAP2 DUP3 ADD SLOAD SWAP8 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP7 DUP8 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP1 DUP1 PUSH2 0x9E2 DUP8 DUP3 PUSH2 0xC9C JUMP JUMPDEST SWAP3 POP PUSH2 0x9EF DUP8 PUSH1 0x1 PUSH2 0xC9C JUMP JUMPDEST SWAP2 POP PUSH2 0x9FC DUP8 PUSH1 0x2 PUSH2 0xC9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH2 0x69E PUSH1 0x0 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH2 0x69E PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC04 DUP3 DUP5 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC3C SWAP1 DUP5 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE MLOAD PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 SWAP1 PUSH2 0x65F SWAP1 DUP5 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH2 0xCCD SWAP1 TIMESTAMP PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0xD10 DUP5 DUP7 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD32 DUP3 DUP7 PUSH2 0x12DC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xE57 JUMPI PUSH2 0xE4A DUP2 DUP4 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0xE54 SWAP1 DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xE8A SWAP1 DUP5 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD DUP3 SWAP1 SSTORE SWAP2 SWAP1 SWAP5 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH2 0xED7 SWAP2 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x65F SWAP1 DUP4 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH2 0xB9A DUP2 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1107 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x104D CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1179 DUP3 PUSH2 0x1142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x119C DUP4 PUSH2 0x1142 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x12B5 JUMPI PUSH2 0x12B5 PUSH2 0x1312 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F6 PUSH2 0x1312 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x130D JUMPI PUSH2 0x130D PUSH2 0x1312 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 STATICCALL 0xCA 0x1E 0xEF 0x5F SWAP11 0xAF DUP10 SWAP1 DUP1 PUSH12 0x5B73AD646923E7FCD31ACE54 CODECOPY 0xD2 SELFDESTRUCT 0xDB 0xAB EXTCODESIZE DIV SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "224:4803:4:-:0;;;1082:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:3;921:18:0;:32::i;:::-;991:5:1;981:15;;-1:-1:-1;;;;981:15:1;;;-1:-1:-1;1121:30:4;;-1:-1:-1;;;;;;1121:30:4;-1:-1:-1;;;;;1121:30:4;;;;;;;;;;224:4803;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;224:4803:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_179": {
									"entryPoint": 4282,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 4202,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_195": {
									"entryPoint": 4045,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptedToken_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateRewards_724": {
									"entryPoint": 3228,
									"id": 724,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@changeLevelValues_847": {
									"entryPoint": 1232,
									"id": 847,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@claim_611": {
									"entryPoint": 1307,
									"id": 611,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@compound_666": {
									"entryPoint": 2973,
									"id": 666,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_489": {
									"entryPoint": 3390,
									"id": 489,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getLevelsInfo_821": {
									"entryPoint": null,
									"id": 821,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@getUserInfo_790": {
									"entryPoint": 2203,
									"id": 790,
									"parameterSlots": 1,
									"returnSlots": 6
								},
								"@levelInfo_334": {
									"entryPoint": null,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_387": {
									"entryPoint": 2619,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2567,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 3893,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_396": {
									"entryPoint": 1644,
									"id": 396,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userLevelDeposit_329": {
									"entryPoint": null,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawTokens_867": {
									"entryPoint": 2669,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_558": {
									"entryPoint": 1696,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_struct_Level": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_User": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4684,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr__to_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9626:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:5"
															},
															"nodeType": "YulIf",
															"src": "272:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:5",
														"type": ""
													}
												],
												"src": "192:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:5"
															},
															"nodeType": "YulIf",
															"src": "480:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:5",
														"type": ""
													}
												],
												"src": "383:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "720:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "766:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "775:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "778:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "768:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "768:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "741:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "750:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "762:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:32:5"
															},
															"nodeType": "YulIf",
															"src": "730:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "791:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "810:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "804:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "795:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "873:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "885:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "875:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "875:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "842:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "863:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "856:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "856:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "849:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "849:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "839:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:40:5"
															},
															"nodeType": "YulIf",
															"src": "829:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "898:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "908:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "686:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "697:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "709:6:5",
														"type": ""
													}
												],
												"src": "642:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1040:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1049:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1052:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1042:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1042:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1042:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1015:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1024:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1011:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1011:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1036:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1007:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:32:5"
															},
															"nodeType": "YulIf",
															"src": "1004:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1065:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1088:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1075:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1075:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1065:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "960:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "971:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "983:6:5",
														"type": ""
													}
												],
												"src": "924:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1236:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1245:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1248:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1238:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1238:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1238:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1211:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1203:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:32:5"
															},
															"nodeType": "YulIf",
															"src": "1200:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1261:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1277:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1271:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1271:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1261:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1156:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1167:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1179:6:5",
														"type": ""
													}
												],
												"src": "1109:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1385:161:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1431:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1440:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1443:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1433:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1433:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1415:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1402:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1398:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1398:32:5"
															},
															"nodeType": "YulIf",
															"src": "1395:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1456:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1479:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1466:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1498:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1508:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1498:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1343:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1354:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1366:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1374:6:5",
														"type": ""
													}
												],
												"src": "1298:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1655:212:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1676:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1672:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1697:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1668:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"nodeType": "YulIf",
															"src": "1665:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1726:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1736:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1726:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1768:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1795:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1806:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1791:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1778:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1778:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1768:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1819:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1846:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1857:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1829:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1605:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1616:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1628:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1636:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1644:6:5",
														"type": ""
													}
												],
												"src": "1551:316:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1921:97:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1938:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1949:5:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1943:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:12:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1931:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1931:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1981:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1998:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2005:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1994:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1994:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1988:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1988:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1965:47:5"
														}
													]
												},
												"name": "abi_encode_struct_Level",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1905:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1912:3:5",
														"type": ""
													}
												],
												"src": "1872:146:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2071:209:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2088:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2099:5:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2093:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2093:12:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2081:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2126:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2131:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2148:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2155:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2144:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2144:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2138:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2115:47:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2182:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2187:4:5",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2204:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2211:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2200:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2200:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2194:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2194:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2171:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2171:47:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2238:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2243:4:5",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2260:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2267:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2256:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2250:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2250:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2227:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2227:47:5"
														}
													]
												},
												"name": "abi_encode_struct_User",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2062:3:5",
														"type": ""
													}
												],
												"src": "2023:257:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2386:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2396:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2408:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2419:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2404:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2396:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2438:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2453:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2469:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2474:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2465:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2465:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2478:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2461:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2461:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2449:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2449:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2431:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2431:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2355:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2366:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2377:4:5",
														"type": ""
													}
												],
												"src": "2285:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2650:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2660:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2672:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2683:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2668:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2660:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2695:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2713:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2718:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2709:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2709:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2722:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2705:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2699:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2740:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2763:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2751:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2751:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2733:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2733:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2787:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2798:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2783:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2783:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2807:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2815:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2803:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2803:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2776:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2776:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2839:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2850:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2835:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2835:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2855:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2828:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2828:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2828:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2603:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2614:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2622:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2630:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2641:4:5",
														"type": ""
													}
												],
												"src": "2493:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3038:188:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3048:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3060:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3071:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3056:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3056:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3048:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3090:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3105:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3121:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3126:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3117:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3117:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3130:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3113:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3113:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3101:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3083:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3083:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3154:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3165:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3150:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3150:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3170:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3143:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3143:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3197:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3208:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3193:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3193:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3213:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2991:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3002:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3010:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3018:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3029:4:5",
														"type": ""
													}
												],
												"src": "2873:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3360:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3370:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3382:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3393:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3370:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3412:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3427:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3443:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3448:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3439:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3439:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3452:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3435:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3435:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3423:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3423:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3405:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3405:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3405:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3476:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3487:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3472:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3472:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3492:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3465:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3465:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3321:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3332:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3340:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3351:4:5",
														"type": ""
													}
												],
												"src": "3231:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3667:188:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3677:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3689:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3700:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3685:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3677:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3719:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3734:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3750:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3755:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3746:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3746:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3759:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3742:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3742:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3730:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3730:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3712:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3712:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3712:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3783:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3794:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3779:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3779:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3799:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3772:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3772:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3772:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3826:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3837:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3822:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3822:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3842:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3815:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3815:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3620:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3631:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3639:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3647:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3658:4:5",
														"type": ""
													}
												],
												"src": "3510:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3955:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3965:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3977:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3988:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3973:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3973:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3965:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4007:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4032:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4025:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4025:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4018:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4018:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4000:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4000:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4000:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3924:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3935:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3946:4:5",
														"type": ""
													}
												],
												"src": "3860:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4167:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4177:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4189:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4200:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4185:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4185:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4177:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4219:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4234:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4250:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4255:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4246:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4246:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4259:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4242:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4242:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4230:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4230:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4212:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4212:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4212:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4136:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4147:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4158:4:5",
														"type": ""
													}
												],
												"src": "4052:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4448:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4465:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4476:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4458:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4458:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4499:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4510:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4495:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4495:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4515:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4488:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4488:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4488:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4538:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4549:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4534:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4534:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4554:22:5",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4527:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4527:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4527:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4586:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4598:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4594:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4594:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4586:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4425:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4439:4:5",
														"type": ""
													}
												],
												"src": "4274:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4797:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4814:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4825:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4807:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4807:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4807:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4848:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4859:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4844:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4844:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4864:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4837:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4837:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4837:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4887:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4898:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4883:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4883:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4903:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4876:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4958:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4969:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4954:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4954:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4974:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4947:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4947:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4947:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4992:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5004:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5015:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5000:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5000:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4992:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4774:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4788:4:5",
														"type": ""
													}
												],
												"src": "4623:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5204:174:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5221:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5232:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5214:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5214:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5214:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5255:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5266:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5251:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5251:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5271:2:5",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5244:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5244:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5244:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5294:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5305:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5290:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5290:18:5"
																	},
																	{
																		"hexValue": "4465706f736974206e6f7420756e6c6f636b656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5310:26:5",
																		"type": "",
																		"value": "Deposit not unlocked yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5283:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5283:54:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5283:54:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5346:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5358:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5369:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5354:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5354:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5346:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5181:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5195:4:5",
														"type": ""
													}
												],
												"src": "5030:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5557:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5574:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5585:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5567:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5567:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5567:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5608:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5619:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5604:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5604:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5624:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5597:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5597:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5663:18:5",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5636:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5636:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5691:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5703:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5714:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5699:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5699:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5691:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5534:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5548:4:5",
														"type": ""
													}
												],
												"src": "5383:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5902:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5919:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5930:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5912:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5912:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5912:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5953:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5964:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5949:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5949:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5969:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5942:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5942:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5942:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5992:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6003:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5988:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5988:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6008:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5981:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5981:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5981:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6052:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6064:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6075:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6060:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6060:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6052:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5879:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5893:4:5",
														"type": ""
													}
												],
												"src": "5728:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6263:167:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6280:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6273:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6273:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6273:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6314:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6325:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6310:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6310:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6330:2:5",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6303:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6303:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6303:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6353:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6364:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6349:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6349:18:5"
																	},
																	{
																		"hexValue": "4e6f20616374697665206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6369:19:5",
																		"type": "",
																		"value": "No active deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6342:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6342:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6398:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6410:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6421:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6406:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6406:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6398:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6240:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6254:4:5",
														"type": ""
													}
												],
												"src": "6089:341:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6609:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6626:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6637:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6619:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6619:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6619:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6660:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6671:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6656:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6656:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6676:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6649:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6699:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6710:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6695:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6695:18:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6715:20:5",
																		"type": "",
																		"value": "Not enough deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6688:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6688:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6688:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6745:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6757:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6768:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6753:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6753:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6745:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6586:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6600:4:5",
														"type": ""
													}
												],
												"src": "6435:342:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7071:215:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7081:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7093:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7104:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7089:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7081:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7141:6:5"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7149:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "7117:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7117:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7117:42:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7192:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7204:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7215:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7200:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7200:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "7168:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7168:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7168:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7252:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7264:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7275:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7260:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7260:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "7228:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7228:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7228:52:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr__to_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7024:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7035:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7043:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7051:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7062:4:5",
														"type": ""
													}
												],
												"src": "6782:504:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7658:345:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7668:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7680:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7691:3:5",
																		"type": "",
																		"value": "480"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7676:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7676:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7668:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7727:6:5"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7735:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7704:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7704:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7704:41:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7777:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7789:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7800:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7785:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7785:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7754:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7754:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7754:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7837:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7849:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7860:3:5",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7845:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7845:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7814:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7814:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7814:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7885:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:3:5",
																				"type": "",
																				"value": "384"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7881:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7881:19:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7902:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7874:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7874:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7874:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7929:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7940:3:5",
																				"type": "",
																				"value": "416"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7925:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7925:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7946:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7918:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7918:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7918:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7973:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7984:3:5",
																				"type": "",
																				"value": "448"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7969:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7969:19:5"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "7990:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7962:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7962:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7587:9:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7598:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7606:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7614:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7622:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7630:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7638:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7649:4:5",
														"type": ""
													}
												],
												"src": "7291:712:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8109:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8119:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8131:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8142:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8127:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8119:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8161:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8172:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8154:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8154:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8154:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8078:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8089:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8100:4:5",
														"type": ""
													}
												],
												"src": "8008:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8319:119:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8329:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8341:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8352:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8337:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8337:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8329:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8371:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8382:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8364:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8364:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8364:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8409:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8420:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8405:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8405:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8425:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8398:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8398:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8398:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8280:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8291:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8299:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8310:4:5",
														"type": ""
													}
												],
												"src": "8190:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8628:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8638:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8650:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8661:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8646:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8638:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8681:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8692:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8674:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8674:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8674:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8719:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8730:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8715:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8715:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8735:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8708:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8708:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8708:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8762:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8773:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8758:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8758:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8778:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8751:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8751:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8805:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8816:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8801:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8801:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8821:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8794:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8794:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8794:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8573:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8584:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8592:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8600:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8608:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8619:4:5",
														"type": ""
													}
												],
												"src": "8443:391:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8887:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8914:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8916:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8916:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8916:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8903:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "8910:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8906:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8906:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8900:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8900:13:5"
															},
															"nodeType": "YulIf",
															"src": "8897:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8945:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8956:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8959:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8952:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "8945:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8870:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8873:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8879:3:5",
														"type": ""
													}
												],
												"src": "8839:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9018:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9049:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9070:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9077:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9082:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9073:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9073:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9063:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9063:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9063:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9114:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9117:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9107:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9107:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9107:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9142:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9145:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9135:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9135:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9135:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9038:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9031:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9031:9:5"
															},
															"nodeType": "YulIf",
															"src": "9028:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9169:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9178:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9181:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9174:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9174:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9169:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9003:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9006:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9012:1:5",
														"type": ""
													}
												],
												"src": "8972:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9246:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9305:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9307:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9307:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9307:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9277:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9270:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9270:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9263:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9263:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9285:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9296:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9292:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9292:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9300:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9288:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9288:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9282:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9282:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9259:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9259:45:5"
															},
															"nodeType": "YulIf",
															"src": "9256:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9336:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9351:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9354:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9347:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9347:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9336:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9225:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9228:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9234:7:5",
														"type": ""
													}
												],
												"src": "9194:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9416:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9438:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9440:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9440:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9440:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9432:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9435:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9429:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9429:8:5"
															},
															"nodeType": "YulIf",
															"src": "9426:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9469:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9481:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9484:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9477:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9477:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9469:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9398:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9401:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9407:4:5",
														"type": ""
													}
												],
												"src": "9367:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9529:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9546:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9553:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9558:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9549:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9539:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9539:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9539:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9586:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9589:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9579:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9579:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9579:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9610:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9613:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9603:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9603:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9603:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9497:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_struct_Level(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_struct_User(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Deposit not unlocked yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No active deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not enough deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr__to_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr_t_struct$_Level_$322_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        abi_encode_struct_Level(value0, headStart)\n        abi_encode_struct_Level(value1, add(headStart, 64))\n        abi_encode_struct_Level(value2, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_uint256_t_uint256_t_uint256__to_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_struct$_User_$317_memory_ptr_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 480)\n        abi_encode_struct_User(value0, headStart)\n        abi_encode_struct_User(value1, add(headStart, 128))\n        abi_encode_struct_User(value2, add(headStart, 256))\n        mstore(add(headStart, 384), value3)\n        mstore(add(headStart, 416), value4)\n        mstore(add(headStart, 448), value5)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101165760003560e01c80638456cb59116100a2578063beb8314c11610071578063beb8314c146102e3578063e2bbb15814610304578063e788cee514610317578063edf501ad14610481578063f2fde38b146104bd57600080fd5b80638456cb59146102af5780638d8f2adb146102b75780638da5cb5b146102bf578063aa5f7e26146102d057600080fd5b8063441a3e70116100e9578063441a3e70146101af578063451c3d80146101c25780635c975abb146101ed5780636386c1c71461020a578063715018a6146102a757600080fd5b8063259ee7521461011b57806332e962031461017f578063379607f5146101945780633f4ba83a146101a7575b600080fd5b61015a610129366004611180565b6002602081815260009384526040808520909152918352912080546001820154928201546003909201549092919084565b6040805194855260208501939093529183015260608201526080015b60405180910390f35b61019261018d366004611220565b6104d0565b005b6101926101a23660046111cc565b61051b565b61019261066c565b6101926101bd3660046111fe565b6106a0565b6001546101d5906001600160a01b031681565b6040516001600160a01b039091168152602001610176565b600054600160a01b900460ff166040519015158152602001610176565b61021d61021836600461115e565b61089b565b604080518751815260208089015181830152888301518284015260609889015189830152875160808301528088015160a08301528783015160c08301529688015160e082015285516101008201529585015161012087015284015161014086015294909201516101608401526101808301526101a08201526101c08101919091526101e001610176565b610192610a07565b610192610a3b565b610192610a6d565b6000546001600160a01b03166101d5565b6101926102de3660046111cc565b610b9d565b6102f66102f1366004611180565b610c9c565b604051908152602001610176565b6101926103123660046111fe565b610d3e565b60408051808201825260008082526020918201819052825180840184528181528201819052825180840184528181528201819052825180840184527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff5481527f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92f0054818401908152845180860186527fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054c5481527fa15bc60c955c405d20d9149c709e2460f1c2d9a497496a7f46004d1772c3054d54818601908152600290945260038552855180870187527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4d5481527fc3a24b0501bd2c13a7e57f2db4369ec4c223447539fc0724a9d55ac4a06ebd4e5481870190815287519451855292519584019590955251948201949094529051606082015290516080820152905160a082015260c001610176565b6104a861048f3660046111cc565b6003602052600090815260409020805460019091015482565b60408051928352602083019190915201610176565b6101926104cb36600461115e565b610f35565b6000546001600160a01b031633146105035760405162461bcd60e51b81526004016104fa9061126d565b60405180910390fd5b60009283526003602052604090922090815560010155565b3360008181526002602090815260408083208584529091529020546105765760405162461bcd60e51b8152602060048201526011602482015270139bc81858dd1a5d994819195c1bdcda5d607a1b60448201526064016104fa565b60006105828284610c9c565b6001600160a01b0383811660008181526002602081815260408084208a85529091529182902042910155600154905163a9059cbb60e01b815260048101929092526024820184905292935091169063a9059cbb90604401602060405180830381600087803b1580156105f357600080fd5b505af1158015610607573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062b91906111aa565b507f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf782848360405161065f9392919061124c565b60405180910390a1505050565b6000546001600160a01b031633146106965760405162461bcd60e51b81526004016104fa9061126d565b61069e610fcd565b565b3360008181526002602090815260408083208584529091529020548311156106ff5760405162461bcd60e51b8152602060048201526012602482015271139bdd08195b9bdd59da0819195c1bdcda5d60721b60448201526064016104fa565b6001600160a01b03811660009081526002602090815260408083208584529091529020600301544210156107755760405162461bcd60e51b815260206004820152601860248201527f4465706f736974206e6f7420756e6c6f636b656420796574000000000000000060448201526064016104fa565b60006107818284610c9c565b6001600160a01b03831660009081526002602090815260408083208784529091528120805492935086929091906107b99084906112fb565b90915550506001546001600160a01b031663a9059cbb836107da84886112a2565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561082057600080fd5b505af1158015610834573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085891906111aa565b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688260008660405161088d9392919061124c565b60405180910390a150505050565b6108c66040518060800160405280600081526020016000815260200160008152602001600081525090565b6108f16040518060800160405280600081526020016000815260200160008152602001600081525090565b61091c6040518060800160405280600081526020016000815260200160008152602001600081525090565b5050506001600160a01b038116600090815260026020818152604080842084805280835281852082516080808201855282548252600180840154838801528388015483870152600393840154606080850191909152818a52858852868a20875180850189528154815281840154818b0152818b0154818a01529086015481830152898b52958852868a2087519384018852805484529182015497830197909752968701549481019490945294015492820192909252919290919080806109e28782610c9c565b92506109ef876001610c9c565b91506109fc876002610c9c565b905091939550919395565b6000546001600160a01b03163314610a315760405162461bcd60e51b81526004016104fa9061126d565b61069e600061106a565b6000546001600160a01b03163314610a655760405162461bcd60e51b81526004016104fa9061126d565b61069e6110ba565b6000546001600160a01b03163314610a975760405162461bcd60e51b81526004016104fa9061126d565b6001546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90339083906370a082319060240160206040518083038186803b158015610ae457600080fd5b505afa158015610af8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1c91906111e5565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610b6257600080fd5b505af1158015610b76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9a91906111aa565b50565b336000818152600260209081526040808320858452909152902054610bf85760405162461bcd60e51b8152602060048201526011602482015270139bc81858dd1a5d994819195c1bdcda5d607a1b60448201526064016104fa565b6000610c048284610c9c565b6001600160a01b0383166000908152600260209081526040808320878452909152812080549293508392909190610c3c9084906112a2565b90915550506001600160a01b03821660009081526002602081815260408084208785529091529182902042910155517f0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d1868739061065f9084908690859061124c565b6001600160a01b0382166000908152600260208181526040808420858552909152822001548190610ccd90426112fb565b6001600160a01b0385166000908152600260209081526040808320878452825280832054600390925282205492935091906301e13380612710610d1084866112dc565b610d1a91906112ba565b610d2491906112ba565b90506000610d3282866112dc565b98975050505050505050565b600054600160a01b900460ff1615610d8b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104fa565b6001546040516323b872dd60e01b8152336004820181905230602483015260448201859052916001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610dde57600080fd5b505af1158015610df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1691906111aa565b506001600160a01b038116600090815260026020908152604080832085845290915290205415610e5757610e4a8183610c9c565b610e5490846112a2565b92505b6001600160a01b038116600090815260026020908152604080832085845290915281208054859290610e8a9084906112a2565b90915550506001600160a01b0381166000908152600260208181526040808420868552825280842042600180830182905591909401849055600390925290922090910154610ed7916112a2565b6001600160a01b03821660009081526002602090815260408083208684529091529081902060030191909155517f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159061065f9083908590879061124c565b6000546001600160a01b03163314610f5f5760405162461bcd60e51b81526004016104fa9061126d565b6001600160a01b038116610fc45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104fa565b610b9a8161106a565b600054600160a01b900460ff1661101d5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104fa565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156111075760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104fa565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861104d3390565b80356001600160a01b038116811461115957600080fd5b919050565b60006020828403121561117057600080fd5b61117982611142565b9392505050565b6000806040838503121561119357600080fd5b61119c83611142565b946020939093013593505050565b6000602082840312156111bc57600080fd5b8151801515811461117957600080fd5b6000602082840312156111de57600080fd5b5035919050565b6000602082840312156111f757600080fd5b5051919050565b6000806040838503121561121157600080fd5b50508035926020909101359150565b60008060006060848603121561123557600080fd5b505081359360208301359350604090920135919050565b6001600160a01b039390931683526020830191909152604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156112b5576112b5611312565b500190565b6000826112d757634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156112f6576112f6611312565b500290565b60008282101561130d5761130d611312565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208afaca1eef5f9aaf8990806b5b73ad646923e7fcd31ace5439d2ffdbab3b049464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBEB8314C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xE788CEE5 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xEDF501AD EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2BF JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x259EE752 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x32E96203 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1A7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15A PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP3 DUP3 ADD SLOAD PUSH1 0x3 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP3 SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x192 PUSH2 0x18D CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x192 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0x192 PUSH2 0x66C JUMP JUMPDEST PUSH2 0x192 PUSH2 0x1BD CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH2 0x6A0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1D5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x21D PUSH2 0x218 CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x89B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP8 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP10 ADD MLOAD DUP2 DUP4 ADD MSTORE DUP9 DUP4 ADD MLOAD DUP3 DUP5 ADD MSTORE PUSH1 0x60 SWAP9 DUP10 ADD MLOAD DUP10 DUP4 ADD MSTORE DUP8 MLOAD PUSH1 0x80 DUP4 ADD MSTORE DUP1 DUP9 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE DUP8 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE SWAP7 DUP9 ADD MLOAD PUSH1 0xE0 DUP3 ADD MSTORE DUP6 MLOAD PUSH2 0x100 DUP3 ADD MSTORE SWAP6 DUP6 ADD MLOAD PUSH2 0x120 DUP8 ADD MSTORE DUP5 ADD MLOAD PUSH2 0x140 DUP7 ADD MSTORE SWAP5 SWAP1 SWAP3 ADD MLOAD PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE PUSH2 0x1C0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x1E0 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x192 PUSH2 0xA07 JUMP JUMPDEST PUSH2 0x192 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0x192 PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH2 0xB9D JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1180 JUMP JUMPDEST PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FE JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF SLOAD DUP2 MSTORE PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92F00 SLOAD DUP2 DUP5 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054C SLOAD DUP2 MSTORE PUSH32 0xA15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054D SLOAD DUP2 DUP7 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE PUSH1 0x3 DUP6 MSTORE DUP6 MLOAD DUP1 DUP8 ADD DUP8 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4D SLOAD DUP2 MSTORE PUSH32 0xC3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4E SLOAD DUP2 DUP8 ADD SWAP1 DUP2 MSTORE DUP8 MLOAD SWAP5 MLOAD DUP6 MSTORE SWAP3 MLOAD SWAP6 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE MLOAD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP1 MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x4A8 PUSH2 0x48F CALLDATASIZE PUSH1 0x4 PUSH2 0x11CC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x176 JUMP JUMPDEST PUSH2 0x192 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x115E JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 ADD SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x576 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP3 DUP5 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP11 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE PUSH1 0x1 SLOAD SWAP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x607 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x65F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x696 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH2 0x69E PUSH2 0xFCD JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x6FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08195B9BDD59DA0819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 DUP3 DUP5 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP7 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x7B9 SWAP1 DUP5 SWAP1 PUSH2 0x12FB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP4 PUSH2 0x7DA DUP5 DUP9 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x834 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP3 PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH2 0x88D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x8C6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x8F1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH2 0x91C PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE DUP4 DUP9 ADD SLOAD DUP4 DUP8 ADD MSTORE PUSH1 0x3 SWAP4 DUP5 ADD SLOAD PUSH1 0x60 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP11 MSTORE DUP6 DUP9 MSTORE DUP7 DUP11 KECCAK256 DUP8 MLOAD DUP1 DUP6 ADD DUP10 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP5 ADD SLOAD DUP2 DUP12 ADD MSTORE DUP2 DUP12 ADD SLOAD DUP2 DUP11 ADD MSTORE SWAP1 DUP7 ADD SLOAD DUP2 DUP4 ADD MSTORE DUP10 DUP12 MSTORE SWAP6 DUP9 MSTORE DUP7 DUP11 KECCAK256 DUP8 MLOAD SWAP4 DUP5 ADD DUP9 MSTORE DUP1 SLOAD DUP5 MSTORE SWAP2 DUP3 ADD SLOAD SWAP8 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP7 DUP8 ADD SLOAD SWAP5 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP5 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP1 DUP1 PUSH2 0x9E2 DUP8 DUP3 PUSH2 0xC9C JUMP JUMPDEST SWAP3 POP PUSH2 0x9EF DUP8 PUSH1 0x1 PUSH2 0xC9C JUMP JUMPDEST SWAP2 POP PUSH2 0x9FC DUP8 PUSH1 0x2 PUSH2 0xC9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 POP SWAP2 SWAP4 SWAP6 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH2 0x69E PUSH1 0x0 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA65 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH2 0x69E PUSH2 0x10BA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB1C SWAP2 SWAP1 PUSH2 0x11E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB9A SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xBF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC04 DUP3 DUP5 PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC3C SWAP1 DUP5 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE MLOAD PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 SWAP1 PUSH2 0x65F SWAP1 DUP5 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH2 0xCCD SWAP1 TIMESTAMP PUSH2 0x12FB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0xD10 DUP5 DUP7 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST PUSH2 0xD24 SWAP2 SWAP1 PUSH2 0x12BA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD32 DUP3 DUP7 PUSH2 0x12DC JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD8B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDF2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE16 SWAP2 SWAP1 PUSH2 0x11AA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xE57 JUMPI PUSH2 0xE4A DUP2 DUP4 PUSH2 0xC9C JUMP JUMPDEST PUSH2 0xE54 SWAP1 DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xE8A SWAP1 DUP5 SWAP1 PUSH2 0x12A2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD DUP3 SWAP1 SSTORE SWAP2 SWAP1 SWAP5 ADD DUP5 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH2 0xED7 SWAP2 PUSH2 0x12A2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x3 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x65F SWAP1 DUP4 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0x124C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4FA SWAP1 PUSH2 0x126D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xFC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH2 0xB9A DUP2 PUSH2 0x106A JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x101D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1107 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4FA JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x104D CALLER SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1159 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1179 DUP3 PUSH2 0x1142 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1193 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x119C DUP4 PUSH2 0x1142 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x12B5 JUMPI PUSH2 0x12B5 PUSH2 0x1312 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12F6 JUMPI PUSH2 0x12F6 PUSH2 0x1312 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x130D JUMPI PUSH2 0x130D PUSH2 0x1312 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 STATICCALL 0xCA 0x1E 0xEF 0x5F SWAP11 0xAF DUP10 SWAP1 DUP1 PUSH12 0x5B73AD646923E7FCD31ACE54 CODECOPY 0xD2 SELFDESTRUCT 0xDB 0xAB EXTCODESIZE DIV SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "224:4803:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;647:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8674:25:5;;;8730:2;8715:18;;8708:34;;;;8758:18;;;8751:34;8816:2;8801:18;;8794:34;8661:3;8646:19;647:68:4;;;;;;;;4696:187;;;;;;:::i;:::-;;:::i;:::-;;2635:421;;;;;;:::i;:::-;;:::i;1279:64::-;;;:::i;2061:568::-;;;;;;:::i;:::-;;:::i;317:27::-;;;;;-1:-1:-1;;;;;317:27:4;;;;;;-1:-1:-1;;;;;2449:32:5;;;2431:51;;2419:2;2404:18;317:27:4;2285:203:5;1098:84:1;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1098:84;;4025:14:5;;4018:22;4000:41;;3988:2;3973:18;1098:84:1;3860:187:5;3981:489:4;;;;;;:::i;:::-;;:::i;:::-;;;;2093:12:5;;2081:25;;2155:4;2144:16;;;2138:23;2122:14;;;2115:47;2200:16;;;2194:23;2178:14;;;2171:47;2267:4;2256:16;;;2250:23;2234:14;;;2227:47;2093:12;;7800:3;7785:19;;2081:25;2144:16;;;2138:23;2122:14;;;2115:47;2200:16;;;2194:23;2178:14;;;2171:47;2256:16;;;2250:23;2234:14;;;2227:47;2093:12;;7860:3;7845:19;;2081:25;2144:16;;;2138:23;2122:14;;;2115:47;2200:16;;2194:23;2178:14;;;2171:47;2256:16;;;;2250:23;2234:14;;;2227:47;7896:3;7881:19;;7874:35;7940:3;7925:19;;7918:35;7984:3;7969:19;;7962:35;;;;7691:3;7676:19;3981:489:4;7291:712:5;1668:101:0;;;:::i;1209:60:4:-;;;:::i;4889:136::-;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;3062:438:4;;;;;;:::i;:::-;;:::i;3506:465::-;;;;;;:::i;:::-;;:::i;:::-;;;8154:25:5;;;8142:2;8127:18;3506:465:4;8008:177:5;1350:705:4;;;;;;:::i;:::-;;:::i;4476:214::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4595:21:4;;;;;;;4604:12;4595:21;;;;;;;;;;;4626;;;;;;;4635:12;4626:21;;;;;;;;;;;4676:1;4666:12;;;4604:9;4666:12;;4657:21;;;;;;;4666:12;4657:21;;;;;;;;;;;4476:214;;1943:12:5;;1931:25;;1988:23;;1972:14;;;1965:47;;;;1943:12;7200:18;;;1931:25;;;;1988:23;;1972:14;;;1965:47;1943:12;;7275:3;7260:19;;1931:25;1988:23;;1972:14;;;1965:47;7104:3;7089:19;4476:214:4;6782:504:5;721:42:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8364:25:5;;;8420:2;8405:18;;8398:34;;;;8337:18;721:42:4;8190:248:5;1918:198:0;;;;;;:::i;:::-;;:::i;4696:187:4:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;4800:16:4::1;::::0;;;:9:::1;:16;::::0;;;;;:27;;;4837::::1;;:39:::0;4696:187::o;2635:421::-;2706:10;2685:18;2734:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;2726:78;;;;-1:-1:-1;;;2726:78:4;;6291:2:5;2726:78:4;;;6273:21:5;6330:2;6310:18;;;6303:30;-1:-1:-1;;;6349:18:5;;;6342:47;6406:18;;2726:78:4;6089:341:5;2726:78:4;2815:15;2833:36;2850:10;2862:6;2833:16;:36::i;:::-;-1:-1:-1;;;;;2880:28:4;;;;;;;:16;:28;;;;;;;;:36;;;;;;;;;;2929:15;2880:46;;:64;2955:13;;:43;;-1:-1:-1;;;2955:43:4;;;;;3405:51:5;;;;3472:18;;;3465:34;;;2815:54:4;;-1:-1:-1;2955:13:4;;;:22;;3378:18:5;;2955:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3014:35;3021:10;3033:6;3041:7;3014:35;;;;;;;;:::i;:::-;;;;;;;;2675:381;;2635:421;:::o;1279:64::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1326:10:4::1;:8;:10::i;:::-;1279:64::o:0;2061:568::-;2152:10;2131:18;2180:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;:55;-1:-1:-1;2180:55:4;2172:86;;;;-1:-1:-1;;;2172:86:4;;6637:2:5;2172:86:4;;;6619:21:5;6676:2;6656:18;;;6649:30;-1:-1:-1;;;6695:18:5;;;6688:48;6753:18;;2172:86:4;6435:342:5;2172:86:4;-1:-1:-1;;;;;2276:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:47;;;2327:15;-1:-1:-1;2276:66:4;2268:103;;;;-1:-1:-1;;;2268:103:4;;5232:2:5;2268:103:4;;;5214:21:5;5271:2;5251:18;;;5244:30;5310:26;5290:18;;;5283:54;5354:18;;2268:103:4;5030:348:5;2268:103:4;2382:15;2400:36;2417:10;2429:6;2400:16;:36::i;:::-;-1:-1:-1;;;;;2455:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:55;;2382:54;;-1:-1:-1;2503:7:4;;2455:36;;:28;:55;;2503:7;;2455:55;:::i;:::-;;;;-1:-1:-1;;2521:13:4;;-1:-1:-1;;;;;2521:13:4;:22;2544:10;2556:17;2566:7;2556;:17;:::i;:::-;2521:53;;-1:-1:-1;;;;;;2521:53:4;;;;;;;-1:-1:-1;;;;;3423:32:5;;;2521:53:4;;;3405:51:5;3472:18;;;3465:34;3378:18;;2521:53:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2590:32;2599:10;2611:1;2614:7;2590:32;;;;;;;;:::i;:::-;;;;;;;;2121:508;;2061:568;;:::o;3981:489::-;4039:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4039:18:4;4060;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:18:4;4080;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4080:18:4;-1:-1:-1;;;;;;;;4188:23:4;;4100:21;4188:23;;;:16;:23;;;;;;;;:26;;;;;;;;;4179:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4233:26;;;;;;;;;4224:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4278:26;;;;;;;;;4269:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4179;;4224;;4269;4100:21;;4333:26;4205:5;4100:21;4333:16;:26::i;:::-;4317:42;;4385:26;4402:5;4409:1;4385:16;:26::i;:::-;4369:42;;4437:26;4454:5;4461:1;4437:16;:26::i;:::-;4421:42;;3981:489;;;;;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;1209:60:4:-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1254:8:4::1;:6;:8::i;4889:136::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4944:13:4::1;::::0;4979:38:::1;::::0;-1:-1:-1;;;4979:38:4;;5011:4:::1;4979:38;::::0;::::1;2431:51:5::0;-1:-1:-1;;;;;4944:13:4;;::::1;::::0;:22:::1;::::0;4967:10:::1;::::0;4944:13;;4979:23:::1;::::0;2404:18:5;;4979:38:4::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4944:74;::::0;-1:-1:-1;;;;;;4944:74:4::1;::::0;;;;;;-1:-1:-1;;;;;3423:32:5;;;4944:74:4::1;::::0;::::1;3405:51:5::0;3472:18;;;3465:34;3378:18;;4944:74:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4889:136::o:0;3062:438::-;3136:10;3115:18;3164:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;3156:78;;;;-1:-1:-1;;;3156:78:4;;6291:2:5;3156:78:4;;;6273:21:5;6330:2;6310:18;;;6303:30;-1:-1:-1;;;6349:18:5;;;6342:47;6406:18;;3156:78:4;6089:341:5;3156:78:4;3245:15;3263:36;3280:10;3292:6;3263:16;:36::i;:::-;-1:-1:-1;;;;;3310:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:55;;3245:54;;-1:-1:-1;3245:54:4;;3310:36;;:28;:55;;3245:54;;3310:55;:::i;:::-;;;;-1:-1:-1;;;;;;;3375:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;;;3424:15;3375:46;;:64;3455:38;;;;;3392:10;;3404:6;;3485:7;;3455:38;:::i;3506:465::-;-1:-1:-1;;;;;3642:23:4;;3585:7;3642:23;;;:16;:23;;;;;;;;:31;;;;;;;;:41;;3585:7;;3624:59;;:15;:59;:::i;:::-;-1:-1:-1;;;;;3711:23:4;;3693:15;3711:23;;;:16;:23;;;;;;;;:31;;;;;;;;:39;3775:9;:17;;;;;:21;3603:80;;-1:-1:-1;3711:39:4;3775:21;3862:8;3853:5;3836:13;3775:21;3711:39;3836:13;:::i;:::-;3835:23;;;;:::i;:::-;3834:36;;;;:::i;:::-;3807:63;-1:-1:-1;3880:21:4;3904:29;3807:63;3904:10;:29;:::i;:::-;3880:53;3506:465;-1:-1:-1;;;;;;;;3506:465:4:o;1350:705::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;5585:2:5;1403:38:1;;;5567:21:5;5624:2;5604:18;;;5597:30;-1:-1:-1;;;5643:18:5;;;5636:46;5699:18;;1403:38:1;5383:340:5;1403:38:1;1481:13:4::1;::::0;:62:::1;::::0;-1:-1:-1;;;1481:62:4;;1453:10:::1;1481:62;::::0;::::1;2733:34:5::0;;;1528:4:4::1;2783:18:5::0;;;2776:43;2835:18;;;2828:34;;;1453:10:4;-1:-1:-1;;;;;1481:13:4::1;::::0;:26:::1;::::0;2668:18:5;;1481:62:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;1557:28:4;::::1;1604:1;1557:28:::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;:44;:48;1554:124:::1;;1631:36;1648:10;1660:6;1631:16;:36::i;:::-;1620:47;::::0;;::::1;:::i;:::-;;;1554:124;-1:-1:-1::0;;;;;1688:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;:55;;1736:7;;1688:28;:55:::1;::::0;1736:7;;1688:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;1753:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;1800:15:::1;1753:44;::::0;;::::1;:62:::0;;;1825:46;;;::::1;:64:::0;;;1967:9:::1;:17:::0;;;;;;:28;;::::1;::::0;1949:46:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;1899:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;;;:47:::1;;:96:::0;;;;2011:37;::::1;::::0;::::1;::::0;1916:10;;1928:6;;2040:7;;2011:37:::1;:::i;1918:198:0:-:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4825:2:5;1998:73:0::1;::::0;::::1;4807:21:5::0;4864:2;4844:18;;;4837:30;4903:34;4883:18;;;4876:62;-1:-1:-1;;;4954:18:5;;;4947:36;5000:19;;1998:73:0::1;4623:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;2110:117:1:-:0;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;4476:2:5;1669:41:1;;;4458:21:5;4515:2;4495:18;;;4488:30;-1:-1:-1;;;4534:18:5;;;4527:50;4594:18;;1669:41:1;4274:344:5;1669:41:1;2178:5:::1;2168:15:::0;;-1:-1:-1;;;;2168:15:1::1;::::0;;2198:22:::1;719:10:3::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;2449:32:5;;;2431:51;;2419:2;2404:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;5585:2:5;1403:38:1;;;5567:21:5;5624:2;5604:18;;;5597:30;-1:-1:-1;;;5643:18:5;;;5636:46;5699:18;;1403:38:1;5383:340:5;1403:38:1;1922:7:::1;:14:::0;;-1:-1:-1;;;;1922:14:1::1;-1:-1:-1::0;;;1922:14:1::1;::::0;;1951:20:::1;1958:12;719:10:3::0;;640:96;14:173:5;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:5:o;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:5:o;642:277::-;709:6;762:2;750:9;741:7;737:23;733:32;730:52;;;778:1;775;768:12;730:52;810:9;804:16;863:5;856:13;849:21;842:5;839:32;829:60;;885:1;882;875:12;924:180;983:6;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;-1:-1:-1;1075:23:5;;924:180;-1:-1:-1;924:180:5:o;1109:184::-;1179:6;1232:2;1220:9;1211:7;1207:23;1203:32;1200:52;;;1248:1;1245;1238:12;1200:52;-1:-1:-1;1271:16:5;;1109:184;-1:-1:-1;1109:184:5:o;1298:248::-;1366:6;1374;1427:2;1415:9;1406:7;1402:23;1398:32;1395:52;;;1443:1;1440;1433:12;1395:52;-1:-1:-1;;1466:23:5;;;1536:2;1521:18;;;1508:32;;-1:-1:-1;1298:248:5:o;1551:316::-;1628:6;1636;1644;1697:2;1685:9;1676:7;1672:23;1668:32;1665:52;;;1713:1;1710;1703:12;1665:52;-1:-1:-1;;1736:23:5;;;1806:2;1791:18;;1778:32;;-1:-1:-1;1857:2:5;1842:18;;;1829:32;;1551:316;-1:-1:-1;1551:316:5:o;2873:353::-;-1:-1:-1;;;;;3101:32:5;;;;3083:51;;3165:2;3150:18;;3143:34;;;;3208:2;3193:18;;3186:34;3071:2;3056:18;;2873:353::o;5728:356::-;5930:2;5912:21;;;5949:18;;;5942:30;6008:34;6003:2;5988:18;;5981:62;6075:2;6060:18;;5728:356::o;8839:128::-;8879:3;8910:1;8906:6;8903:1;8900:13;8897:39;;;8916:18;;:::i;:::-;-1:-1:-1;8952:9:5;;8839:128::o;8972:217::-;9012:1;9038;9028:132;;9082:10;9077:3;9073:20;9070:1;9063:31;9117:4;9114:1;9107:15;9145:4;9142:1;9135:15;9028:132;-1:-1:-1;9174:9:5;;8972:217::o;9194:168::-;9234:7;9300:1;9296;9292:6;9288:14;9285:1;9282:21;9277:1;9270:9;9263:17;9259:45;9256:71;;;9307:18;;:::i;:::-;-1:-1:-1;9347:9:5;;9194:168::o;9367:125::-;9407:4;9435:1;9432;9429:8;9426:34;;;9440:18;;:::i;:::-;-1:-1:-1;9477:9:5;;9367:125::o;9497:127::-;9558:10;9553:3;9549:20;9546:1;9539:31;9589:4;9586:1;9579:15;9613:4;9610:1;9603:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "991600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptedToken()": "2382",
								"calculateRewards(address,uint256)": "infinite",
								"changeLevelValues(uint256,uint256,uint256)": "46737",
								"claim(uint256)": "infinite",
								"compound(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"getLevelsInfo()": "13323",
								"getUserInfo(address)": "infinite",
								"levelInfo(uint256)": "4665",
								"owner()": "2398",
								"pause()": "29802",
								"paused()": "2376",
								"renounceOwnership()": "28225",
								"transferOwnership(address)": "28419",
								"unpause()": "29840",
								"userLevelDeposit(address,uint256)": "9027",
								"withdraw(uint256,uint256)": "infinite",
								"withdrawTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 5027,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1082,
									"end": 1158,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 991,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1121,
									"end": 1151,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 5027,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208afaca1eef5f9aaf8990806b5b73ad646923e7fcd31ace5439d2ffdbab3b049464736f6c63430008070033",
									".code": [
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "BEB8314C"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "BEB8314C"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "E788CEE5"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "EDF501AD"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "8D8F2ADB"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "AA5F7E26"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "451C3D80"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "6386C1C7"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "259EE752"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "32E96203"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "379607F5"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "3F4BA83A"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 5027,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8674,
											"end": 8699,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8674,
											"end": 8699,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8674,
											"end": 8699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8730,
											"end": 8732,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8715,
											"end": 8733,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 8742,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 8742,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 8742,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8708,
											"end": 8742,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8758,
											"end": 8776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8751,
											"end": 8785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8816,
											"end": 8818,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8801,
											"end": 8819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8794,
											"end": 8828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8646,
											"end": 8665,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 647,
											"end": 715,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 647,
											"end": 715,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 647,
											"end": 715,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1279,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1279,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1279,
											"end": 1343,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 317,
											"end": 344,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2449,
											"end": 2481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2481,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 2285,
											"end": 2488,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4039,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4025,
											"end": 4039,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4018,
											"end": 4040,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4000,
											"end": 4041,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3988,
											"end": 3990,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 3991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3860,
											"end": 4047,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2155,
											"end": 2159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7800,
											"end": 7803,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7785,
											"end": 7804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7785,
											"end": 7804,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7863,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 7845,
											"end": 7864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7845,
											"end": 7864,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "PUSH",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "PUSH",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "PUSH",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7899,
											"name": "PUSH",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 7881,
											"end": 7900,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7881,
											"end": 7900,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7874,
											"end": 7909,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 7943,
											"name": "PUSH",
											"source": 5,
											"value": "1A0"
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7925,
											"end": 7944,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7918,
											"end": 7953,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 7987,
											"name": "PUSH",
											"source": 5,
											"value": "1C0"
										},
										{
											"begin": 7969,
											"end": 7988,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7969,
											"end": 7988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7997,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7691,
											"end": 7694,
											"name": "PUSH",
											"source": 5,
											"value": "1E0"
										},
										{
											"begin": 7676,
											"end": 7695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 7291,
											"end": 8003,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4889,
											"end": 5025,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 4889,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4889,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 4889,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4889,
											"end": 5025,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8154,
											"end": 8179,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8154,
											"end": 8179,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8154,
											"end": 8179,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8142,
											"end": 8144,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8127,
											"end": 8145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 8008,
											"end": 8185,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4476,
											"end": 4690,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 4476,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 4,
											"value": "3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF"
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "PUSH",
											"source": 4,
											"value": "3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92F00"
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4595,
											"end": 4616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4635,
											"end": 4647,
											"name": "PUSH",
											"source": 4,
											"value": "A15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054C"
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "PUSH",
											"source": 4,
											"value": "A15BC60C955C405D20D9149C709E2460F1C2D9A497496A7F46004D1772C3054D"
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4626,
											"end": 4647,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4677,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4666,
											"end": 4678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4678,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4666,
											"end": 4678,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4666,
											"end": 4678,
											"name": "PUSH",
											"source": 4,
											"value": "C3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4D"
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "PUSH",
											"source": 4,
											"value": "C3A24B0501BD2C13A7E57F2DB4369EC4C223447539FC0724A9D55AC4A06EBD4E"
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4657,
											"end": 4678,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4690,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4476,
											"end": 4690,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7218,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7275,
											"end": 7278,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7260,
											"end": 7279,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7104,
											"end": 7107,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7089,
											"end": 7108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4476,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 6782,
											"end": 7286,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 721,
											"end": 763,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 721,
											"end": 763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 721,
											"end": 763,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8364,
											"end": 8389,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8389,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8364,
											"end": 8389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8420,
											"end": 8422,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8405,
											"end": 8423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8398,
											"end": 8432,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8337,
											"end": 8355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 721,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 8190,
											"end": 8438,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4809,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4816,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4800,
											"end": 4827,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4837,
											"end": 4864,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4837,
											"end": 4864,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4837,
											"end": 4876,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4696,
											"end": 4883,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2706,
											"end": 2716,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2685,
											"end": 2703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2750,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2762,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2770,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2770,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2770,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2778,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6293,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6273,
											"end": 6294,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6332,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6303,
											"end": 6333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81858DD1A5D994819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6342,
											"end": 6389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6089,
											"end": 6430,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2726,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2850,
											"end": 2860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2833,
											"end": 2869,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2833,
											"end": 2869,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2833,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2896,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2908,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2916,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2929,
											"end": 2944,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2926,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 2944,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3456,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3456,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3405,
											"end": 3456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3499,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3499,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2869,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2869,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2968,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2977,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2955,
											"end": 2977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2955,
											"end": 2998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7"
										},
										{
											"begin": 3021,
											"end": 3031,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3033,
											"end": 3039,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3014,
											"end": 3049,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 3056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2675,
											"end": 3056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2635,
											"end": 3056,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1279,
											"end": 1343,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1279,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1326,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1326,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1279,
											"end": 1343,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2152,
											"end": 2162,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2149,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2196,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2208,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2216,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2224,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2180,
											"end": 2235,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2180,
											"end": 2235,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6619,
											"end": 6640,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6676,
											"end": 6678,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6656,
											"end": 6674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6649,
											"end": 6679,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08195B9BDD59DA0819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6695,
											"end": 6713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6736,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6753,
											"end": 6771,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6753,
											"end": 6771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6435,
											"end": 6777,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2172,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2304,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2312,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2312,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2312,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2312,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2312,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2312,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2323,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2276,
											"end": 2323,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2323,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2327,
											"end": 2342,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2276,
											"end": 2342,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5232,
											"end": 5234,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5214,
											"end": 5235,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5271,
											"end": 5273,
											"name": "PUSH",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5244,
											"end": 5274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5310,
											"end": 5336,
											"name": "PUSH",
											"source": 5,
											"value": "4465706F736974206E6F7420756E6C6F636B6564207965740000000000000000"
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5308,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5283,
											"end": 5337,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5354,
											"end": 5372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5030,
											"end": 5378,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2268,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2397,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2400,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2417,
											"end": 2427,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2400,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2400,
											"end": 2436,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2400,
											"end": 2436,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2400,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2471,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2455,
											"end": 2510,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2521,
											"end": 2534,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2534,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2544,
											"end": 2554,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2566,
											"end": 2573,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2563,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2556,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3499,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2521,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH",
											"source": 4,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 2599,
											"end": 2609,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2611,
											"end": 2612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2621,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2622,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2121,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2061,
											"end": 2629,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4060,
											"end": 4078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4060,
											"end": 4078,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 4060,
											"end": 4078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4080,
											"end": 4098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4204,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4211,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4259,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 4278,
											"end": 4304,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4179,
											"end": 4214,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4269,
											"end": 4304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4205,
											"end": 4210,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4100,
											"end": 4121,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4333,
											"end": 4359,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4333,
											"end": 4359,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 4333,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4359,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4317,
											"end": 4359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4402,
											"end": 4407,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4409,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4385,
											"end": 4401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4369,
											"end": 4411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4454,
											"end": 4459,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4462,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4437,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 4437,
											"end": 4463,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4437,
											"end": 4463,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 4437,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4470,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1209,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1254,
											"end": 1262,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4889,
											"end": 5025,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4889,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5011,
											"end": 5015,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2431,
											"end": 2482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 4944,
											"end": 4966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 4977,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4967,
											"end": 4977,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5002,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 4979,
											"end": 5002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4979,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3423,
											"end": 3455,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3465,
											"end": 3499,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3378,
											"end": 3396,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4944,
											"end": 5018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4889,
											"end": 5025,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3062,
											"end": 3500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3136,
											"end": 3146,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3180,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3192,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3200,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6293,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6273,
											"end": 6294,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6330,
											"end": 6332,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6310,
											"end": 6328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6303,
											"end": 6333,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81858DD1A5D994819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6342,
											"end": 6389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6089,
											"end": 6430,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3156,
											"end": 3234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3292,
											"end": 3298,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3279,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3263,
											"end": 3299,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3263,
											"end": 3299,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 3263,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3326,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3299,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3299,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3245,
											"end": 3299,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3299,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3299,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3310,
											"end": 3365,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3391,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3403,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3411,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3424,
											"end": 3439,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3421,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3439,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "E311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873"
										},
										{
											"begin": 3455,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 3455,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3392,
											"end": 3402,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3392,
											"end": 3402,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3485,
											"end": 3492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3455,
											"end": 3493,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3658,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3665,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3683,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3683,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3585,
											"end": 3592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3624,
											"end": 3683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3639,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3624,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3624,
											"end": 3683,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3624,
											"end": 3683,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3624,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3693,
											"end": 3708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3727,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3734,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3742,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3742,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3742,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3742,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3742,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3742,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3742,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3750,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3784,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3792,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3796,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3603,
											"end": 3683,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3603,
											"end": 3683,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3711,
											"end": 3750,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3775,
											"end": 3796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3870,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 3853,
											"end": 3858,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 3836,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3775,
											"end": 3796,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3750,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3836,
											"end": 3849,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3849,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3836,
											"end": 3849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3835,
											"end": 3858,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3835,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3835,
											"end": 3858,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3835,
											"end": 3858,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3835,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3834,
											"end": 3870,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3834,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3834,
											"end": 3870,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3834,
											"end": 3870,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 3834,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3807,
											"end": 3870,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3880,
											"end": 3901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3807,
											"end": 3870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 3914,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3904,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3904,
											"end": 3933,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3904,
											"end": 3933,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3904,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 3933,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3506,
											"end": 3971,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 1350,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5597,
											"end": 5627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5383,
											"end": 5723,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1481,
											"end": 1494,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1463,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2733,
											"end": 2767,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2767,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2733,
											"end": 2767,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1532,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2819,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2853,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2862,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2862,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2828,
											"end": 2862,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1453,
											"end": 1463,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1481,
											"end": 1494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1494,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1507,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1481,
											"end": 1507,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2668,
											"end": 2686,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 1481,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1604,
											"end": 1605,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1573,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1593,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1601,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1557,
											"end": 1605,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1554,
											"end": 1678,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1648,
											"end": 1658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1666,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1631,
											"end": 1647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1631,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1620,
											"end": 1667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1667,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1620,
											"end": 1667,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1667,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 1620,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1667,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1678,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1554,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1704,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1724,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1743,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1769,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1781,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1789,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1800,
											"end": 1815,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1753,
											"end": 1815,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1871,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1871,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1871,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1889,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1889,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1976,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1967,
											"end": 1984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1984,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1984,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1984,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1984,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1995,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1967,
											"end": 1995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1949,
											"end": 1995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1949,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1949,
											"end": 1995,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1949,
											"end": 1995,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1949,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1915,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1927,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1935,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1946,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1899,
											"end": 1946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1899,
											"end": 1995,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2048,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 2011,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2011,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1916,
											"end": 1926,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1916,
											"end": 1926,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 2011,
											"end": 2048,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4827,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4807,
											"end": 4828,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4864,
											"end": 4866,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4844,
											"end": 4862,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4837,
											"end": 4867,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 4937,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4876,
											"end": 4938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4947,
											"end": 4983,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5019,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5000,
											"end": 5019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4623,
											"end": 5025,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4478,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4479,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4515,
											"end": 4517,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4495,
											"end": 4513,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4495,
											"end": 4513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4495,
											"end": 4513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4518,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4534,
											"end": 4552,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4534,
											"end": 4552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4534,
											"end": 4552,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4527,
											"end": 4577,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4594,
											"end": 4612,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 4274,
											"end": 4618,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2449,
											"end": 2481,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2481,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2481,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2482,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2482,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2419,
											"end": 2421,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5567,
											"end": 5588,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5626,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5604,
											"end": 5622,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5597,
											"end": 5627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5682,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5699,
											"end": 5717,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5383,
											"end": 5723,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 741,
											"end": 748,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 737,
											"end": 760,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 733,
											"end": 765,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 778,
											"end": 779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 768,
											"end": 780,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 856,
											"end": 869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 849,
											"end": 870,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 839,
											"end": 871,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 829,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 829,
											"end": 889,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 885,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 875,
											"end": 887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1038,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1022,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1034,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1007,
											"end": 1039,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1054,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1235,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1287,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1430,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1540,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1540,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1683,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1809,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1810,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1810,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1861,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2873,
											"end": 3226,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2873,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3101,
											"end": 3133,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3133,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3133,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3134,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3083,
											"end": 3134,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3165,
											"end": 3167,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3168,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3177,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3177,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3208,
											"end": 3210,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3071,
											"end": 3073,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3056,
											"end": 3074,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3056,
											"end": 3074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2873,
											"end": 3226,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5728,
											"end": 6084,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5728,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5930,
											"end": 5932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5912,
											"end": 5933,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5933,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5912,
											"end": 5933,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5949,
											"end": 5967,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5942,
											"end": 5972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 6042,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6003,
											"end": 6005,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5988,
											"end": 6006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5981,
											"end": 6043,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6075,
											"end": 6077,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5728,
											"end": 6084,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8839,
											"end": 8967,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 8839,
											"end": 8967,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8879,
											"end": 8882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8906,
											"end": 8912,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 8904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8900,
											"end": 8913,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8897,
											"end": 8936,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8897,
											"end": 8936,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8897,
											"end": 8936,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 8916,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8952,
											"end": 8961,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8952,
											"end": 8961,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 8967,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8972,
											"end": 9189,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 8972,
											"end": 9189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9012,
											"end": 9013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 9028,
											"end": 9160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9082,
											"end": 9092,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 9077,
											"end": 9080,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9073,
											"end": 9093,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 9070,
											"end": 9071,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9094,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9117,
											"end": 9121,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 9114,
											"end": 9115,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9107,
											"end": 9122,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9145,
											"end": 9149,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9142,
											"end": 9143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9135,
											"end": 9150,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9160,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 9028,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9174,
											"end": 9183,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 9174,
											"end": 9183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8972,
											"end": 9189,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9194,
											"end": 9362,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 9194,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9234,
											"end": 9241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9300,
											"end": 9301,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9292,
											"end": 9298,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9288,
											"end": 9302,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 9285,
											"end": 9286,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9282,
											"end": 9303,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9278,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9270,
											"end": 9279,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9280,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9259,
											"end": 9304,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9327,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9256,
											"end": 9327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9256,
											"end": 9327,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 9307,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9347,
											"end": 9356,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9347,
											"end": 9356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9194,
											"end": 9362,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9367,
											"end": 9492,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 9367,
											"end": 9492,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9407,
											"end": 9411,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9435,
											"end": 9436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9429,
											"end": 9437,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9460,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9426,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9426,
											"end": 9460,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9440,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9440,
											"end": 9458,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 9440,
											"end": 9458,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9440,
											"end": 9458,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 9440,
											"end": 9458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9477,
											"end": 9486,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 9486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9367,
											"end": 9492,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9497,
											"end": 9624,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 9497,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9558,
											"end": 9568,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 9553,
											"end": 9556,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9549,
											"end": 9569,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 9546,
											"end": 9547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9589,
											"end": 9593,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9586,
											"end": 9587,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9579,
											"end": 9594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9613,
											"end": 9617,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9610,
											"end": 9611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9603,
											"end": 9618,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptedToken()": "451c3d80",
							"calculateRewards(address,uint256)": "beb8314c",
							"changeLevelValues(uint256,uint256,uint256)": "32e96203",
							"claim(uint256)": "379607f5",
							"compound(uint256)": "aa5f7e26",
							"deposit(uint256,uint256)": "e2bbb158",
							"getLevelsInfo()": "e788cee5",
							"getUserInfo(address)": "6386c1c7",
							"levelInfo(uint256)": "edf501ad",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"userLevelDeposit(address,uint256)": "259ee752",
							"withdraw(uint256,uint256)": "441a3e70",
							"withdrawTokens()": "8d8f2adb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Compound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"name\":\"changeLevelValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLevelsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level2\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level2\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"level0Rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level1Rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level2Rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLevelDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"AcesStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"staking.sol\":{\"keccak256\":\"0x4e94e1389ea2b3d744c322f028d8a0526515e4f349c926f820441387a739174c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aee6b21bbf790efbbb15fc8eaba2c4bbbe80442e92ff40b520d16e291da21294\",\"dweb:/ipfs/QmVVHSJZAqcEHUm1dVpHxEeKWevopkDJtnpNWnVKosFmNe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "staking.sol:AcesStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "staking.sol:AcesStaking",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 308,
								"contract": "staking.sol:AcesStaking",
								"label": "acceptedToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)274"
							},
							{
								"astId": 329,
								"contract": "staking.sol:AcesStaking",
								"label": "userLevelDeposit",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(User)317_storage))"
							},
							{
								"astId": 334,
								"contract": "staking.sol:AcesStaking",
								"label": "levelInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(Level)322_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)274": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(User)317_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct AcesStaking.User))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(User)317_storage)"
							},
							"t_mapping(t_uint256,t_struct(Level)322_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.Level)",
								"numberOfBytes": "32",
								"value": "t_struct(Level)322_storage"
							},
							"t_mapping(t_uint256,t_struct(User)317_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)317_storage"
							},
							"t_struct(Level)322_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.Level",
								"members": [
									{
										"astId": 319,
										"contract": "staking.sol:AcesStaking",
										"label": "APY",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 321,
										"contract": "staking.sol:AcesStaking",
										"label": "lockPeriod",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(User)317_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.User",
								"members": [
									{
										"astId": 310,
										"contract": "staking.sol:AcesStaking",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 312,
										"contract": "staking.sol:AcesStaking",
										"label": "started",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 314,
										"contract": "staking.sol:AcesStaking",
										"label": "lastClaim",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 316,
										"contract": "staking.sol:AcesStaking",
										"label": "unlockTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 297,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								296
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Pausable": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 297,
							"src": "115:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "617:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								296
							],
							"name": "Pausable",
							"nameLocation": "605:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 115,
									"name": "Paused",
									"nameLocation": "715:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:1"
									},
									"src": "709:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 120,
									"name": "Unpaused",
									"nameLocation": "826:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:1"
									},
									"src": "820:32:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "858:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 121,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "971:32:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "981:15:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:1"
									},
									"scope": 196,
									"src": "957:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1151:31:1",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "1161:14:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:1"
									},
									"scope": 196,
									"src": "1098:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1393:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 144,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1412:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:1"
											},
											{
												"id": 150,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 152,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:1"
									},
									"src": "1368:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1659:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 163,
									"name": "whenPaused",
									"nameLocation": "1646:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:1"
									},
									"src": "1637:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1912:66:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1946:25:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1898:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 196,
									"src": "1863:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2158:69:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2207:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "2193:27:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "2147:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:1"
									},
									"scope": 196,
									"src": "2110:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "587:1642:1",
							"usedErrors": []
						}
					],
					"src": "90:2140:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 274,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 274,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 274,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 274,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 274,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 274,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 264,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 273,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 275,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 281,
												"id": 284,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 296,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 290,
												"id": 293,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 296,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"AcesStaking": [
							868
						],
						"Context": [
							296
						],
						"IERC20": [
							274
						],
						"Ownable": [
							104
						],
						"Pausable": [
							196
						]
					},
					"id": 869,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 869,
							"sourceUnit": 275,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 869,
							"sourceUnit": 105,
							"src": "114:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 869,
							"sourceUnit": 197,
							"src": "167:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 302,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "248:7:4"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:4"
								},
								{
									"baseName": {
										"id": 304,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "257:8:4"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "257:8:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 868,
							"linearizedBaseContracts": [
								868,
								196,
								104,
								296
							],
							"name": "AcesStaking",
							"nameLocation": "233:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "451c3d80",
									"id": 308,
									"mutability": "mutable",
									"name": "acceptedToken",
									"nameLocation": "331:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "317:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$274",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 307,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 306,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 274,
											"src": "317:6:4"
										},
										"referencedDeclaration": 274,
										"src": "317:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$274",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AcesStaking.User",
									"id": 317,
									"members": [
										{
											"constant": false,
											"id": 310,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "417:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "409:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "409:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 312,
											"mutability": "mutable",
											"name": "started",
											"nameLocation": "442:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "434:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 311,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "434:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 314,
											"mutability": "mutable",
											"name": "lastClaim",
											"nameLocation": "467:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "459:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 313,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "459:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 316,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "494:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 317,
											"src": "486:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 315,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "486:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "394:4:4",
									"nodeType": "StructDefinition",
									"scope": 868,
									"src": "387:124:4",
									"visibility": "public"
								},
								{
									"canonicalName": "AcesStaking.Level",
									"id": 322,
									"members": [
										{
											"constant": false,
											"id": 319,
											"mutability": "mutable",
											"name": "APY",
											"nameLocation": "550:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 322,
											"src": "542:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 318,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "542:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "lockPeriod",
											"nameLocation": "571:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 322,
											"src": "563:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 320,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "563:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Level",
									"nameLocation": "526:5:4",
									"nodeType": "StructDefinition",
									"scope": 868,
									"src": "519:69:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "259ee752",
									"id": 329,
									"mutability": "mutable",
									"name": "userLevelDeposit",
									"nameLocation": "699:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "647:68:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
									},
									"typeName": {
										"id": 328,
										"keyType": {
											"id": 323,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "655:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "647:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
										},
										"valueType": {
											"id": 327,
											"keyType": {
												"id": 324,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "674:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "666:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
												"typeString": "mapping(uint256 => struct AcesStaking.User)"
											},
											"valueType": {
												"id": 326,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 325,
													"name": "User",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 317,
													"src": "685:4:4"
												},
												"referencedDeclaration": 317,
												"src": "685:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$317_storage_ptr",
													"typeString": "struct AcesStaking.User"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "edf501ad",
									"id": 334,
									"mutability": "mutable",
									"name": "levelInfo",
									"nameLocation": "754:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 868,
									"src": "721:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$322_storage_$",
										"typeString": "mapping(uint256 => struct AcesStaking.Level)"
									},
									"typeName": {
										"id": 333,
										"keyType": {
											"id": 330,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "729:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "721:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$322_storage_$",
											"typeString": "mapping(uint256 => struct AcesStaking.Level)"
										},
										"valueType": {
											"id": 332,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 331,
												"name": "Level",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 322,
												"src": "740:5:4"
											},
											"referencedDeclaration": 322,
											"src": "740:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Level_$322_storage_ptr",
												"typeString": "struct AcesStaking.Level"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 342,
									"name": "Deposit",
									"nameLocation": "791:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "808:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "800:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "800:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "822:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "814:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "814:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "837:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "829:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "829:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "799:45:4"
									},
									"src": "785:60:4"
								},
								{
									"anonymous": false,
									"id": 350,
									"name": "Withdraw",
									"nameLocation": "856:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "874:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "866:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "888:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "880:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "880:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "903:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "895:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:45:4"
									},
									"src": "850:61:4"
								},
								{
									"anonymous": false,
									"id": 358,
									"name": "Claim",
									"nameLocation": "922:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "937:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "929:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "929:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "951:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "943:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "966:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "958:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "958:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "928:45:4"
									},
									"src": "916:58:4"
								},
								{
									"anonymous": false,
									"id": 366,
									"name": "Compound",
									"nameLocation": "985:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1003:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "995:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "995:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "1017:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1009:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1032:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1024:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "994:45:4"
									},
									"src": "979:61:4"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "1111:47:4",
										"statements": [
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "acceptedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1121:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 373,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "1144:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 372,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1137:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$274_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1137:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"src": "1121:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$274",
														"typeString": "contract IERC20"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "1121:30:4"
											}
										]
									},
									"id": 378,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1102:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "1094:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:17:4"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1111:0:4"
									},
									"scope": 868,
									"src": "1082:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1244:25:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 383,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "1254:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1254:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1254:8:4"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 380,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1234:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1234:9:4"
										}
									],
									"name": "pause",
									"nameLocation": "1218:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1224:2:4"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1244:0:4"
									},
									"scope": 868,
									"src": "1209:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "1316:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 392,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1326:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1326:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "1326:10:4"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 390,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 389,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1306:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1306:9:4"
										}
									],
									"name": "unpause",
									"nameLocation": "1288:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:2:4"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1316:0:4"
									},
									"scope": 868,
									"src": "1279:64:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "1422:633:4",
										"statements": [
											{
												"assignments": [
													406
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "1440:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 488,
														"src": "1432:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 405,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1432:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"expression": {
														"id": 407,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1453:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1453:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1432:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1508:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 416,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1528:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AcesStaking_$868",
																		"typeString": "contract AcesStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AcesStaking_$868",
																		"typeString": "contract AcesStaking"
																	}
																],
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1520:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 414,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1520:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1520:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "1535:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 410,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "1481:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "1481:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1481:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1481:62:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 421,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1557:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 423,
																"indexExpression": {
																	"id": 422,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1574:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1557:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 425,
															"indexExpression": {
																"id": 424,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1586:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1557:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "1557:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1604:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1557:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "IfStatement",
												"src": "1554:124:4",
												"trueBody": {
													"id": 436,
													"nodeType": "Block",
													"src": "1606:72:4",
													"statements": [
														{
															"expression": {
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 429,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "1620:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 431,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 406,
																			"src": "1648:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 432,
																			"name": "_level",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 400,
																			"src": "1660:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 430,
																		"name": "calculateRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "1631:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1631:36:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1620:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 435,
															"nodeType": "ExpressionStatement",
															"src": "1620:47:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 438,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1688:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 441,
																"indexExpression": {
																	"id": 439,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1705:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1688:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 442,
															"indexExpression": {
																"id": 440,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1717:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1688:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "1688:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 444,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1736:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1688:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "1688:55:4"
											},
											{
												"expression": {
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 447,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1753:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 450,
																"indexExpression": {
																	"id": 448,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1770:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1753:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 451,
															"indexExpression": {
																"id": 449,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1782:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1753:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 312,
														"src": "1753:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 453,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1800:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1800:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1753:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 456,
												"nodeType": "ExpressionStatement",
												"src": "1753:62:4"
											},
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 457,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1825:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 460,
																"indexExpression": {
																	"id": 458,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1842:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1825:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 461,
															"indexExpression": {
																"id": 459,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1854:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1825:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "1825:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 463,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1874:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1874:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1825:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "1825:64:4"
											},
											{
												"expression": {
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 467,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1899:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 470,
																"indexExpression": {
																	"id": 468,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 406,
																	"src": "1916:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1899:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 471,
															"indexExpression": {
																"id": 469,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "1928:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1899:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 316,
														"src": "1899:47:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 473,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1949:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1949:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 475,
																	"name": "levelInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "1967:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$322_storage_$",
																		"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																	}
																},
																"id": 477,
																"indexExpression": {
																	"id": 476,
																	"name": "_level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "1977:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1967:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Level_$322_storage",
																	"typeString": "struct AcesStaking.Level storage ref"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lockPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 321,
															"src": "1967:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1949:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1899:96:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "1899:96:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 483,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "2020:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 484,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "2032:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 485,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "2040:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 482,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "2011:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2011:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "EmitStatement",
												"src": "2006:42:4"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 403,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 402,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1408:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1408:13:4"
										}
									],
									"name": "deposit",
									"nameLocation": "1359:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1376:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1368:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1368:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "1393:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "1385:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1367:33:4"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1422:0:4"
									},
									"scope": 868,
									"src": "1350:705:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "2121:508:4",
										"statements": [
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "2139:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "2131:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 496,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2131:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 500,
												"initialValue": {
													"expression": {
														"id": 498,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2152:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2152:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2131:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 502,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 329,
																			"src": "2180:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 504,
																		"indexExpression": {
																			"id": 503,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "2197:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2180:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 506,
																	"indexExpression": {
																		"id": 505,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "2209:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2180:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$317_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "2180:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 508,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2228:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2180:55:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206465706f736974",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2237:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															},
															"value": "Not enough deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															}
														],
														"id": 501,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2172:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "2172:86:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 514,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 329,
																			"src": "2276:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 516,
																		"indexExpression": {
																			"id": 515,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "2293:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2276:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 518,
																	"indexExpression": {
																		"id": 517,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "2305:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2276:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$317_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 316,
																"src": "2276:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 520,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2327:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2327:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2276:66:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4465706f736974206e6f7420756e6c6f636b656420796574",
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2344:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
																"typeString": "literal_string \"Deposit not unlocked yet\""
															},
															"value": "Deposit not unlocked yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2c2c79a9f9b7069d84f377709c77c4bcfd74fdeb5f14f66091a59ed38924d95c",
																"typeString": "literal_string \"Deposit not unlocked yet\""
															}
														],
														"id": 513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2268:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2268:103:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "2268:103:4"
											},
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2390:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "2382:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2382:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 532,
												"initialValue": {
													"arguments": [
														{
															"id": 529,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "2417:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 530,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "2429:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "2400:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2400:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2382:54:4"
											},
											{
												"expression": {
													"id": 540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 533,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2455:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 536,
																"indexExpression": {
																	"id": 534,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "2472:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2455:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 537,
															"indexExpression": {
																"id": 535,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "2484:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2455:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "2455:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 539,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "2503:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 541,
												"nodeType": "ExpressionStatement",
												"src": "2455:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 545,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "2544:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 546,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "2556:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 547,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "2566:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2556:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 542,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2521:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2521:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2521:53:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 552,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "2599:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2611:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 554,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "2614:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 551,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "2590:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 556,
												"nodeType": "EmitStatement",
												"src": "2585:37:4"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2070:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2088:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2080:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "2105:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2097:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:33:4"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2121:0:4"
									},
									"scope": 868,
									"src": "2061:568:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "2675:381:4",
										"statements": [
											{
												"assignments": [
													564
												],
												"declarations": [
													{
														"constant": false,
														"id": 564,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "2693:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 610,
														"src": "2685:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 563,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2685:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 567,
												"initialValue": {
													"expression": {
														"id": 565,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2706:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2706:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2685:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 569,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 329,
																			"src": "2734:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 571,
																		"indexExpression": {
																			"id": 570,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "2751:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2734:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 573,
																	"indexExpression": {
																		"id": 572,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "2763:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2734:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$317_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "2734:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2781:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2734:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2784:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 568,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2726:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2726:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "2726:78:4"
											},
											{
												"assignments": [
													581
												],
												"declarations": [
													{
														"constant": false,
														"id": 581,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2823:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 610,
														"src": "2815:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2815:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"arguments": [
														{
															"id": 583,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "2850:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "2862:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 582,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "2833:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2833:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2815:54:4"
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 587,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2880:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 590,
																"indexExpression": {
																	"id": 588,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 564,
																	"src": "2897:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2880:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 591,
															"indexExpression": {
																"id": 589,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "2909:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2880:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 592,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "2880:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 593,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2929:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2929:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2880:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "2880:64:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "2978:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "2990:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 597,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2955:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "2955:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2955:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 603,
												"nodeType": "ExpressionStatement",
												"src": "2955:43:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 605,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "3021:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "3033:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 607,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "3041:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 604,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "3014:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3014:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "EmitStatement",
												"src": "3009:40:4"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "2644:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "2659:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "2651:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:16:4"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2675:0:4"
									},
									"scope": 868,
									"src": "2635:421:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "3105:395:4",
										"statements": [
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "3123:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "3115:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 616,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3115:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 620,
												"initialValue": {
													"expression": {
														"id": 618,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3136:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3136:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3115:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 622,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 329,
																			"src": "3164:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 624,
																		"indexExpression": {
																			"id": 623,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 617,
																			"src": "3181:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3164:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 626,
																	"indexExpression": {
																		"id": 625,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "3193:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3164:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$317_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 310,
																"src": "3164:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3211:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3164:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3214:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3156:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3156:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 632,
												"nodeType": "ExpressionStatement",
												"src": "3156:78:4"
											},
											{
												"assignments": [
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "3253:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "3245:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"arguments": [
														{
															"id": 636,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "3280:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 637,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "3292:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "3263:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3263:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3245:54:4"
											},
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 640,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "3310:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 643,
																"indexExpression": {
																	"id": 641,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "3327:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3310:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 644,
															"indexExpression": {
																"id": 642,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "3339:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3310:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 645,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 310,
														"src": "3310:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 646,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "3358:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3310:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "3310:55:4"
											},
											{
												"expression": {
													"id": 657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 649,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "3375:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 652,
																"indexExpression": {
																	"id": 650,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "3392:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3375:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 653,
															"indexExpression": {
																"id": 651,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "3404:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3375:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "3375:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 655,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3424:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3424:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3375:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 658,
												"nodeType": "ExpressionStatement",
												"src": "3375:64:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 660,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "3465:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 661,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "3477:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 662,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3485:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "Compound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "3455:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3455:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "EmitStatement",
												"src": "3450:43:4"
											}
										]
									},
									"functionSelector": "aa5f7e26",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compound",
									"nameLocation": "3071:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "3089:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "3081:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3081:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:16:4"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3105:0:4"
									},
									"scope": 868,
									"src": "3062:438:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "3593:378:4",
										"statements": [
											{
												"assignments": [
													676
												],
												"declarations": [
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "3611:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "3603:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3603:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 686,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 677,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3624:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3624:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 679,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "3642:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 681,
																"indexExpression": {
																	"id": 680,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "3659:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3642:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 683,
															"indexExpression": {
																"id": 682,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "3666:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3642:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$317_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "3642:41:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3624:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3603:80:4"
											},
											{
												"assignments": [
													688
												],
												"declarations": [
													{
														"constant": false,
														"id": 688,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "3701:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "3693:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 687,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3693:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 689,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "3711:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 691,
															"indexExpression": {
																"id": 690,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "3728:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3711:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 693,
														"indexExpression": {
															"id": 692,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "3735:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3711:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$317_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 310,
													"src": "3711:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3693:57:4"
											},
											{
												"assignments": [
													697
												],
												"declarations": [
													{
														"constant": false,
														"id": 697,
														"mutability": "mutable",
														"name": "APY",
														"nameLocation": "3769:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "3761:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3761:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 702,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 698,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "3775:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$322_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 700,
														"indexExpression": {
															"id": 699,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "3785:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3775:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$322_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "APY",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 319,
													"src": "3775:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3761:35:4"
											},
											{
												"assignments": [
													704
												],
												"declarations": [
													{
														"constant": false,
														"id": 704,
														"mutability": "mutable",
														"name": "rewardsPerSecond",
														"nameLocation": "3815:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "3807:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 703,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3807:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 705,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 688,
																				"src": "3836:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 706,
																				"name": "APY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 697,
																				"src": "3846:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3836:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 708,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3835:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3853:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "3835:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 711,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3834:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3862:8:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "3834:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3807:63:4"
											},
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "rewardsEarned",
														"nameLocation": "3888:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "3880:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3880:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "timeStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 676,
														"src": "3904:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 718,
														"name": "rewardsPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "3917:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3904:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3880:53:4"
											},
											{
												"expression": {
													"id": 721,
													"name": "rewardsEarned",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 716,
													"src": "3951:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 674,
												"id": 722,
												"nodeType": "Return",
												"src": "3944:20:4"
											}
										]
									},
									"functionSelector": "beb8314c",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "3515:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "3541:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3533:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "3556:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3548:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:31:4"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "3585:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3584:9:4"
									},
									"scope": 868,
									"src": "3506:465:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "4169:301:4",
										"statements": [
											{
												"expression": {
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 744,
														"name": "level0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "4179:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$317_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 745,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "4188:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 747,
															"indexExpression": {
																"id": 746,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "4205:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4188:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 749,
														"indexExpression": {
															"hexValue": "30",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4212:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4188:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$317_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "4179:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$317_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "4179:35:4"
											},
											{
												"expression": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 752,
														"name": "level1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "4224:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$317_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 753,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "4233:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 755,
															"indexExpression": {
																"id": 754,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "4250:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4233:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 757,
														"indexExpression": {
															"hexValue": "31",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4257:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4233:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$317_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "4224:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$317_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "4224:35:4"
											},
											{
												"expression": {
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 760,
														"name": "level2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 736,
														"src": "4269:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$317_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 761,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "4278:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 763,
															"indexExpression": {
																"id": 762,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "4295:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4278:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$317_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 765,
														"indexExpression": {
															"hexValue": "32",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4278:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$317_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "4269:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$317_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "4269:35:4"
											},
											{
												"expression": {
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 768,
														"name": "level0Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 738,
														"src": "4317:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 770,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "4350:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4357:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 769,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "4333:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4333:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4317:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "4317:42:4"
											},
											{
												"expression": {
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 775,
														"name": "level1Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "4369:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 777,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "4402:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "31",
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4409:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 776,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "4385:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4385:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4369:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "4369:42:4"
											},
											{
												"expression": {
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 782,
														"name": "level2Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "4421:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 784,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 726,
																"src": "4454:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "32",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4461:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 783,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "4437:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4437:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4421:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "4421:42:4"
											}
										]
									},
									"functionSelector": "6386c1c7",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nameLocation": "3990:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4010:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "4002:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4002:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4001:15:4"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "level0",
												"nameLocation": "4051:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "4039:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$317_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 728,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "4039:4:4"
													},
													"referencedDeclaration": 317,
													"src": "4039:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$317_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "level1",
												"nameLocation": "4072:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "4060:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$317_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 732,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 731,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "4060:4:4"
													},
													"referencedDeclaration": 317,
													"src": "4060:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$317_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "level2",
												"nameLocation": "4092:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "4080:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$317_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 735,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 734,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 317,
														"src": "4080:4:4"
													},
													"referencedDeclaration": 317,
													"src": "4080:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$317_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "level0Rewards",
												"nameLocation": "4108:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "4100:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "level1Rewards",
												"nameLocation": "4131:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "4123:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "level2Rewards",
												"nameLocation": "4155:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "4147:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4147:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4038:131:4"
									},
									"scope": 868,
									"src": "3981:489:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "4585:105:4",
										"statements": [
											{
												"expression": {
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 802,
														"name": "level0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "4595:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$322_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 803,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4604:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$322_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 805,
														"indexExpression": {
															"hexValue": "30",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4614:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4604:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$322_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "4595:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$322_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "4595:21:4"
											},
											{
												"expression": {
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 808,
														"name": "level1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4626:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$322_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 809,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4635:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$322_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 811,
														"indexExpression": {
															"hexValue": "31",
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4645:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4635:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$322_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "4626:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$322_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "4626:21:4"
											},
											{
												"expression": {
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 814,
														"name": "level2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4657:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$322_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 815,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "4666:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$322_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 817,
														"indexExpression": {
															"hexValue": "32",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4676:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4666:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$322_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "4657:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$322_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "4657:21:4"
											}
										]
									},
									"functionSelector": "e788cee5",
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevelsInfo",
									"nameLocation": "4485:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4498:2:4"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "level0",
												"nameLocation": "4536:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4523:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$322_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 793,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 792,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "4523:5:4"
													},
													"referencedDeclaration": 322,
													"src": "4523:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$322_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "level1",
												"nameLocation": "4557:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4544:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$322_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 796,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 795,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "4544:5:4"
													},
													"referencedDeclaration": 322,
													"src": "4544:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$322_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "level2",
												"nameLocation": "4578:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "4565:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$322_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 798,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "4565:5:4"
													},
													"referencedDeclaration": 322,
													"src": "4565:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$322_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4522:63:4"
									},
									"scope": 868,
									"src": "4476:214:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "4790:93:4",
										"statements": [
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 832,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "4800:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 834,
															"indexExpression": {
																"id": 833,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "4810:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4800:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$322_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "APY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "4800:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 836,
														"name": "_APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "4823:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4800:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "4800:27:4"
											},
											{
												"expression": {
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 839,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "4837:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 841,
															"indexExpression": {
																"id": 840,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "4847:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4837:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$322_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 842,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "4837:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 843,
														"name": "_lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "4867:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4837:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "4837:39:4"
											}
										]
									},
									"functionSelector": "32e96203",
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 830,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 829,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4780:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4780:9:4"
										}
									],
									"name": "changeLevelValues",
									"nameLocation": "4705:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "4731:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "4723:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4723:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "_APY",
												"nameLocation": "4746:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "4738:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "_lockTime",
												"nameLocation": "4760:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "4752:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4752:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4722:48:4"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4790:0:4"
									},
									"scope": 868,
									"src": "4696:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "4934:91:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 855,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4967:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4967:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 861,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5011:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AcesStaking_$868",
																				"typeString": "contract AcesStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AcesStaking_$868",
																				"typeString": "contract AcesStaking"
																			}
																		],
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5003:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 859,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5003:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5003:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 857,
																	"name": "acceptedToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "4979:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$274",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 213,
																"src": "4979:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4979:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 852,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4944:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 854,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 223,
														"src": "4944:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4944:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "4944:74:4"
											}
										]
									},
									"functionSelector": "8d8f2adb",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 850,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 849,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4924:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4924:9:4"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "4898:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4912:2:4"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4934:0:4"
									},
									"scope": 868,
									"src": "4889:136:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 869,
							"src": "224:4803:4",
							"usedErrors": []
						}
					],
					"src": "32:4995:4"
				},
				"id": 4
			}
		}
	}
}