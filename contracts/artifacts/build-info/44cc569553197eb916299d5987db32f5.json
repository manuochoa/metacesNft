{
	"id": "44cc569553197eb916299d5987db32f5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ncontract AcesStaking is Ownable, Pausable {\n    // Address of the token for the staking.\n    IERC20 public acceptedToken;\n\n    uint256 earlyWithdrawFee = 10;\n    \n    // Struc with user details.\n    struct User {\n        uint256 balance;\n        uint256 claimed;\n        uint256 started;\n        uint256 lastClaim;\n        uint256 unlockTime;\n    }  \n\n    struct Level {\n        uint256 APY;\n        uint256 lockPeriod;\n    } \n    \n    // Mapping for user details of  each class.\n    mapping(address => mapping(uint256 => User)) public userLevelDeposit;\n    mapping(uint256 => Level) public levelInfo;\n\n    // Events.\n    event Deposit (address user, uint256 class, uint256 amount);\n    event Withdraw (address user, uint256 class, uint256 amount);\n    event Claim (address user, uint256 class, uint256 amount);\n    event Compound (address user, uint256 class, uint256 amount);\n \n    // Set the token to be staked.\n    constructor(address _token ) {\n        acceptedToken = IERC20(_token);\n\n        // Level 0 - 1%  daily / 30 Days\n        levelInfo[0].APY = 36500;\n        levelInfo[0].lockPeriod = 30 days;\n        // Level 1 - 1.25% daily / 90 Days\n        levelInfo[1].APY = 45625;\n        levelInfo[1].lockPeriod = 90 days;\n        // Level 2 - 1.5% daily / 180 Days\n        levelInfo[2].APY = 54750;\n        levelInfo[2].lockPeriod = 180 days;\n        // Level 3 -  2% daily / 365 Days\n        levelInfo[3].APY = 73000;\n        levelInfo[3].lockPeriod = 365 days;\n    }   \n    \n    // Pause and Unpause the contract\n    function pause () public onlyOwner {\n        _pause();\n    }\n    \n    function unpause () public onlyOwner {\n        _unpause();\n    } \n\n    function deposit (uint256 _amount, uint256 _level) public whenNotPaused {\n        address _msgSender = msg.sender;       \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        if(userLevelDeposit[_msgSender][_level].balance > 0){\n            _amount += calculateRewards(_msgSender, _level);\n        }\n\n        userLevelDeposit[_msgSender][_level].balance += _amount;\n        userLevelDeposit[_msgSender][_level].started = block.timestamp;\n        userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp;\n        userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod;\n\n        emit Deposit (_msgSender, _level, _amount);\n    }\n\n    function withdraw (uint256 _amount, uint256 _level) public  {\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n        uint256 withdrawAmount = _amount + rewards;\n\n        uint256 withdrawFee;\n        if(userLevelDeposit[_msgSender][_level].unlockTime > block.timestamp){\n            withdrawFee = (withdrawAmount * earlyWithdrawFee) / 100;\n        }\n\n        userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp;        \n        userLevelDeposit[_msgSender][_level].balance -= _amount;\n\n        acceptedToken.transfer(_msgSender, withdrawAmount - withdrawFee);\n\n        emit Withdraw(_msgSender, 0, _amount);\n    }\n\n    function claim (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp;\n        userLevelDeposit[_msgSender][_level].claimed += rewards;\n\n        acceptedToken.transfer(_msgSender, rewards);\n\n        emit Claim (_msgSender, _level, rewards);\n    }\n\n    function compound (uint256 _level) external{\n        address _msgSender = msg.sender;\n        require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\");\n\n        uint256 rewards = calculateRewards(_msgSender, _level);\n\n        userLevelDeposit[_msgSender][_level].balance += rewards;\n        userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp;\n\n        emit Compound (_msgSender, _level, rewards);\n    }\n\n    function calculateRewards (address _user, uint256 _level) public view returns (uint256){\n        uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].lastClaim;\n        uint256 balance = userLevelDeposit[_user][_level].balance; \n        uint256 APY = levelInfo[_level].APY;\n\n        uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days;\n        uint256 rewardsEarned = timeStaked * rewardsPerSecond;\n\n        return rewardsEarned;\n    }    \n\n    function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, User memory level3, uint256 level0Rewards, uint256 level1Rewards, uint256 level2Rewards, uint256 level3Rewards){\n        level0 = userLevelDeposit[_user][0];\n        level1 = userLevelDeposit[_user][1];\n        level2 = userLevelDeposit[_user][2];  \n        level3 = userLevelDeposit[_user][3];  \n\n        level0Rewards = calculateRewards(_user, 0);\n        level1Rewards = calculateRewards(_user, 1);\n        level2Rewards = calculateRewards(_user, 2);\n        level3Rewards = calculateRewards(_user, 3);\n    }\n\n    function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2, Level memory level3){\n        level0 = levelInfo[0];\n        level1 = levelInfo[1];\n        level2 = levelInfo[2];     \n        level3 = levelInfo[3];     \n    }\n\n    function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {\n        levelInfo[level].APY = _APY;\n        levelInfo[level].lockPeriod = _lockTime;\n    }\n\n    function changeEarlyWithdrawFee(uint256 _newFee) external onlyOwner {\n        earlyWithdrawFee = _newFee;\n    }\n\n    function withdrawTokens() external onlyOwner {\n        acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this)));\n    }\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 122,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"AcesStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Claim",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Compound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "class",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptedToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "calculateRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newFee",
									"type": "uint256"
								}
							],
							"name": "changeEarlyWithdrawFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_lockTime",
									"type": "uint256"
								}
							],
							"name": "changeLevelValues",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLevelsInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level1",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level2",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "APY",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lockPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.Level",
									"name": "level3",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "getUserInfo",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "claimed",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastClaim",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level0",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "claimed",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastClaim",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level1",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "claimed",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastClaim",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level2",
									"type": "tuple"
								},
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "balance",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "claimed",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "started",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastClaim",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										}
									],
									"internalType": "struct AcesStaking.User",
									"name": "level3",
									"type": "tuple"
								},
								{
									"internalType": "uint256",
									"name": "level0Rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "level1Rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "level2Rewards",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "level3Rewards",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "levelInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lockPeriod",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "userLevelDeposit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "started",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastClaim",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":224:6160  contract AcesStaking is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":378:380  10 */\n  0x0a\n    /* \"staking.sol\":351:380  uint256 earlyWithdrawFee = 10 */\n  0x02\n  sstore\n    /* \"staking.sol\":1143:1699  constructor(address _token ) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":991:996  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  dup2\n  sstore\n  0x01\n    /* \"staking.sol\":1182:1212  acceptedToken = IERC20(_token) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  swap1\n  swap4\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  swap2\n  sstore\n    /* \"staking.sol\":1264:1273  levelInfo */\n  0x04\n    /* \"staking.sol\":1264:1276  levelInfo[0] */\n  0x20\n  mstore\n    /* \"staking.sol\":1283:1288  36500 */\n  0x8e94\n    /* \"staking.sol\":1264:1276  levelInfo[0] */\n  0x17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec\n    /* \"staking.sol\":1264:1288  levelInfo[0].APY = 36500 */\n  sstore\n    /* \"staking.sol\":1324:1331  30 days */\n  0x278d00\n    /* \"staking.sol\":1298:1321  levelInfo[0].lockPeriod */\n  0x17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ed\n    /* \"staking.sol\":1298:1331  levelInfo[0].lockPeriod = 30 days */\n  sstore\n    /* \"staking.sol\":1403:1408  45625 */\n  0xb239\n    /* \"staking.sol\":1384:1396  levelInfo[1] */\n  0xabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05\n    /* \"staking.sol\":1384:1408  levelInfo[1].APY = 45625 */\n  sstore\n    /* \"staking.sol\":1444:1451  90 days */\n  0x76a700\n    /* \"staking.sol\":1418:1441  levelInfo[1].lockPeriod */\n  0xabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe06\n    /* \"staking.sol\":1418:1451  levelInfo[1].lockPeriod = 90 days */\n  sstore\n    /* \"staking.sol\":1523:1528  54750 */\n  0xd5de\n    /* \"staking.sol\":1504:1516  levelInfo[2] */\n  0x91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7\n    /* \"staking.sol\":1504:1528  levelInfo[2].APY = 54750 */\n  sstore\n    /* \"staking.sol\":1564:1572  180 days */\n  0xed4e00\n    /* \"staking.sol\":1538:1561  levelInfo[2].lockPeriod */\n  0x91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a8\n    /* \"staking.sol\":1538:1572  levelInfo[2].lockPeriod = 180 days */\n  sstore\n    /* \"staking.sol\":1634:1635  3 */\n  0x03\n    /* \"staking.sol\":1624:1636  levelInfo[3] */\n  swap1\n  mstore\n    /* \"staking.sol\":1643:1648  73000 */\n  0x011d28\n    /* \"staking.sol\":1624:1636  levelInfo[3] */\n  0x2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa0\n    /* \"staking.sol\":1624:1648  levelInfo[3].APY = 73000 */\n  sstore\n    /* \"staking.sol\":1684:1692  365 days */\n  0x01e13380\n    /* \"staking.sol\":1658:1681  levelInfo[3].lockPeriod */\n  0x2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa1\n    /* \"staking.sol\":1658:1692  levelInfo[3].lockPeriod = 365 days */\n  sstore\n    /* \"staking.sol\":224:6160  contract AcesStaking is Ownable, Pausable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"staking.sol\":224:6160  contract AcesStaking is Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":224:6160  contract AcesStaking is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xbeb8314c\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xbeb8314c\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe788cee5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xedf501ad\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x8456cb59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8d8f2adb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xaa5f7e26\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xaff3b697\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x441a3e70\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x451c3d80\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6386c1c7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x259ee752\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x32e96203\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":708:776  mapping(address => mapping(uint256 => User)) public userLevelDeposit */\n    tag_3:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      0x03\n      0x20\n      dup2\n      dup2\n      mstore\n      0x00\n      swap4\n      dup5\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap2\n      dup4\n      mstore\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      swap4\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap4\n      swap1\n      swap3\n      swap1\n      swap2\n      dup6\n      jump\n    tag_25:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8740:8765   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":8796:8798   */\n      0x20\n        /* \"#utility.yul\":8781:8799   */\n      dup7\n      add\n        /* \"#utility.yul\":8774:8808   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":8824:8842   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":8817:8851   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8882:8884   */\n      0x60\n        /* \"#utility.yul\":8867:8885   */\n      dup4\n      add\n        /* \"#utility.yul\":8860:8894   */\n      mstore\n        /* \"#utility.yul\":8925:8928   */\n      0x80\n        /* \"#utility.yul\":8910:8929   */\n      dup3\n      add\n        /* \"#utility.yul\":8903:8938   */\n      mstore\n        /* \"#utility.yul\":8727:8730   */\n      0xa0\n        /* \"#utility.yul\":8712:8731   */\n      add\n        /* \"staking.sol\":708:776  mapping(address => mapping(uint256 => User)) public userLevelDeposit */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":5712:5899  function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {... */\n    tag_4:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      stop\n        /* \"staking.sol\":3388:3874  function claim (uint256 _level) external{... */\n    tag_5:\n      tag_31\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"staking.sol\":1820:1884  function unpause () public onlyOwner {... */\n    tag_6:\n      tag_31\n      tag_40\n      jump\t// in\n        /* \"staking.sol\":2602:3382  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_7:\n      tag_31\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n    tag_8:\n      sload(0x01)\n      tag_45\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_45:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2505:2537   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2487:2538   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2475:2477   */\n      0x20\n        /* \"#utility.yul\":2460:2478   */\n      add\n        /* \"staking.sol\":317:344  IERC20 public acceptedToken */\n      tag_29\n        /* \"#utility.yul\":2341:2544   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":4081:4095   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4074:4096   */\n      iszero\n        /* \"#utility.yul\":4056:4097   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4044:4046   */\n      0x20\n        /* \"#utility.yul\":4029:4047   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":3916:4103   */\n      jump\n        /* \"staking.sol\":4799:5429  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, User memory level3, uint256 level0Rewards, uint256 level1Rewards, uint256 level2Rewards, uint256 level3Rewards){... */\n    tag_10:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_29\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_31\n      tag_60\n      jump\t// in\n        /* \"staking.sol\":1750:1810  function pause () public onlyOwner {... */\n    tag_12:\n      tag_31\n      tag_62\n      jump\t// in\n        /* \"staking.sol\":6022:6158  function withdrawTokens() external onlyOwner {... */\n    tag_13:\n      tag_31\n      tag_64\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_45)\n        /* \"staking.sol\":3880:4318  function compound (uint256 _level) external{... */\n    tag_15:\n      tag_31\n      tag_70\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"staking.sol\":5905:6016  function changeEarlyWithdrawFee(uint256 _newFee) external onlyOwner {... */\n    tag_16:\n      tag_31\n      tag_73\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"staking.sol\":4324:4789  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_17:\n      tag_75\n      tag_76\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n        /* \"#utility.yul\":8192:8217   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8180:8182   */\n      0x20\n        /* \"#utility.yul\":8165:8183   */\n      add\n        /* \"staking.sol\":4324:4789  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n      tag_29\n        /* \"#utility.yul\":8046:8223   */\n      jump\n        /* \"staking.sol\":1891:2596  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_18:\n      tag_31\n      tag_81\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"staking.sol\":5435:5706  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2, Level memory level3){... */\n    tag_19:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n      dup2\n      dup2\n      mstore\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"staking.sol\":5575:5596  level0 = levelInfo[0] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      dup5\n      mstore\n        /* \"staking.sol\":5584:5596  levelInfo[0] */\n      0x17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec\n        /* \"staking.sol\":5575:5596  level0 = levelInfo[0] */\n      sload\n      dup2\n      mstore\n      sload(0x17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ed)\n      dup2\n      dup5\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5606:5627  level1 = levelInfo[1] */\n      dup5\n      mload\n      dup1\n      dup7\n      add\n      dup7\n      mstore\n        /* \"staking.sol\":5615:5627  levelInfo[1] */\n      0xabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05\n        /* \"staking.sol\":5606:5627  level1 = levelInfo[1] */\n      sload\n      dup2\n      mstore\n      sload(0xabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe06)\n      dup2\n      dup7\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5637:5658  level2 = levelInfo[2] */\n      dup7\n      mload\n      dup1\n      dup9\n      add\n      dup9\n      mstore\n        /* \"staking.sol\":5646:5658  levelInfo[2] */\n      0x91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a7\n        /* \"staking.sol\":5637:5658  level2 = levelInfo[2] */\n      sload\n      dup2\n      mstore\n      sload(0x91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a8)\n      dup2\n      dup9\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5692:5693  3 */\n      0x03\n        /* \"staking.sol\":5682:5694  levelInfo[3] */\n      swap1\n      swap7\n      mstore\n        /* \"staking.sol\":5584:5593  levelInfo */\n      0x04\n        /* \"staking.sol\":5682:5694  levelInfo[3] */\n      dup8\n      mstore\n        /* \"staking.sol\":5673:5694  level3 = levelInfo[3] */\n      dup8\n      mload\n      dup1\n      dup10\n      add\n      dup10\n      mstore\n        /* \"staking.sol\":5682:5694  levelInfo[3] */\n      0x2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa0\n        /* \"staking.sol\":5673:5694  level3 = levelInfo[3] */\n      sload\n      dup2\n      mstore\n      sload(0x2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa1)\n      dup2\n      dup10\n      add\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5435:5706  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2, Level memory level3){... */\n      dup10\n      mload\n        /* \"#utility.yul\":1943:1955   */\n      swap7\n      mload\n        /* \"#utility.yul\":1931:1956   */\n      dup8\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap5\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      swap8\n      dup7\n      add\n        /* \"#utility.yul\":1965:2012   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":1943:1955   */\n      swap2\n      mload\n        /* \"#utility.yul\":6975:6993   */\n      swap7\n      dup5\n      add\n        /* \"#utility.yul\":1931:1956   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap5\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      0x60\n      dup4\n      add\n        /* \"#utility.yul\":1965:2012   */\n      mstore\n        /* \"#utility.yul\":1943:1955   */\n      swap4\n      mload\n        /* \"#utility.yul\":7050:7053   */\n      0x80\n        /* \"#utility.yul\":7035:7054   */\n      dup3\n      add\n        /* \"#utility.yul\":1931:1956   */\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap1\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      0xa0\n      dup3\n      add\n        /* \"#utility.yul\":1965:2012   */\n      mstore\n        /* \"#utility.yul\":1943:1955   */\n      swap1\n      mload\n        /* \"#utility.yul\":7111:7114   */\n      0xc0\n        /* \"#utility.yul\":7096:7115   */\n      dup3\n      add\n        /* \"#utility.yul\":1931:1956   */\n      mstore\n        /* \"#utility.yul\":1988:2011   */\n      swap1\n      mload\n        /* \"#utility.yul\":1972:1986   */\n      0xe0\n      dup3\n      add\n        /* \"#utility.yul\":1965:2012   */\n      mstore\n        /* \"#utility.yul\":6879:6882   */\n      0x0100\n        /* \"#utility.yul\":6864:6883   */\n      add\n        /* \"staking.sol\":5435:5706  function getLevelsInfo() external view returns(Level memory level0, Level memory level1, Level memory level2, Level memory level3){... */\n      tag_29\n        /* \"#utility.yul\":6485:7122   */\n      jump\n        /* \"staking.sol\":782:824  mapping(uint256 => Level) public levelInfo */\n    tag_20:\n      tag_87\n      tag_88\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_88:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_87:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8402:8427   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":8458:8460   */\n      0x20\n        /* \"#utility.yul\":8443:8461   */\n      dup4\n      add\n        /* \"#utility.yul\":8436:8470   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":8375:8393   */\n      add\n        /* \"staking.sol\":782:824  mapping(uint256 => Level) public levelInfo */\n      tag_29\n        /* \"#utility.yul\":8228:8476   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_31\n      tag_93\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"staking.sol\":5712:5899  function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"staking.sol\":5816:5832  levelInfo[level] */\n      0x00\n      swap3\n      dup4\n      mstore\n        /* \"staking.sol\":5816:5825  levelInfo */\n      0x04\n        /* \"staking.sol\":5816:5832  levelInfo[level] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n        /* \"staking.sol\":5816:5843  levelInfo[level].APY = _APY */\n      swap1\n      dup2\n      sstore\n        /* \"staking.sol\":5853:5880  levelInfo[level].lockPeriod */\n      0x01\n      add\n        /* \"staking.sol\":5853:5892  levelInfo[level].lockPeriod = _lockTime */\n      sstore\n        /* \"staking.sol\":5712:5899  function changeLevelValues(uint256 level, uint256 _APY, uint256 _lockTime) external onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":3388:3874  function claim (uint256 _level) external{... */\n    tag_38:\n        /* \"staking.sol\":3459:3469  msg.sender */\n      caller\n        /* \"staking.sol\":3438:3456  address _msgSender */\n      0x00\n        /* \"staking.sol\":3487:3515  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":3487:3503  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":3487:3515  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3487:3523  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":3487:3531  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":3479:3557  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5994:5996   */\n      0x20\n        /* \"staking.sol\":3479:3557  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5976:5997   */\n      mstore\n        /* \"#utility.yul\":6033:6035   */\n      0x11\n        /* \"#utility.yul\":6013:6031   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6006:6036   */\n      mstore\n      shl(0x7a, 0x139bc81858dd1a5d994819195c1bdcda5d)\n        /* \"#utility.yul\":6052:6070   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6045:6092   */\n      mstore\n        /* \"#utility.yul\":6109:6127   */\n      0x64\n      add\n        /* \"staking.sol\":3479:3557  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_100\n        /* \"#utility.yul\":5792:6133   */\n      jump\n        /* \"staking.sol\":3479:3557  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n    tag_104:\n        /* \"staking.sol\":3568:3583  uint256 rewards */\n      0x00\n        /* \"staking.sol\":3586:3622  calculateRewards(_msgSender, _level) */\n      tag_107\n        /* \"staking.sol\":3603:3613  _msgSender */\n      dup3\n        /* \"staking.sol\":3615:3621  _level */\n      dup5\n        /* \"staking.sol\":3586:3602  calculateRewards */\n      tag_77\n        /* \"staking.sol\":3586:3622  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3633:3661  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3633:3649  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":3633:3661  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":3633:3669  userLevelDeposit[_msgSender][_level] */\n      dup9\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      dup3\n      keccak256\n        /* \"staking.sol\":3682:3697  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3633:3679  userLevelDeposit[_msgSender][_level].lastClaim */\n      swap2\n      dup2\n      add\n        /* \"staking.sol\":3633:3697  userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":3707:3751  userLevelDeposit[_msgSender][_level].claimed */\n      0x01\n      add\n        /* \"staking.sol\":3707:3762  userLevelDeposit[_msgSender][_level].claimed += rewards */\n      dup1\n      sload\n        /* \"staking.sol\":3568:3622  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"staking.sol\":3707:3751  userLevelDeposit[_msgSender][_level].claimed */\n      swap1\n      swap2\n        /* \"staking.sol\":3633:3661  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":3707:3762  userLevelDeposit[_msgSender][_level].claimed += rewards */\n      tag_108\n      swap1\n        /* \"staking.sol\":3568:3622  uint256 rewards = calculateRewards(_msgSender, _level) */\n      dup5\n      swap1\n        /* \"staking.sol\":3707:3762  userLevelDeposit[_msgSender][_level].claimed += rewards */\n      tag_109\n      jump\t// in\n    tag_108:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":3773:3786  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":3773:3816  acceptedToken.transfer(_msgSender, rewards) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3479:3511   */\n      dup5\n      dup2\n      and\n        /* \"staking.sol\":3773:3816  acceptedToken.transfer(_msgSender, rewards) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3461:3512   */\n      mstore\n        /* \"#utility.yul\":3528:3546   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3521:3555   */\n      dup5\n      swap1\n      mstore\n        /* \"staking.sol\":3773:3786  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":3773:3795  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3434:3452   */\n      0x44\n      add\n        /* \"staking.sol\":3773:3816  acceptedToken.transfer(_msgSender, rewards) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_114\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      pop\n        /* \"staking.sol\":3832:3867  Claim (_msgSender, _level, rewards) */\n      0x34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7\n        /* \"staking.sol\":3839:3849  _msgSender */\n      dup3\n        /* \"staking.sol\":3851:3857  _level */\n      dup5\n        /* \"staking.sol\":3859:3866  rewards */\n      dup4\n        /* \"staking.sol\":3832:3867  Claim (_msgSender, _level, rewards) */\n      mload(0x40)\n      tag_117\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":3428:3874  {... */\n      pop\n      pop\n        /* \"staking.sol\":3388:3874  function claim (uint256 _level) external{... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":1820:1884  function unpause () public onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_122:\n        /* \"staking.sol\":1867:1877  _unpause() */\n      tag_125\n        /* \"staking.sol\":1867:1875  _unpause */\n      tag_126\n        /* \"staking.sol\":1867:1877  _unpause() */\n      jump\t// in\n    tag_125:\n        /* \"staking.sol\":1820:1884  function unpause () public onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":2602:3382  function withdraw (uint256 _amount, uint256 _level) public  {... */\n    tag_44:\n        /* \"staking.sol\":2693:2703  msg.sender */\n      caller\n        /* \"staking.sol\":2672:2690  address _msgSender */\n      0x00\n        /* \"staking.sol\":2721:2749  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":2721:2737  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":2721:2749  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2721:2757  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":2721:2765  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":2721:2776  userLevelDeposit[_msgSender][_level].balance >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"staking.sol\":2713:2799  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6340:6342   */\n      0x20\n        /* \"staking.sol\":2713:2799  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6322:6343   */\n      mstore\n        /* \"#utility.yul\":6379:6381   */\n      0x12\n        /* \"#utility.yul\":6359:6377   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6352:6382   */\n      mstore\n      shl(0x72, 0x139bdd08195b9bdd59da0819195c1bdcda5d)\n        /* \"#utility.yul\":6398:6416   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6391:6439   */\n      mstore\n        /* \"#utility.yul\":6456:6474   */\n      0x64\n      add\n        /* \"staking.sol\":2713:2799  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n      tag_100\n        /* \"#utility.yul\":6138:6480   */\n      jump\n        /* \"staking.sol\":2713:2799  require(userLevelDeposit[_msgSender][_level].balance >= _amount, \"Not enough deposit\") */\n    tag_128:\n        /* \"staking.sol\":2810:2825  uint256 rewards */\n      0x00\n        /* \"staking.sol\":2828:2864  calculateRewards(_msgSender, _level) */\n      tag_131\n        /* \"staking.sol\":2845:2855  _msgSender */\n      dup3\n        /* \"staking.sol\":2857:2863  _level */\n      dup5\n        /* \"staking.sol\":2828:2844  calculateRewards */\n      tag_77\n        /* \"staking.sol\":2828:2864  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_131:\n        /* \"staking.sol\":2810:2864  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap1\n      pop\n        /* \"staking.sol\":2874:2896  uint256 withdrawAmount */\n      0x00\n        /* \"staking.sol\":2899:2916  _amount + rewards */\n      tag_132\n        /* \"staking.sol\":2810:2864  uint256 rewards = calculateRewards(_msgSender, _level) */\n      dup3\n        /* \"staking.sol\":2899:2906  _amount */\n      dup7\n        /* \"staking.sol\":2899:2916  _amount + rewards */\n      tag_109\n      jump\t// in\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2959:2987  userLevelDeposit[_msgSender] */\n      dup5\n      and\n        /* \"staking.sol\":2927:2946  uint256 withdrawFee */\n      0x00\n        /* \"staking.sol\":2959:2987  userLevelDeposit[_msgSender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2959:2975  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":2959:2987  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2959:2995  userLevelDeposit[_msgSender][_level] */\n      dup9\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":2959:3006  userLevelDeposit[_msgSender][_level].unlockTime */\n      0x04\n      add\n      sload\n        /* \"staking.sol\":2874:2916  uint256 withdrawAmount = _amount + rewards */\n      swap2\n      swap3\n      pop\n        /* \"staking.sol\":2927:2946  uint256 withdrawFee */\n      swap1\n        /* \"staking.sol\":3009:3024  block.timestamp */\n      timestamp\n      lt\n        /* \"staking.sol\":2956:3105  if(userLevelDeposit[_msgSender][_level].unlockTime > block.timestamp){... */\n      iszero\n      tag_133\n      jumpi\n        /* \"staking.sol\":3091:3094  100 */\n      0x64\n        /* \"staking.sol\":3071:3087  earlyWithdrawFee */\n      sload(0x02)\n        /* \"staking.sol\":3054:3068  withdrawAmount */\n      dup4\n        /* \"staking.sol\":3054:3087  withdrawAmount * earlyWithdrawFee */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"staking.sol\":3053:3094  (withdrawAmount * earlyWithdrawFee) / 100 */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"staking.sol\":3039:3094  withdrawFee = (withdrawAmount * earlyWithdrawFee) / 100 */\n      swap1\n      pop\n        /* \"staking.sol\":2956:3105  if(userLevelDeposit[_msgSender][_level].unlockTime > block.timestamp){... */\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3115:3143  userLevelDeposit[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3115:3131  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":3115:3143  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":3115:3151  userLevelDeposit[_msgSender][_level] */\n      dup10\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      dup3\n      keccak256\n        /* \"staking.sol\":3164:3179  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3115:3161  userLevelDeposit[_msgSender][_level].lastClaim */\n      swap2\n      dup2\n      add\n        /* \"staking.sol\":3115:3179  userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":3197:3252  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":3245:3252  _amount */\n      dup9\n      swap3\n        /* \"staking.sol\":3115:3143  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":3197:3252  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      tag_138\n      swap1\n        /* \"staking.sol\":3245:3252  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":3197:3252  userLevelDeposit[_msgSender][_level].balance -= _amount */\n      tag_139\n      jump\t// in\n    tag_138:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":3263:3276  acceptedToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"staking.sol\":3263:3285  acceptedToken.transfer */\n      0xa9059cbb\n        /* \"staking.sol\":3286:3296  _msgSender */\n      dup6\n        /* \"staking.sol\":3298:3326  withdrawAmount - withdrawFee */\n      tag_140\n        /* \"staking.sol\":3315:3326  withdrawFee */\n      dup5\n        /* \"staking.sol\":3298:3312  withdrawAmount */\n      dup7\n        /* \"staking.sol\":3298:3326  withdrawAmount - withdrawFee */\n      tag_139\n      jump\t// in\n    tag_140:\n        /* \"staking.sol\":3263:3327  acceptedToken.transfer(_msgSender, withdrawAmount - withdrawFee) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3479:3511   */\n      swap1\n      swap3\n      and\n        /* \"staking.sol\":3263:3327  acceptedToken.transfer(_msgSender, withdrawAmount - withdrawFee) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3461:3512   */\n      mstore\n        /* \"#utility.yul\":3528:3546   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3521:3555   */\n      mstore\n        /* \"#utility.yul\":3434:3452   */\n      0x44\n      add\n        /* \"staking.sol\":3263:3327  acceptedToken.transfer(_msgSender, withdrawAmount - withdrawFee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_145:\n      pop\n        /* \"staking.sol\":3343:3375  Withdraw(_msgSender, 0, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"staking.sol\":3352:3362  _msgSender */\n      dup5\n        /* \"staking.sol\":3364:3365  0 */\n      0x00\n        /* \"staking.sol\":3367:3374  _amount */\n      dup9\n        /* \"staking.sol\":3343:3375  Withdraw(_msgSender, 0, _amount) */\n      mload(0x40)\n      tag_146\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":2662:3382  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":2602:3382  function withdraw (uint256 _amount, uint256 _level) public  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":4799:5429  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, User memory level3, uint256 level0Rewards, uint256 level1Rewards, uint256 level2Rewards, uint256 level3Rewards){... */\n    tag_56:\n        /* \"staking.sol\":4857:4875  User memory level0 */\n      tag_149\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"staking.sol\":4878:4896  User memory level1 */\n      tag_151\n      tag_150\n      jump\t// in\n    tag_151:\n        /* \"staking.sol\":4898:4916  User memory level2 */\n      tag_152\n      tag_150\n      jump\t// in\n    tag_152:\n        /* \"staking.sol\":4918:4936  User memory level3 */\n      tag_153\n      tag_150\n      jump\t// in\n    tag_153:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5048:5071  userLevelDeposit[_user] */\n      dup3\n      and\n        /* \"staking.sol\":4938:4959  uint256 level0Rewards */\n      0x00\n        /* \"staking.sol\":5048:5071  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5048:5064  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":5048:5071  userLevelDeposit[_user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":5048:5074  userLevelDeposit[_user][0] */\n      dup5\n      dup1\n      mstore\n      dup1\n      dup4\n      mstore\n      dup2\n      dup6\n      keccak256\n        /* \"staking.sol\":5039:5074  level0 = userLevelDeposit[_user][0] */\n      dup3\n      mload\n      0xa0\n      dup1\n      dup3\n      add\n      dup6\n      mstore\n      dup3\n      sload\n      dup3\n      mstore\n      0x01\n      dup1\n      dup5\n      add\n      sload\n      dup4\n      dup9\n      add\n      mstore\n      0x02\n      dup1\n      dup6\n      add\n      sload\n      dup5\n      dup9\n      add\n      mstore\n      dup5\n      dup10\n      add\n      sload\n      0x60\n      dup1\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x04\n      swap6\n      dup7\n      add\n      sload\n      0x80\n      dup1\n      dup8\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"staking.sol\":5093:5119  userLevelDeposit[_user][1] */\n      dup4\n      dup13\n      mstore\n      dup8\n      dup11\n      mstore\n      dup9\n      dup13\n      keccak256\n        /* \"staking.sol\":5084:5119  level1 = userLevelDeposit[_user][1] */\n      dup10\n      mload\n      dup1\n      dup8\n      add\n      dup12\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      dup2\n      dup7\n      add\n      sload\n      dup2\n      dup14\n      add\n      mstore\n      dup2\n      dup6\n      add\n      sload\n      dup2\n      dup13\n      add\n      mstore\n      dup2\n      dup14\n      add\n      sload\n      dup2\n      dup6\n      add\n      mstore\n      swap1\n      dup9\n      add\n      sload\n      dup2\n      dup4\n      add\n      mstore\n        /* \"staking.sol\":5138:5164  userLevelDeposit[_user][2] */\n      dup4\n      dup14\n      mstore\n      dup9\n      dup12\n      mstore\n      dup10\n      dup14\n      keccak256\n        /* \"staking.sol\":5129:5164  level2 = userLevelDeposit[_user][2] */\n      dup11\n      mload\n      dup1\n      dup9\n      add\n      dup13\n      mstore\n      dup2\n      sload\n      dup2\n      mstore\n      dup2\n      dup8\n      add\n      sload\n      dup2\n      dup15\n      add\n      mstore\n      dup2\n      dup7\n      add\n      sload\n      dup2\n      dup14\n      add\n      mstore\n      dup2\n      dup15\n      add\n      sload\n      dup2\n      dup7\n      add\n      mstore\n      swap1\n      dup10\n      add\n      sload\n      dup2\n      dup5\n      add\n      mstore\n        /* \"staking.sol\":5185:5211  userLevelDeposit[_user][3] */\n      dup13\n      dup15\n      mstore\n      swap9\n      dup12\n      mstore\n      dup10\n      dup14\n      keccak256\n        /* \"staking.sol\":5176:5211  level3 = userLevelDeposit[_user][3] */\n      dup11\n      mload\n      swap7\n      dup8\n      add\n      dup12\n      mstore\n      dup1\n      sload\n      dup8\n      mstore\n      swap5\n      dup6\n      add\n      sload\n      swap11\n      dup7\n      add\n      swap11\n      swap1\n      swap11\n      mstore\n      swap2\n      dup4\n      add\n      sload\n      swap8\n      dup5\n      add\n      swap8\n      swap1\n      swap8\n      mstore\n      swap8\n      dup2\n      add\n      sload\n      swap6\n      dup3\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      swap4\n      swap1\n      swap2\n      add\n      sload\n      swap5\n      dup4\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"staking.sol\":5039:5074  level0 = userLevelDeposit[_user][0] */\n      swap3\n      swap5\n      pop\n        /* \"staking.sol\":5084:5119  level1 = userLevelDeposit[_user][1] */\n      swap1\n      swap3\n        /* \"staking.sol\":4938:4959  uint256 level0Rewards */\n      dup1\n      dup1\n      dup1\n        /* \"staking.sol\":5240:5266  calculateRewards(_user, 0) */\n      tag_155\n        /* \"staking.sol\":5065:5070  _user */\n      dup10\n        /* \"staking.sol\":4938:4959  uint256 level0Rewards */\n      dup3\n        /* \"staking.sol\":5240:5256  calculateRewards */\n      tag_77\n        /* \"staking.sol\":5240:5266  calculateRewards(_user, 0) */\n      jump\t// in\n    tag_155:\n        /* \"staking.sol\":5224:5266  level0Rewards = calculateRewards(_user, 0) */\n      swap4\n      pop\n        /* \"staking.sol\":5292:5318  calculateRewards(_user, 1) */\n      tag_156\n        /* \"staking.sol\":5309:5314  _user */\n      dup10\n        /* \"staking.sol\":5316:5317  1 */\n      0x01\n        /* \"staking.sol\":5292:5308  calculateRewards */\n      tag_77\n        /* \"staking.sol\":5292:5318  calculateRewards(_user, 1) */\n      jump\t// in\n    tag_156:\n        /* \"staking.sol\":5276:5318  level1Rewards = calculateRewards(_user, 1) */\n      swap3\n      pop\n        /* \"staking.sol\":5344:5370  calculateRewards(_user, 2) */\n      tag_157\n        /* \"staking.sol\":5361:5366  _user */\n      dup10\n        /* \"staking.sol\":5368:5369  2 */\n      0x02\n        /* \"staking.sol\":5344:5360  calculateRewards */\n      tag_77\n        /* \"staking.sol\":5344:5370  calculateRewards(_user, 2) */\n      jump\t// in\n    tag_157:\n        /* \"staking.sol\":5328:5370  level2Rewards = calculateRewards(_user, 2) */\n      swap2\n      pop\n        /* \"staking.sol\":5396:5422  calculateRewards(_user, 3) */\n      tag_158\n        /* \"staking.sol\":5413:5418  _user */\n      dup10\n        /* \"staking.sol\":5420:5421  3 */\n      0x03\n        /* \"staking.sol\":5396:5412  calculateRewards */\n      tag_77\n        /* \"staking.sol\":5396:5422  calculateRewards(_user, 3) */\n      jump\t// in\n    tag_158:\n        /* \"staking.sol\":5380:5422  level3Rewards = calculateRewards(_user, 3) */\n      swap1\n      pop\n        /* \"staking.sol\":4799:5429  function getUserInfo(address _user) external view returns(User memory level0,  User memory level1, User memory level2, User memory level3, uint256 level0Rewards, uint256 level1Rewards, uint256 level2Rewards, uint256 level3Rewards){... */\n      swap2\n      swap4\n      swap6\n      swap8\n      pop\n      swap2\n      swap4\n      swap6\n      swap8\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"staking.sol\":1750:1810  function pause () public onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_170:\n        /* \"staking.sol\":1795:1803  _pause() */\n      tag_125\n        /* \"staking.sol\":1795:1801  _pause */\n      tag_174\n        /* \"staking.sol\":1795:1803  _pause() */\n      jump\t// in\n        /* \"staking.sol\":6022:6158  function withdrawTokens() external onlyOwner {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_178:\n        /* \"staking.sol\":6077:6090  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":6112:6150  acceptedToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"staking.sol\":6144:6148  this */\n      address\n        /* \"staking.sol\":6112:6150  acceptedToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2487:2538   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":6077:6090  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":6077:6099  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"staking.sol\":6100:6110  msg.sender */\n      caller\n      swap1\n        /* \"staking.sol\":6077:6090  acceptedToken */\n      dup4\n      swap1\n        /* \"staking.sol\":6112:6135  acceptedToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2460:2478   */\n      0x24\n      add\n        /* \"staking.sol\":6112:6150  acceptedToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_184:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n        /* \"staking.sol\":6077:6151  acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this))) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3479:3511   */\n      swap1\n      swap3\n      and\n        /* \"staking.sol\":6077:6151  acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this))) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":3461:3512   */\n      mstore\n        /* \"#utility.yul\":3528:3546   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3521:3555   */\n      mstore\n        /* \"#utility.yul\":3434:3452   */\n      0x44\n      add\n        /* \"staking.sol\":6077:6151  acceptedToken.transfer(msg.sender, acceptedToken.balanceOf(address(this))) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_190:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_191\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_191:\n      pop\n        /* \"staking.sol\":6022:6158  function withdrawTokens() external onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":3880:4318  function compound (uint256 _level) external{... */\n    tag_71:\n        /* \"staking.sol\":3954:3964  msg.sender */\n      caller\n        /* \"staking.sol\":3933:3951  address _msgSender */\n      0x00\n        /* \"staking.sol\":3982:4010  userLevelDeposit[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":3982:3998  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":3982:4010  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3982:4018  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":3982:4026  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":3974:4052  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5994:5996   */\n      0x20\n        /* \"staking.sol\":3974:4052  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5976:5997   */\n      mstore\n        /* \"#utility.yul\":6033:6035   */\n      0x11\n        /* \"#utility.yul\":6013:6031   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6006:6036   */\n      mstore\n      shl(0x7a, 0x139bc81858dd1a5d994819195c1bdcda5d)\n        /* \"#utility.yul\":6052:6070   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6045:6092   */\n      mstore\n        /* \"#utility.yul\":6109:6127   */\n      0x64\n      add\n        /* \"staking.sol\":3974:4052  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n      tag_100\n        /* \"#utility.yul\":5792:6133   */\n      jump\n        /* \"staking.sol\":3974:4052  require(userLevelDeposit[_msgSender][_level].balance > 0, \"No active deposit\") */\n    tag_194:\n        /* \"staking.sol\":4063:4078  uint256 rewards */\n      0x00\n        /* \"staking.sol\":4081:4117  calculateRewards(_msgSender, _level) */\n      tag_196\n        /* \"staking.sol\":4098:4108  _msgSender */\n      dup3\n        /* \"staking.sol\":4110:4116  _level */\n      dup5\n        /* \"staking.sol\":4081:4097  calculateRewards */\n      tag_77\n        /* \"staking.sol\":4081:4117  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4128:4156  userLevelDeposit[_msgSender] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4128:4144  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":4128:4156  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":4128:4164  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":4128:4183  userLevelDeposit[_msgSender][_level].balance += rewards */\n      dup1\n      sload\n        /* \"staking.sol\":4063:4117  uint256 rewards = calculateRewards(_msgSender, _level) */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"staking.sol\":4128:4164  userLevelDeposit[_msgSender][_level] */\n      swap1\n      swap2\n        /* \"staking.sol\":4128:4156  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":4128:4183  userLevelDeposit[_msgSender][_level].balance += rewards */\n      tag_197\n      swap1\n        /* \"staking.sol\":4063:4117  uint256 rewards = calculateRewards(_msgSender, _level) */\n      dup5\n      swap1\n        /* \"staking.sol\":4128:4183  userLevelDeposit[_msgSender][_level].balance += rewards */\n      tag_109\n      jump\t// in\n    tag_197:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4193:4221  userLevelDeposit[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4193:4209  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":4193:4221  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":4193:4229  userLevelDeposit[_msgSender][_level] */\n      dup8\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":4242:4257  block.timestamp */\n      timestamp\n        /* \"staking.sol\":4193:4239  userLevelDeposit[_msgSender][_level].lastClaim */\n      swap2\n      add\n        /* \"staking.sol\":4193:4257  userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp */\n      sstore\n        /* \"staking.sol\":4273:4311  Compound (_msgSender, _level, rewards) */\n      mload\n      0x0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d186873\n      swap1\n      tag_117\n      swap1\n        /* \"staking.sol\":4210:4220  _msgSender */\n      dup5\n      swap1\n        /* \"staking.sol\":4222:4228  _level */\n      dup7\n      swap1\n        /* \"staking.sol\":4303:4310  rewards */\n      dup6\n      swap1\n        /* \"staking.sol\":4273:4311  Compound (_msgSender, _level, rewards) */\n      tag_147\n      jump\t// in\n        /* \"staking.sol\":5905:6016  function changeEarlyWithdrawFee(uint256 _newFee) external onlyOwner {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_202:\n        /* \"staking.sol\":5983:5999  earlyWithdrawFee */\n      0x02\n        /* \"staking.sol\":5983:6009  earlyWithdrawFee = _newFee */\n      sstore\n        /* \"staking.sol\":5905:6016  function changeEarlyWithdrawFee(uint256 _newFee) external onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":4324:4789  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4460:4483  userLevelDeposit[_user] */\n      dup3\n      and\n        /* \"staking.sol\":4403:4410  uint256 */\n      0x00\n        /* \"staking.sol\":4460:4483  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4460:4476  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":4460:4483  userLevelDeposit[_user] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":4460:4491  userLevelDeposit[_user][_level] */\n      dup6\n      dup6\n      mstore\n      swap1\n      swap2\n      mstore\n      dup3\n      keccak256\n        /* \"staking.sol\":4460:4501  userLevelDeposit[_user][_level].lastClaim */\n      add\n      sload\n        /* \"staking.sol\":4403:4410  uint256 */\n      dup2\n      swap1\n        /* \"staking.sol\":4442:4501  block.timestamp - userLevelDeposit[_user][_level].lastClaim */\n      tag_206\n      swap1\n        /* \"staking.sol\":4442:4457  block.timestamp */\n      timestamp\n        /* \"staking.sol\":4442:4501  block.timestamp - userLevelDeposit[_user][_level].lastClaim */\n      tag_139\n      jump\t// in\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4529:4552  userLevelDeposit[_user] */\n      dup6\n      and\n        /* \"staking.sol\":4511:4526  uint256 balance */\n      0x00\n        /* \"staking.sol\":4529:4552  userLevelDeposit[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4529:4545  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":4529:4552  userLevelDeposit[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":4529:4560  userLevelDeposit[_user][_level] */\n      dup8\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":4529:4568  userLevelDeposit[_user][_level].balance */\n      sload\n        /* \"staking.sol\":4593:4602  levelInfo */\n      0x04\n        /* \"staking.sol\":4593:4610  levelInfo[_level] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n        /* \"staking.sol\":4593:4614  levelInfo[_level].APY */\n      sload\n        /* \"staking.sol\":4421:4501  uint256 timeStaked = block.timestamp - userLevelDeposit[_user][_level].lastClaim */\n      swap3\n      swap4\n      pop\n        /* \"staking.sol\":4529:4568  userLevelDeposit[_user][_level].balance */\n      swap2\n        /* \"staking.sol\":4593:4614  levelInfo[_level].APY */\n      swap1\n        /* \"staking.sol\":4680:4688  365 days */\n      0x01e13380\n        /* \"staking.sol\":4671:4676  10000 */\n      0x2710\n        /* \"staking.sol\":4654:4667  balance * APY */\n      tag_207\n        /* \"staking.sol\":4593:4614  levelInfo[_level].APY */\n      dup5\n        /* \"staking.sol\":4529:4568  userLevelDeposit[_user][_level].balance */\n      dup7\n        /* \"staking.sol\":4654:4667  balance * APY */\n      tag_135\n      jump\t// in\n    tag_207:\n        /* \"staking.sol\":4653:4676  (balance * APY) / 10000 */\n      tag_208\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_208:\n        /* \"staking.sol\":4652:4688  ((balance * APY) / 10000) / 365 days */\n      tag_209\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_209:\n        /* \"staking.sol\":4625:4688  uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days */\n      swap1\n      pop\n        /* \"staking.sol\":4698:4719  uint256 rewardsEarned */\n      0x00\n        /* \"staking.sol\":4722:4751  timeStaked * rewardsPerSecond */\n      tag_210\n        /* \"staking.sol\":4625:4688  uint256 rewardsPerSecond = ((balance * APY) / 10000) / 365 days */\n      dup3\n        /* \"staking.sol\":4722:4732  timeStaked */\n      dup7\n        /* \"staking.sol\":4722:4751  timeStaked * rewardsPerSecond */\n      tag_135\n      jump\t// in\n    tag_210:\n        /* \"staking.sol\":4698:4751  uint256 rewardsEarned = timeStaked * rewardsPerSecond */\n      swap9\n        /* \"staking.sol\":4324:4789  function calculateRewards (address _user, uint256 _level) public view returns (uint256){... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":1891:2596  function deposit (uint256 _amount, uint256 _level) public whenNotPaused {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5288:5290   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5270:5291   */\n      mstore\n        /* \"#utility.yul\":5327:5329   */\n      0x10\n        /* \"#utility.yul\":5307:5325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5300:5330   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5346:5364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5339:5385   */\n      mstore\n        /* \"#utility.yul\":5402:5420   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_100\n        /* \"#utility.yul\":5086:5426   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_213:\n        /* \"staking.sol\":2022:2035  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":2022:2084  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"staking.sol\":1994:2004  msg.sender */\n      caller\n        /* \"staking.sol\":2022:2084  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2789:2823   */\n      dup2\n      swap1\n      mstore\n        /* \"staking.sol\":2069:2073  this */\n      address\n        /* \"#utility.yul\":2839:2857   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2832:2875   */\n      mstore\n        /* \"#utility.yul\":2891:2909   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2884:2918   */\n      dup6\n      swap1\n      mstore\n        /* \"staking.sol\":1994:2004  msg.sender */\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2022:2035  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":2022:2048  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2724:2742   */\n      0x64\n      add\n        /* \"staking.sol\":2022:2084  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_219\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_219:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_222\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_222:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2098:2126  userLevelDeposit[_msgSender] */\n      dup2\n      and\n        /* \"staking.sol\":2145:2146  0 */\n      0x00\n        /* \"staking.sol\":2098:2126  userLevelDeposit[_msgSender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2098:2114  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":2098:2126  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2098:2134  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":2098:2142  userLevelDeposit[_msgSender][_level].balance */\n      sload\n        /* \"staking.sol\":2098:2146  userLevelDeposit[_msgSender][_level].balance > 0 */\n      iszero\n        /* \"staking.sol\":2095:2219  if(userLevelDeposit[_msgSender][_level].balance > 0){... */\n      tag_223\n      jumpi\n        /* \"staking.sol\":2172:2208  calculateRewards(_msgSender, _level) */\n      tag_224\n        /* \"staking.sol\":2189:2199  _msgSender */\n      dup2\n        /* \"staking.sol\":2201:2207  _level */\n      dup4\n        /* \"staking.sol\":2172:2188  calculateRewards */\n      tag_77\n        /* \"staking.sol\":2172:2208  calculateRewards(_msgSender, _level) */\n      jump\t// in\n    tag_224:\n        /* \"staking.sol\":2161:2208  _amount += calculateRewards(_msgSender, _level) */\n      tag_225\n      swap1\n      dup5\n      tag_109\n      jump\t// in\n    tag_225:\n      swap3\n      pop\n        /* \"staking.sol\":2095:2219  if(userLevelDeposit[_msgSender][_level].balance > 0){... */\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2229:2257  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2229:2245  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":2229:2257  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2229:2265  userLevelDeposit[_msgSender][_level] */\n      dup6\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"staking.sol\":2229:2284  userLevelDeposit[_msgSender][_level].balance += _amount */\n      dup1\n      sload\n        /* \"staking.sol\":2277:2284  _amount */\n      dup6\n      swap3\n        /* \"staking.sol\":2229:2257  userLevelDeposit[_msgSender] */\n      swap1\n        /* \"staking.sol\":2229:2284  userLevelDeposit[_msgSender][_level].balance += _amount */\n      tag_226\n      swap1\n        /* \"staking.sol\":2277:2284  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":2229:2284  userLevelDeposit[_msgSender][_level].balance += _amount */\n      tag_109\n      jump\t// in\n    tag_226:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2294:2322  userLevelDeposit[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2294:2310  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":2294:2322  userLevelDeposit[_msgSender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":2294:2330  userLevelDeposit[_msgSender][_level] */\n      dup7\n      dup6\n      mstore\n      dup3\n      mstore\n      dup1\n      dup5\n      keccak256\n        /* \"staking.sol\":2341:2356  block.timestamp */\n      timestamp\n        /* \"staking.sol\":2294:2338  userLevelDeposit[_msgSender][_level].started */\n      0x02\n      dup3\n      add\n        /* \"staking.sol\":2294:2356  userLevelDeposit[_msgSender][_level].started = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"staking.sol\":2366:2412  userLevelDeposit[_msgSender][_level].lastClaim */\n      swap4\n      add\n        /* \"staking.sol\":2366:2430  userLevelDeposit[_msgSender][_level].lastClaim = block.timestamp */\n      dup4\n      swap1\n      sstore\n        /* \"staking.sol\":2508:2517  levelInfo */\n      0x04\n        /* \"staking.sol\":2508:2525  levelInfo[_level] */\n      swap1\n      swap2\n      mstore\n      swap1\n      swap2\n      keccak256\n        /* \"staking.sol\":2508:2536  levelInfo[_level].lockPeriod */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":2490:2536  block.timestamp + levelInfo[_level].lockPeriod */\n      tag_227\n      swap2\n      tag_109\n      jump\t// in\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":2440:2468  userLevelDeposit[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":2440:2456  userLevelDeposit */\n      0x03\n        /* \"staking.sol\":2440:2468  userLevelDeposit[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":2440:2476  userLevelDeposit[_msgSender][_level] */\n      dup7\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"staking.sol\":2440:2487  userLevelDeposit[_msgSender][_level].unlockTime */\n      0x04\n      add\n        /* \"staking.sol\":2440:2536  userLevelDeposit[_msgSender][_level].unlockTime = block.timestamp + levelInfo[_level].lockPeriod */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":2552:2589  Deposit (_msgSender, _level, _amount) */\n      mload\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap1\n      tag_117\n      swap1\n        /* \"staking.sol\":2457:2467  _msgSender */\n      dup4\n      swap1\n        /* \"staking.sol\":2469:2475  _level */\n      dup6\n      swap1\n        /* \"staking.sol\":2581:2588  _amount */\n      dup8\n      swap1\n        /* \"staking.sol\":2552:2589  Deposit (_msgSender, _level, _amount) */\n      tag_147\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4881:4883   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4863:4884   */\n      mstore\n        /* \"#utility.yul\":4920:4922   */\n      0x26\n        /* \"#utility.yul\":4900:4918   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4893:4923   */\n      mstore\n        /* \"#utility.yul\":4959:4993   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4939:4957   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4932:4994   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":5010:5028   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5003:5039   */\n      mstore\n        /* \"#utility.yul\":5056:5075   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4679:5081   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4532:4534   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4514:4535   */\n      mstore\n        /* \"#utility.yul\":4571:4573   */\n      0x14\n        /* \"#utility.yul\":4551:4569   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4544:4574   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":4590:4608   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4583:4633   */\n      mstore\n        /* \"#utility.yul\":4650:4668   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_100\n        /* \"#utility.yul\":4330:4674   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n    tag_248:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2178:2183  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2183  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n    tag_252:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2505:2537   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2487:2538   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2475:2477   */\n      0x20\n        /* \"#utility.yul\":2460:2478   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5288:5290   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5270:5291   */\n      mstore\n        /* \"#utility.yul\":5327:5329   */\n      0x10\n        /* \"#utility.yul\":5307:5325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5300:5330   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":5346:5364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5339:5385   */\n      mstore\n        /* \"#utility.yul\":5402:5420   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_100\n        /* \"#utility.yul\":5086:5426   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n    tag_257:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1929  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      tag_252\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n    tag_150:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_263:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_265:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_55:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_267:\n        /* \"#utility.yul\":343:372   */\n      tag_268\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_263\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:637   */\n    tag_27:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_270:\n        /* \"#utility.yul\":551:580   */\n      tag_271\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_263\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":541:580   */\n      swap5\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":599:631   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":383:637   */\n      jump\t// out\n        /* \"#utility.yul\":642:919   */\n    tag_116:\n        /* \"#utility.yul\":709:715   */\n      0x00\n        /* \"#utility.yul\":762:764   */\n      0x20\n        /* \"#utility.yul\":750:759   */\n      dup3\n        /* \"#utility.yul\":741:748   */\n      dup5\n        /* \"#utility.yul\":737:760   */\n      sub\n        /* \"#utility.yul\":733:765   */\n      slt\n        /* \"#utility.yul\":730:782   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":778:779   */\n      0x00\n        /* \"#utility.yul\":775:776   */\n      dup1\n        /* \"#utility.yul\":768:780   */\n      revert\n        /* \"#utility.yul\":730:782   */\n    tag_273:\n        /* \"#utility.yul\":810:819   */\n      dup2\n        /* \"#utility.yul\":804:820   */\n      mload\n        /* \"#utility.yul\":863:868   */\n      dup1\n        /* \"#utility.yul\":856:869   */\n      iszero\n        /* \"#utility.yul\":849:870   */\n      iszero\n        /* \"#utility.yul\":842:847   */\n      dup2\n        /* \"#utility.yul\":839:871   */\n      eq\n        /* \"#utility.yul\":829:889   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":885:886   */\n      0x00\n        /* \"#utility.yul\":882:883   */\n      dup1\n        /* \"#utility.yul\":875:887   */\n      revert\n        /* \"#utility.yul\":924:1104   */\n    tag_37:\n        /* \"#utility.yul\":983:989   */\n      0x00\n        /* \"#utility.yul\":1036:1038   */\n      0x20\n        /* \"#utility.yul\":1024:1033   */\n      dup3\n        /* \"#utility.yul\":1015:1022   */\n      dup5\n        /* \"#utility.yul\":1011:1034   */\n      sub\n        /* \"#utility.yul\":1007:1039   */\n      slt\n        /* \"#utility.yul\":1004:1056   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":1052:1053   */\n      0x00\n        /* \"#utility.yul\":1049:1050   */\n      dup1\n        /* \"#utility.yul\":1042:1054   */\n      revert\n        /* \"#utility.yul\":1004:1056   */\n    tag_276:\n      pop\n        /* \"#utility.yul\":1075:1098   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":924:1104   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1293   */\n    tag_186:\n        /* \"#utility.yul\":1179:1185   */\n      0x00\n        /* \"#utility.yul\":1232:1234   */\n      0x20\n        /* \"#utility.yul\":1220:1229   */\n      dup3\n        /* \"#utility.yul\":1211:1218   */\n      dup5\n        /* \"#utility.yul\":1207:1230   */\n      sub\n        /* \"#utility.yul\":1203:1235   */\n      slt\n        /* \"#utility.yul\":1200:1252   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1248:1249   */\n      0x00\n        /* \"#utility.yul\":1245:1246   */\n      dup1\n        /* \"#utility.yul\":1238:1250   */\n      revert\n        /* \"#utility.yul\":1200:1252   */\n    tag_278:\n      pop\n        /* \"#utility.yul\":1271:1287   */\n      mload\n      swap2\n        /* \"#utility.yul\":1109:1293   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1298:1546   */\n    tag_43:\n        /* \"#utility.yul\":1366:1372   */\n      0x00\n        /* \"#utility.yul\":1374:1380   */\n      dup1\n        /* \"#utility.yul\":1427:1429   */\n      0x40\n        /* \"#utility.yul\":1415:1424   */\n      dup4\n        /* \"#utility.yul\":1406:1413   */\n      dup6\n        /* \"#utility.yul\":1402:1425   */\n      sub\n        /* \"#utility.yul\":1398:1430   */\n      slt\n        /* \"#utility.yul\":1395:1447   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":1443:1444   */\n      0x00\n        /* \"#utility.yul\":1440:1441   */\n      dup1\n        /* \"#utility.yul\":1433:1445   */\n      revert\n        /* \"#utility.yul\":1395:1447   */\n    tag_280:\n      pop\n      pop\n        /* \"#utility.yul\":1466:1489   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1536:1538   */\n      0x20\n        /* \"#utility.yul\":1521:1539   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1508:1540   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1298:1546   */\n      jump\t// out\n        /* \"#utility.yul\":1551:1867   */\n    tag_33:\n        /* \"#utility.yul\":1628:1634   */\n      0x00\n        /* \"#utility.yul\":1636:1642   */\n      dup1\n        /* \"#utility.yul\":1644:1650   */\n      0x00\n        /* \"#utility.yul\":1697:1699   */\n      0x60\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1676:1683   */\n      dup7\n        /* \"#utility.yul\":1672:1695   */\n      sub\n        /* \"#utility.yul\":1668:1700   */\n      slt\n        /* \"#utility.yul\":1665:1717   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1665:1717   */\n    tag_282:\n      pop\n      pop\n        /* \"#utility.yul\":1736:1759   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":1806:1808   */\n      0x20\n        /* \"#utility.yul\":1791:1809   */\n      dup4\n      add\n        /* \"#utility.yul\":1778:1810   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1857:1859   */\n      0x40\n        /* \"#utility.yul\":1842:1860   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1829:1861   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1551:1867   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2023:2336   */\n    tag_285:\n        /* \"#utility.yul\":2099:2104   */\n      dup1\n        /* \"#utility.yul\":2093:2105   */\n      mload\n        /* \"#utility.yul\":2088:2091   */\n      dup3\n        /* \"#utility.yul\":2081:2106   */\n      mstore\n        /* \"#utility.yul\":2155:2159   */\n      0x20\n        /* \"#utility.yul\":2148:2153   */\n      dup2\n        /* \"#utility.yul\":2144:2160   */\n      add\n        /* \"#utility.yul\":2138:2161   */\n      mload\n        /* \"#utility.yul\":2131:2135   */\n      0x20\n        /* \"#utility.yul\":2126:2129   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2115:2162   */\n      mstore\n        /* \"#utility.yul\":2211:2215   */\n      0x40\n        /* \"#utility.yul\":2204:2209   */\n      dup2\n        /* \"#utility.yul\":2200:2216   */\n      add\n        /* \"#utility.yul\":2194:2217   */\n      mload\n        /* \"#utility.yul\":2187:2191   */\n      0x40\n        /* \"#utility.yul\":2182:2185   */\n      dup4\n        /* \"#utility.yul\":2178:2192   */\n      add\n        /* \"#utility.yul\":2171:2218   */\n      mstore\n        /* \"#utility.yul\":2267:2271   */\n      0x60\n        /* \"#utility.yul\":2260:2265   */\n      dup2\n        /* \"#utility.yul\":2256:2272   */\n      add\n        /* \"#utility.yul\":2250:2273   */\n      mload\n        /* \"#utility.yul\":2243:2247   */\n      0x60\n        /* \"#utility.yul\":2238:2241   */\n      dup4\n        /* \"#utility.yul\":2234:2248   */\n      add\n        /* \"#utility.yul\":2227:2274   */\n      mstore\n        /* \"#utility.yul\":2323:2327   */\n      0x80\n        /* \"#utility.yul\":2316:2321   */\n      dup2\n        /* \"#utility.yul\":2312:2328   */\n      add\n        /* \"#utility.yul\":2306:2329   */\n      mload\n        /* \"#utility.yul\":2299:2303   */\n      0x80\n        /* \"#utility.yul\":2294:2297   */\n      dup4\n        /* \"#utility.yul\":2290:2304   */\n      add\n        /* \"#utility.yul\":2283:2330   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2023:2336   */\n      jump\t// out\n        /* \"#utility.yul\":2929:3282   */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3157:3189   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":3139:3190   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3221:3223   */\n      0x20\n        /* \"#utility.yul\":3206:3224   */\n      dup4\n      add\n        /* \"#utility.yul\":3199:3233   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3264:3266   */\n      0x40\n        /* \"#utility.yul\":3249:3267   */\n      dup3\n      add\n        /* \"#utility.yul\":3242:3276   */\n      mstore\n        /* \"#utility.yul\":3127:3129   */\n      0x60\n        /* \"#utility.yul\":3112:3130   */\n      add\n      swap1\n        /* \"#utility.yul\":2929:3282   */\n      jump\t// out\n        /* \"#utility.yul\":5431:5787   */\n    tag_101:\n        /* \"#utility.yul\":5633:5635   */\n      0x20\n        /* \"#utility.yul\":5615:5636   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5652:5670   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5645:5675   */\n      mstore\n        /* \"#utility.yul\":5711:5745   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":5706:5708   */\n      0x40\n        /* \"#utility.yul\":5691:5709   */\n      dup3\n      add\n        /* \"#utility.yul\":5684:5746   */\n      mstore\n        /* \"#utility.yul\":5778:5780   */\n      0x60\n        /* \"#utility.yul\":5763:5781   */\n      add\n      swap1\n        /* \"#utility.yul\":5431:5787   */\n      jump\t// out\n        /* \"#utility.yul\":7127:8041   */\n    tag_58:\n        /* \"#utility.yul\":7625:7628   */\n      0x0300\n        /* \"#utility.yul\":7610:7629   */\n      dup2\n      add\n        /* \"#utility.yul\":7638:7679   */\n      tag_306\n        /* \"#utility.yul\":7614:7623   */\n      dup3\n        /* \"#utility.yul\":7661:7667   */\n      dup12\n        /* \"#utility.yul\":7638:7679   */\n      tag_285\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7688:7739   */\n      tag_307\n        /* \"#utility.yul\":7734:7737   */\n      0xa0\n        /* \"#utility.yul\":7723:7732   */\n      dup4\n        /* \"#utility.yul\":7719:7738   */\n      add\n        /* \"#utility.yul\":7711:7717   */\n      dup11\n        /* \"#utility.yul\":7688:7739   */\n      tag_285\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7748:7799   */\n      tag_308\n        /* \"#utility.yul\":7794:7797   */\n      0x0140\n        /* \"#utility.yul\":7783:7792   */\n      dup4\n        /* \"#utility.yul\":7779:7798   */\n      add\n        /* \"#utility.yul\":7771:7777   */\n      dup10\n        /* \"#utility.yul\":7748:7799   */\n      tag_285\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7808:7859   */\n      tag_309\n        /* \"#utility.yul\":7854:7857   */\n      0x01e0\n        /* \"#utility.yul\":7843:7852   */\n      dup4\n        /* \"#utility.yul\":7839:7858   */\n      add\n        /* \"#utility.yul\":7831:7837   */\n      dup9\n        /* \"#utility.yul\":7808:7859   */\n      tag_285\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7896:7902   */\n      dup6\n        /* \"#utility.yul\":7890:7893   */\n      0x0280\n        /* \"#utility.yul\":7879:7888   */\n      dup4\n        /* \"#utility.yul\":7875:7894   */\n      add\n        /* \"#utility.yul\":7868:7903   */\n      mstore\n        /* \"#utility.yul\":7940:7946   */\n      dup5\n        /* \"#utility.yul\":7934:7937   */\n      0x02a0\n        /* \"#utility.yul\":7923:7932   */\n      dup4\n        /* \"#utility.yul\":7919:7938   */\n      add\n        /* \"#utility.yul\":7912:7947   */\n      mstore\n        /* \"#utility.yul\":7984:7990   */\n      dup4\n        /* \"#utility.yul\":7978:7981   */\n      0x02c0\n        /* \"#utility.yul\":7967:7976   */\n      dup4\n        /* \"#utility.yul\":7963:7982   */\n      add\n        /* \"#utility.yul\":7956:7991   */\n      mstore\n        /* \"#utility.yul\":8028:8034   */\n      dup3\n        /* \"#utility.yul\":8022:8025   */\n      0x02e0\n        /* \"#utility.yul\":8011:8020   */\n      dup4\n        /* \"#utility.yul\":8007:8026   */\n      add\n        /* \"#utility.yul\":8000:8035   */\n      mstore\n        /* \"#utility.yul\":7127:8041   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8949:9077   */\n    tag_109:\n        /* \"#utility.yul\":8989:8992   */\n      0x00\n        /* \"#utility.yul\":9020:9021   */\n      dup3\n        /* \"#utility.yul\":9016:9022   */\n      not\n        /* \"#utility.yul\":9013:9014   */\n      dup3\n        /* \"#utility.yul\":9010:9023   */\n      gt\n        /* \"#utility.yul\":9007:9046   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":9026:9044   */\n      tag_315\n      tag_316\n      jump\t// in\n    tag_315:\n      pop\n        /* \"#utility.yul\":9062:9071   */\n      add\n      swap1\n        /* \"#utility.yul\":8949:9077   */\n      jump\t// out\n        /* \"#utility.yul\":9082:9299   */\n    tag_137:\n        /* \"#utility.yul\":9122:9123   */\n      0x00\n        /* \"#utility.yul\":9148:9149   */\n      dup3\n        /* \"#utility.yul\":9138:9270   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":9192:9202   */\n      0x4e487b71\n        /* \"#utility.yul\":9187:9190   */\n      0xe0\n        /* \"#utility.yul\":9183:9203   */\n      shl\n        /* \"#utility.yul\":9180:9181   */\n      0x00\n        /* \"#utility.yul\":9173:9204   */\n      mstore\n        /* \"#utility.yul\":9227:9231   */\n      0x12\n        /* \"#utility.yul\":9224:9225   */\n      0x04\n        /* \"#utility.yul\":9217:9232   */\n      mstore\n        /* \"#utility.yul\":9255:9259   */\n      0x24\n        /* \"#utility.yul\":9252:9253   */\n      0x00\n        /* \"#utility.yul\":9245:9260   */\n      revert\n        /* \"#utility.yul\":9138:9270   */\n    tag_318:\n      pop\n        /* \"#utility.yul\":9284:9293   */\n      div\n      swap1\n        /* \"#utility.yul\":9082:9299   */\n      jump\t// out\n        /* \"#utility.yul\":9304:9472   */\n    tag_135:\n        /* \"#utility.yul\":9344:9351   */\n      0x00\n        /* \"#utility.yul\":9410:9411   */\n      dup2\n        /* \"#utility.yul\":9406:9407   */\n      0x00\n        /* \"#utility.yul\":9402:9408   */\n      not\n        /* \"#utility.yul\":9398:9412   */\n      div\n        /* \"#utility.yul\":9395:9396   */\n      dup4\n        /* \"#utility.yul\":9392:9413   */\n      gt\n        /* \"#utility.yul\":9387:9388   */\n      dup3\n        /* \"#utility.yul\":9380:9389   */\n      iszero\n        /* \"#utility.yul\":9373:9390   */\n      iszero\n        /* \"#utility.yul\":9369:9414   */\n      and\n        /* \"#utility.yul\":9366:9437   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":9417:9435   */\n      tag_321\n      tag_316\n      jump\t// in\n    tag_321:\n      pop\n        /* \"#utility.yul\":9457:9466   */\n      mul\n      swap1\n        /* \"#utility.yul\":9304:9472   */\n      jump\t// out\n        /* \"#utility.yul\":9477:9602   */\n    tag_139:\n        /* \"#utility.yul\":9517:9521   */\n      0x00\n        /* \"#utility.yul\":9545:9546   */\n      dup3\n        /* \"#utility.yul\":9542:9543   */\n      dup3\n        /* \"#utility.yul\":9539:9547   */\n      lt\n        /* \"#utility.yul\":9536:9570   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":9550:9568   */\n      tag_324\n      tag_316\n      jump\t// in\n    tag_324:\n      pop\n        /* \"#utility.yul\":9587:9596   */\n      sub\n      swap1\n        /* \"#utility.yul\":9477:9602   */\n      jump\t// out\n        /* \"#utility.yul\":9607:9734   */\n    tag_316:\n        /* \"#utility.yul\":9668:9678   */\n      0x4e487b71\n        /* \"#utility.yul\":9663:9666   */\n      0xe0\n        /* \"#utility.yul\":9659:9679   */\n      shl\n        /* \"#utility.yul\":9656:9657   */\n      0x00\n        /* \"#utility.yul\":9649:9680   */\n      mstore\n        /* \"#utility.yul\":9699:9703   */\n      0x11\n        /* \"#utility.yul\":9696:9697   */\n      0x04\n        /* \"#utility.yul\":9689:9704   */\n      mstore\n        /* \"#utility.yul\":9723:9727   */\n      0x24\n        /* \"#utility.yul\":9720:9721   */\n      0x00\n        /* \"#utility.yul\":9713:9728   */\n      revert\n\n    auxdata: 0xa26469706673582212200f3cd845abc83512b21a90c159d2d8634f7380c6f8da1a1d692f0980968ab3e264736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_439": {
									"entryPoint": null,
									"id": 439,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 423,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600a60025534801561001557600080fd5b506040516116c13803806116c1833981016040819052610034916101f7565b61003d336101a7565b6000805460ff60a01b19168155600180546001600160a01b0319166001600160a01b0393909316929092179091556004602052618e947f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec5562278d007f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ed5561b2397fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05556276a7007fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe065561d5de7f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a75562ed4e007f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a8556003905262011d287f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa0556301e133807f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa155610227565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561020957600080fd5b81516001600160a01b038116811461022057600080fd5b9392505050565b61148b806102366000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638456cb59116100ad578063beb8314c11610071578063beb8314c1461029a578063e2bbb158146102bb578063e788cee5146102ce578063edf501ad146104aa578063f2fde38b146104e657600080fd5b80638456cb59146102535780638d8f2adb1461025b5780638da5cb5b14610263578063aa5f7e2614610274578063aff3b6971461028757600080fd5b8063441a3e70116100f4578063441a3e70146101c9578063451c3d80146101dc5780635c975abb146102075780636386c1c714610224578063715018a61461024b57600080fd5b8063259ee7521461012657806332e9620314610199578063379607f5146101ae5780633f4ba83a146101c1575b600080fd5b61016c61013436600461121c565b600360208181526000938452604080852090915291835291208054600182015460028301549383015460049093015491939092909185565b604080519586526020860194909452928401919091526060830152608082015260a0015b60405180910390f35b6101ac6101a73660046112bc565b6104f9565b005b6101ac6101bc366004611268565b610544565b6101ac6106ba565b6101ac6101d736600461129a565b6106ee565b6001546101ef906001600160a01b031681565b6040516001600160a01b039091168152602001610190565b600054600160a01b900460ff166040519015158152602001610190565b6102376102323660046111fa565b6108d5565b60405161019098979695949392919061136e565b6101ac610a48565b6101ac610a7c565b6101ac610aae565b6000546001600160a01b03166101ef565b6101ac610282366004611268565b610bde565b6101ac610295366004611268565b610cdd565b6102ad6102a836600461121c565b610d0c565b604051908152602001610190565b6101ac6102c936600461129a565b610dae565b60408051808201825260008082526020918201819052825180840184528181528201819052825180840184528181528201819052825180840184528181528201819052825180840184527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ec5481527f17ef568e3e12ab5b9c7254a8d58478811de00f9e6eb34345acd53bf8fd09d3ed54818401908152845180860186527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe055481527fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe0654818601908152865180880188527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a75481527f91da3fd0782e51c6b3986e9e672fd566868e71f3dbc2d6c2cd6fbb3e361af2a854818801908152600390965260048752875180890189527f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa05481527f2e174c10e159ea99b867ce3205125c24a42d128804e4070ed6fcc8cc98166aa1548189019081528951965187529451978601979097529151968401969096529451606083015293516080820152905160a0820152905160c0820152905160e082015261010001610190565b6104d16104b8366004611268565b6004602052600090815260409020805460019091015482565b60408051928352602083019190915201610190565b6101ac6104f43660046111fa565b610fa2565b6000546001600160a01b0316331461052c5760405162461bcd60e51b815260040161052390611339565b60405180910390fd5b60009283526004602052604090922090815560010155565b33600081815260036020908152604080832085845290915290205461059f5760405162461bcd60e51b8152602060048201526011602482015270139bc81858dd1a5d994819195c1bdcda5d607a1b6044820152606401610523565b60006105ab8284610d0c565b6001600160a01b038316600090815260036020818152604080842088855290915282204291810191909155600101805492935083929091906105ee9084906113cf565b909155505060015460405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b15801561064157600080fd5b505af1158015610655573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106799190611246565b507f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf78284836040516106ad93929190611318565b60405180910390a1505050565b6000546001600160a01b031633146106e45760405162461bcd60e51b815260040161052390611339565b6106ec61103a565b565b33600081815260036020908152604080832085845290915290205483111561074d5760405162461bcd60e51b8152602060048201526012602482015271139bdd08195b9bdd59da0819195c1bdcda5d60721b6044820152606401610523565b60006107598284610d0c565b9050600061076782866113cf565b6001600160a01b0384166000908152600360209081526040808320888452909152812060040154919250904210156107b6576064600254836107a99190611409565b6107b391906113e7565b90505b6001600160a01b03841660009081526003602081815260408084208985529091528220429181019190915580548892906107f1908490611428565b90915550506001546001600160a01b031663a9059cbb856108128486611428565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561085857600080fd5b505af115801561086c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108909190611246565b507ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568846000886040516108c593929190611318565b60405180910390a1505050505050565b6108dd6111af565b6108e56111af565b6108ed6111af565b6108f56111af565b5050506001600160a01b0382166000908152600360208181526040808420848052808352818520825160a0808201855282548252600180840154838801526002808501548488015284890154606080860191909152600495860154608080870191909152838c52878a52888c2089518087018b528154815281860154818d015281850154818c0152818d0154818501529088015481830152838d52888b52898d208a518088018c528154815281870154818e015281860154818d0152818e01548186015290890154818401528c8e52988b52898d208a519687018b5280548752948501549a86019a909a52918301549784019790975297810154958201959095529390910154948301949094529294509092808080610a148982610d0c565b9350610a21896001610d0c565b9250610a2e896002610d0c565b9150610a3b896003610d0c565b9050919395975091939597565b6000546001600160a01b03163314610a725760405162461bcd60e51b815260040161052390611339565b6106ec60006110d7565b6000546001600160a01b03163314610aa65760405162461bcd60e51b815260040161052390611339565b6106ec611127565b6000546001600160a01b03163314610ad85760405162461bcd60e51b815260040161052390611339565b6001546040516370a0823160e01b81523060048201526001600160a01b039091169063a9059cbb90339083906370a082319060240160206040518083038186803b158015610b2557600080fd5b505afa158015610b39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5d9190611281565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610ba357600080fd5b505af1158015610bb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdb9190611246565b50565b336000818152600360209081526040808320858452909152902054610c395760405162461bcd60e51b8152602060048201526011602482015270139bc81858dd1a5d994819195c1bdcda5d607a1b6044820152606401610523565b6000610c458284610d0c565b6001600160a01b0383166000908152600360209081526040808320878452909152812080549293508392909190610c7d9084906113cf565b90915550506001600160a01b03821660009081526003602081815260408084208785529091529182902042910155517f0e311a2c6dbfb0153ec3a8a5bdca09070b3e5f60768fdc10a20453f38d186873906106ad90849086908590611318565b6000546001600160a01b03163314610d075760405162461bcd60e51b815260040161052390611339565b600255565b6001600160a01b0382166000908152600360208181526040808420858552909152822001548190610d3d9042611428565b6001600160a01b0385166000908152600360209081526040808320878452825280832054600490925282205492935091906301e13380612710610d808486611409565b610d8a91906113e7565b610d9491906113e7565b90506000610da28286611409565b98975050505050505050565b600054600160a01b900460ff1615610dfb5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610523565b6001546040516323b872dd60e01b8152336004820181905230602483015260448201859052916001600160a01b0316906323b872dd90606401602060405180830381600087803b158015610e4e57600080fd5b505af1158015610e62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e869190611246565b506001600160a01b038116600090815260036020908152604080832085845290915290205415610ec757610eba8183610d0c565b610ec490846113cf565b92505b6001600160a01b038116600090815260036020908152604080832085845290915281208054859290610efa9084906113cf565b90915550506001600160a01b0381166000908152600360208181526040808420868552825280842042600282018190559301839055600490915290912060010154610f44916113cf565b6001600160a01b03821660009081526003602090815260408083208684529091529081902060040191909155517f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15906106ad90839085908790611318565b6000546001600160a01b03163314610fcc5760405162461bcd60e51b815260040161052390611339565b6001600160a01b0381166110315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610523565b610bdb816110d7565b600054600160a01b900460ff1661108a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610523565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156111745760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610523565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110ba3390565b6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b80356001600160a01b03811681146111f557600080fd5b919050565b60006020828403121561120c57600080fd5b611215826111de565b9392505050565b6000806040838503121561122f57600080fd5b611238836111de565b946020939093013593505050565b60006020828403121561125857600080fd5b8151801515811461121557600080fd5b60006020828403121561127a57600080fd5b5035919050565b60006020828403121561129357600080fd5b5051919050565b600080604083850312156112ad57600080fd5b50508035926020909101359150565b6000806000606084860312156112d157600080fd5b505081359360208301359350604090920135919050565b80518252602081015160208301526040810151604083015260608101516060830152608081015160808301525050565b6001600160a01b039390931683526020830191909152604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b610300810161137d828b6112e8565b61138a60a083018a6112e8565b6113986101408301896112e8565b6113a66101e08301886112e8565b85610280830152846102a0830152836102c0830152826102e08301529998505050505050505050565b600082198211156113e2576113e261143f565b500190565b60008261140457634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156114235761142361143f565b500290565b60008282101561143a5761143a61143f565b500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212200f3cd845abc83512b21a90c159d2d8634f7380c6f8da1a1d692f0980968ab3e264736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x16C1 CODESIZE SUB DUP1 PUSH2 0x16C1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x34 SWAP2 PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0x3D CALLER PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND DUP2 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x8E94 PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC SSTORE PUSH3 0x278D00 PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3ED SSTORE PUSH2 0xB239 PUSH32 0xABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE05 SSTORE PUSH3 0x76A700 PUSH32 0xABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE06 SSTORE PUSH2 0xD5DE PUSH32 0x91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A7 SSTORE PUSH3 0xED4E00 PUSH32 0x91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A8 SSTORE PUSH1 0x3 SWAP1 MSTORE PUSH3 0x11D28 PUSH32 0x2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA0 SSTORE PUSH4 0x1E13380 PUSH32 0x2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA1 SSTORE PUSH2 0x227 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x148B DUP1 PUSH2 0x236 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBEB8314C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xE788CEE5 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xEDF501AD EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xAFF3B697 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x259EE752 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x32E96203 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x121C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x136E JUMP JUMPDEST PUSH2 0x1AC PUSH2 0xA48 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x1AC PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EF JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x121C JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x129A JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC SLOAD DUP2 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3ED SLOAD DUP2 DUP5 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH32 0xABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE05 SLOAD DUP2 MSTORE PUSH32 0xABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE06 SLOAD DUP2 DUP7 ADD SWAP1 DUP2 MSTORE DUP7 MLOAD DUP1 DUP9 ADD DUP9 MSTORE PUSH32 0x91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A7 SLOAD DUP2 MSTORE PUSH32 0x91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A8 SLOAD DUP2 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP7 MSTORE PUSH1 0x4 DUP8 MSTORE DUP8 MLOAD DUP1 DUP10 ADD DUP10 MSTORE PUSH32 0x2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA0 SLOAD DUP2 MSTORE PUSH32 0x2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA1 SLOAD DUP2 DUP10 ADD SWAP1 DUP2 MSTORE DUP10 MLOAD SWAP7 MLOAD DUP8 MSTORE SWAP5 MLOAD SWAP8 DUP7 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP2 MLOAD SWAP7 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 MLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP4 MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x4D1 PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 ADD SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP3 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP9 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x5EE SWAP1 DUP5 SWAP1 PUSH2 0x13CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x655 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x679 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x103A JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08195B9BDD59DA0819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x759 DUP3 DUP5 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x767 DUP3 DUP7 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP2 SWAP3 POP SWAP1 TIMESTAMP LT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x64 PUSH1 0x2 SLOAD DUP4 PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP10 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x7F1 SWAP1 DUP5 SWAP1 PUSH2 0x1428 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 PUSH2 0x812 DUP5 DUP7 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP5 PUSH1 0x0 DUP9 PUSH1 0x40 MLOAD PUSH2 0x8C5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8DD PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x8ED PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x8F5 PUSH2 0x11AF JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP9 ADD MSTORE DUP5 DUP10 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP6 DUP7 ADD SLOAD PUSH1 0x80 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 DUP13 MSTORE DUP8 DUP11 MSTORE DUP9 DUP13 KECCAK256 DUP10 MLOAD DUP1 DUP8 ADD DUP12 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP7 ADD SLOAD DUP2 DUP14 ADD MSTORE DUP2 DUP6 ADD SLOAD DUP2 DUP13 ADD MSTORE DUP2 DUP14 ADD SLOAD DUP2 DUP6 ADD MSTORE SWAP1 DUP9 ADD SLOAD DUP2 DUP4 ADD MSTORE DUP4 DUP14 MSTORE DUP9 DUP12 MSTORE DUP10 DUP14 KECCAK256 DUP11 MLOAD DUP1 DUP9 ADD DUP13 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP8 ADD SLOAD DUP2 DUP15 ADD MSTORE DUP2 DUP7 ADD SLOAD DUP2 DUP14 ADD MSTORE DUP2 DUP15 ADD SLOAD DUP2 DUP7 ADD MSTORE SWAP1 DUP10 ADD SLOAD DUP2 DUP5 ADD MSTORE DUP13 DUP15 MSTORE SWAP9 DUP12 MSTORE DUP10 DUP14 KECCAK256 DUP11 MLOAD SWAP7 DUP8 ADD DUP12 MSTORE DUP1 SLOAD DUP8 MSTORE SWAP5 DUP6 ADD SLOAD SWAP11 DUP7 ADD SWAP11 SWAP1 SWAP11 MSTORE SWAP2 DUP4 ADD SLOAD SWAP8 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP8 DUP2 ADD SLOAD SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP1 SWAP2 ADD SLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 DUP1 DUP1 DUP1 PUSH2 0xA14 DUP10 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP4 POP PUSH2 0xA21 DUP10 PUSH1 0x1 PUSH2 0xD0C JUMP JUMPDEST SWAP3 POP PUSH2 0xA2E DUP10 PUSH1 0x2 PUSH2 0xD0C JUMP JUMPDEST SWAP2 POP PUSH2 0xA3B DUP10 PUSH1 0x3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x6EC PUSH1 0x0 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB5D SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDB SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xC39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 DUP3 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC7D SWAP1 DUP5 SWAP1 PUSH2 0x13CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE MLOAD PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 SWAP1 PUSH2 0x6AD SWAP1 DUP5 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH2 0xD3D SWAP1 TIMESTAMP PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0xD80 DUP5 DUP7 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0xD94 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDA2 DUP3 DUP7 PUSH2 0x1409 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEBA DUP2 DUP4 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xEC4 SWAP1 DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xEFA SWAP1 DUP5 SWAP1 PUSH2 0x13CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 TIMESTAMP PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE SWAP4 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF44 SWAP2 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x6AD SWAP1 DUP4 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1031 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x523 JUMP JUMPDEST PUSH2 0xBDB DUP2 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1174 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x10BA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1215 DUP3 PUSH2 0x11DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x122F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1238 DUP4 PUSH2 0x11DE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x300 DUP2 ADD PUSH2 0x137D DUP3 DUP12 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x138A PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1398 PUSH2 0x140 DUP4 ADD DUP10 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x13A6 PUSH2 0x1E0 DUP4 ADD DUP9 PUSH2 0x12E8 JUMP JUMPDEST DUP6 PUSH2 0x280 DUP4 ADD MSTORE DUP5 PUSH2 0x2A0 DUP4 ADD MSTORE DUP4 PUSH2 0x2C0 DUP4 ADD MSTORE DUP3 PUSH2 0x2E0 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13E2 JUMPI PUSH2 0x13E2 PUSH2 0x143F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1404 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x143F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x143A JUMPI PUSH2 0x143A PUSH2 0x143F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF EXTCODECOPY 0xD8 GASLIMIT 0xAB 0xC8 CALLDATALOAD SLT 0xB2 BYTE SWAP1 0xC1 MSIZE 0xD2 0xD8 PUSH4 0x4F7380C6 0xF8 0xDA BYTE SAR PUSH10 0x2F0980968AB3E264736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "224:5936:4:-:0;;;378:2;351:29;;1143:556;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:3;921:18:0;:32::i;:::-;991:5:1;981:15;;-1:-1:-1;;;;981:15:1;;;-1:-1:-1;1182:30:4;;-1:-1:-1;;;;;;1182:30:4;-1:-1:-1;;;;;1182:30:4;;;;;;;;;;;1264:9;:12;;1283:5;1264:12;:24;1324:7;1298:23;:33;1403:5;1384:12;:24;1444:7;1418:23;:33;1523:5;1504:12;:24;1564:8;1538:23;:34;1634:1;1624:12;;1643:5;1624:12;:24;1684:8;1658:23;:34;224:5936;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;224:5936:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_179": {
									"entryPoint": 4391,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 4311,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_195": {
									"entryPoint": 4154,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptedToken_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateRewards_820": {
									"entryPoint": 3340,
									"id": 820,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@changeEarlyWithdrawFee_984": {
									"entryPoint": 3293,
									"id": 984,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@changeLevelValues_972": {
									"entryPoint": 1273,
									"id": 972,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@claim_707": {
									"entryPoint": 1348,
									"id": 707,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@compound_762": {
									"entryPoint": 3038,
									"id": 762,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_550": {
									"entryPoint": 3502,
									"id": 550,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getLevelsInfo_946": {
									"entryPoint": null,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 4
								},
								"@getUserInfo_906": {
									"entryPoint": 2261,
									"id": 906,
									"parameterSlots": 1,
									"returnSlots": 8
								},
								"@levelInfo_339": {
									"entryPoint": null,
									"id": 339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_448": {
									"entryPoint": 2684,
									"id": 448,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2632,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 4002,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_457": {
									"entryPoint": 1722,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userLevelDeposit_334": {
									"entryPoint": null,
									"id": 334,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawTokens_1004": {
									"entryPoint": 2734,
									"id": 1004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_645": {
									"entryPoint": 1774,
									"id": 645,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 4796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_struct_Level": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_struct_User": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4888,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr__to_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4974,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9736:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:5"
															},
															"nodeType": "YulIf",
															"src": "111:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "14:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:5"
															},
															"nodeType": "YulIf",
															"src": "272:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:5",
														"type": ""
													}
												],
												"src": "192:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "470:167:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "516:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "525:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "512:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:32:5"
															},
															"nodeType": "YulIf",
															"src": "480:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "541:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "589:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "616:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "627:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "612:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "612:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "599:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "599:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "428:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "439:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "451:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "459:6:5",
														"type": ""
													}
												],
												"src": "383:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "720:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "766:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "775:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "778:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "768:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "768:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "768:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "741:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "750:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "762:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:32:5"
															},
															"nodeType": "YulIf",
															"src": "730:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "791:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "810:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "804:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "795:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "873:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "882:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "885:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "875:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "875:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "875:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "842:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "863:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "856:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "856:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "849:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "849:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "839:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "839:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "832:40:5"
															},
															"nodeType": "YulIf",
															"src": "829:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "898:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "908:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "686:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "697:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "709:6:5",
														"type": ""
													}
												],
												"src": "642:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "994:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1040:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1049:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1052:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1042:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1042:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1042:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1015:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1024:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1011:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1011:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1036:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1007:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:32:5"
															},
															"nodeType": "YulIf",
															"src": "1004:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1065:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1088:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1075:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1075:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1065:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "960:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "971:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "983:6:5",
														"type": ""
													}
												],
												"src": "924:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1190:103:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1236:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1245:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1248:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1238:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1238:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1238:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1211:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1220:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1207:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1207:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1232:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1203:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:32:5"
															},
															"nodeType": "YulIf",
															"src": "1200:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1261:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1277:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1271:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1271:16:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1261:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1156:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1167:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1179:6:5",
														"type": ""
													}
												],
												"src": "1109:184:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1385:161:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1431:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1440:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1443:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1433:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1433:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1433:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1406:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1415:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1402:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1398:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1398:32:5"
															},
															"nodeType": "YulIf",
															"src": "1395:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1456:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1479:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1466:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1456:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1498:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1508:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1498:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1343:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1354:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1366:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1374:6:5",
														"type": ""
													}
												],
												"src": "1298:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1655:212:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1701:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1676:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1672:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1672:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1697:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1668:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"nodeType": "YulIf",
															"src": "1665:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1726:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1749:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1736:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1736:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1726:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1768:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1795:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1806:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1791:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1778:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1778:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1768:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1819:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1846:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1857:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1842:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1829:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1819:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1605:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1616:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1628:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1636:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1644:6:5",
														"type": ""
													}
												],
												"src": "1551:316:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1921:97:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1938:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1949:5:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1943:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1943:12:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1931:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1931:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1931:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1976:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1981:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1972:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1998:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2005:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1994:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1994:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1988:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1988:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1965:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1965:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1965:47:5"
														}
													]
												},
												"name": "abi_encode_struct_Level",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1905:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1912:3:5",
														"type": ""
													}
												],
												"src": "1872:146:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2071:265:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2088:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2099:5:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2093:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2093:12:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2081:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2081:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2126:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2131:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2148:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2155:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2144:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2144:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2138:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2115:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2115:47:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2182:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2187:4:5",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2204:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2211:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2200:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2200:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2194:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2194:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2171:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2171:47:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2238:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2243:4:5",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2260:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2267:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2256:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2256:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2250:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2250:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2227:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2227:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2227:47:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2294:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2299:4:5",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2290:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2316:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2323:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2312:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2312:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2306:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2306:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2283:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2283:47:5"
														}
													]
												},
												"name": "abi_encode_struct_User",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2055:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2062:3:5",
														"type": ""
													}
												],
												"src": "2023:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2442:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2452:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2464:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2475:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2460:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2460:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2452:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2494:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2509:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2525:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2530:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2521:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2521:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2534:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2517:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2517:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2505:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2505:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2487:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2487:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2411:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2422:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2433:4:5",
														"type": ""
													}
												],
												"src": "2341:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2706:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2716:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2728:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2739:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2724:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2716:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2751:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2769:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2774:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2765:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2765:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2755:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2796:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2811:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2819:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2807:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2807:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2789:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2789:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2854:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2839:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2839:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2863:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2871:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2859:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2832:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2832:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2895:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2906:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2891:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2891:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2911:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2884:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2884:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2884:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2659:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2670:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2678:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2686:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2697:4:5",
														"type": ""
													}
												],
												"src": "2549:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3094:188:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3104:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3116:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3127:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3112:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3112:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3104:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3146:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3161:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3177:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3182:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3173:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3173:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3186:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3169:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3169:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3157:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3139:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3139:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3210:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3221:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3206:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3206:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3226:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3199:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3199:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3253:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3264:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3249:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3269:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3242:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3242:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3242:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3047:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3058:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3066:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3074:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3085:4:5",
														"type": ""
													}
												],
												"src": "2929:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3416:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3426:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3438:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3449:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3434:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3426:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3468:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3483:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3499:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3504:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3495:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3495:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3508:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3491:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3491:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3479:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3479:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3461:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3461:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3461:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3532:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3543:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3528:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3528:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3548:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3377:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3388:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3396:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3407:4:5",
														"type": ""
													}
												],
												"src": "3287:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3723:188:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3733:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3745:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3756:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3741:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3741:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3733:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3775:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3790:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3806:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3811:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3802:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3802:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3815:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3798:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3798:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3786:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3786:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3768:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3768:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3768:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3839:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3850:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3835:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3855:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3828:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3828:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3828:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3898:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3871:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3871:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3871:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3676:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3687:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3695:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3703:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3714:4:5",
														"type": ""
													}
												],
												"src": "3566:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4011:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4021:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4033:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4044:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4029:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4029:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4021:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4063:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4088:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4081:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4081:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4074:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4074:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4056:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4056:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4056:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3980:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:5",
														"type": ""
													}
												],
												"src": "3916:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4223:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4233:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4245:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4256:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4241:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4233:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4275:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4290:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4306:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4311:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4302:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4302:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4315:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4298:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4298:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4268:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4268:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4192:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4203:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4214:4:5",
														"type": ""
													}
												],
												"src": "4108:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4504:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4521:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4532:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4514:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4514:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4514:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4555:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4566:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4551:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4551:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4571:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4544:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4544:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4594:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4605:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4590:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4590:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4610:22:5",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4583:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4583:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4642:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4654:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4665:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4650:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4650:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4642:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4481:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4495:4:5",
														"type": ""
													}
												],
												"src": "4330:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4853:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4870:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4881:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4863:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4863:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4904:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4915:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4900:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4920:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4893:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4893:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4893:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4943:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4954:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4939:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4939:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4959:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4932:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4932:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5014:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5025:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5010:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5030:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5003:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5003:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5048:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5060:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5071:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5056:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5056:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5048:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4830:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4844:4:5",
														"type": ""
													}
												],
												"src": "4679:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5260:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5277:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5288:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5311:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5322:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5307:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5307:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5327:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5300:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5300:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5350:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5361:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5346:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5346:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5366:18:5",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5339:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5339:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5339:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5394:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5406:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5417:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5402:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5402:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5394:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5237:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5251:4:5",
														"type": ""
													}
												],
												"src": "5086:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5605:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5622:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5633:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5615:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5656:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5667:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5652:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5652:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5672:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5645:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5645:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5695:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5706:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5691:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5711:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5684:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5684:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5582:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5596:4:5",
														"type": ""
													}
												],
												"src": "5431:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5966:167:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5983:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5976:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5976:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5976:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6017:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6028:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6013:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6013:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6033:2:5",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6006:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6006:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6006:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6056:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6067:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6052:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6052:18:5"
																	},
																	{
																		"hexValue": "4e6f20616374697665206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6072:19:5",
																		"type": "",
																		"value": "No active deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6045:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6045:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6045:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6101:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6113:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6124:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6109:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6109:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6101:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5943:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5957:4:5",
														"type": ""
													}
												],
												"src": "5792:341:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6312:168:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6329:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6340:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6322:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6322:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6363:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6374:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6359:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6359:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6379:2:5",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6352:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6352:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6352:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6402:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6413:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6398:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6398:18:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206465706f736974",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6418:20:5",
																		"type": "",
																		"value": "Not enough deposit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6391:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6391:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6448:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6460:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6471:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6448:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6289:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6303:4:5",
														"type": ""
													}
												],
												"src": "6138:342:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6846:276:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6856:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6868:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6879:3:5",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6864:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6864:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6856:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6916:6:5"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6924:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "6892:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6892:42:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6892:42:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6967:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6979:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6990:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6975:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6975:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "6943:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6943:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6943:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7027:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7039:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7050:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7035:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7035:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "7003:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7003:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7003:52:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7088:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7100:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7111:3:5",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7096:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7096:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_Level",
																	"nodeType": "YulIdentifier",
																	"src": "7064:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7064:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7064:52:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr__to_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6791:9:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6802:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6810:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6818:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6826:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6837:4:5",
														"type": ""
													}
												],
												"src": "6485:637:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7592:449:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7602:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7614:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7625:3:5",
																		"type": "",
																		"value": "768"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7610:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7610:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7602:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7661:6:5"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7669:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7638:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7638:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7638:41:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7711:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7723:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7734:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7719:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7719:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7688:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7688:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7688:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7771:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7783:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7794:3:5",
																				"type": "",
																				"value": "320"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7779:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7779:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7748:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7748:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7748:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7831:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7843:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7854:3:5",
																				"type": "",
																				"value": "480"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7839:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7839:19:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_User",
																	"nodeType": "YulIdentifier",
																	"src": "7808:22:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7808:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7879:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7890:3:5",
																				"type": "",
																				"value": "640"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7875:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7875:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7896:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7868:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7868:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7923:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7934:3:5",
																				"type": "",
																				"value": "672"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7919:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7919:19:5"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "7940:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7912:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7912:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7967:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7978:3:5",
																				"type": "",
																				"value": "704"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7963:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7963:19:5"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "7984:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7956:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7956:35:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8011:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8022:3:5",
																				"type": "",
																				"value": "736"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8007:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8007:19:5"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "8028:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8000:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7505:9:5",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "7516:6:5",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "7524:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "7532:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7540:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7548:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7556:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7564:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7572:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7583:4:5",
														"type": ""
													}
												],
												"src": "7127:914:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8147:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8157:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8169:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8180:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8165:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8165:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8157:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8199:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8210:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8192:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8116:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8127:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8138:4:5",
														"type": ""
													}
												],
												"src": "8046:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8357:119:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8367:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8379:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8390:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8375:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8375:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8367:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8409:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8420:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8402:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8402:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8447:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8458:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8443:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8443:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8463:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8436:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8436:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8436:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8318:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8329:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8337:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8348:4:5",
														"type": ""
													}
												],
												"src": "8228:248:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8694:250:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8704:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8716:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8727:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8712:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8712:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8704:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8747:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8758:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8740:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8740:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8740:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8785:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8796:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8781:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8781:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8801:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8774:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8774:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8774:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8828:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8839:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8824:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8824:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8844:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8817:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8817:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8817:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8871:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8882:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8867:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8867:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8887:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8860:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8860:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8914:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8925:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8910:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8910:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8931:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8903:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8903:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8903:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8631:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8642:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8650:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8658:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8666:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8674:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8685:4:5",
														"type": ""
													}
												],
												"src": "8481:463:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8997:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9024:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9026:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9026:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9026:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9013:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9020:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9016:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9016:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9010:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9010:13:5"
															},
															"nodeType": "YulIf",
															"src": "9007:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9055:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9066:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9069:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9062:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9062:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9055:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8980:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8983:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8989:3:5",
														"type": ""
													}
												],
												"src": "8949:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9128:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9159:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9180:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9187:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9192:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "9183:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9183:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9173:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9173:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9173:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9224:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9227:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9217:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9252:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9255:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9245:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9245:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9245:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9148:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9141:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9141:9:5"
															},
															"nodeType": "YulIf",
															"src": "9138:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9279:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9288:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9291:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9284:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9284:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "9279:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9113:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9116:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "9122:1:5",
														"type": ""
													}
												],
												"src": "9082:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9356:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9415:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9417:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9417:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9417:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9387:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9380:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9380:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9373:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9373:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9395:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9406:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "9402:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9402:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9410:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "9398:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9398:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9392:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9392:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9369:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9369:45:5"
															},
															"nodeType": "YulIf",
															"src": "9366:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9446:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9461:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9464:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9457:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9457:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9446:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9335:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9338:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9344:7:5",
														"type": ""
													}
												],
												"src": "9304:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9526:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9548:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9550:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9550:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9550:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9542:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9545:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9539:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9539:8:5"
															},
															"nodeType": "YulIf",
															"src": "9536:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9579:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9591:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9594:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9587:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9587:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9579:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9508:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9511:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9517:4:5",
														"type": ""
													}
												],
												"src": "9477:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9639:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9656:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9663:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9668:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9659:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9659:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9649:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9649:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9649:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9696:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9699:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9689:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9689:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9689:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9720:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9723:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9713:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9713:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9713:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9607:127:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_struct_Level(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n    }\n    function abi_encode_struct_User(value, pos)\n    {\n        mstore(pos, mload(value))\n        mstore(add(pos, 0x20), mload(add(value, 0x20)))\n        mstore(add(pos, 0x40), mload(add(value, 0x40)))\n        mstore(add(pos, 0x60), mload(add(value, 0x60)))\n        mstore(add(pos, 0x80), mload(add(value, 0x80)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"No active deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Not enough deposit\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr__to_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr_t_struct$_Level_$327_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        abi_encode_struct_Level(value0, headStart)\n        abi_encode_struct_Level(value1, add(headStart, 64))\n        abi_encode_struct_Level(value2, add(headStart, 128))\n        abi_encode_struct_Level(value3, add(headStart, 192))\n    }\n    function abi_encode_tuple_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_struct$_User_$322_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 768)\n        abi_encode_struct_User(value0, headStart)\n        abi_encode_struct_User(value1, add(headStart, 160))\n        abi_encode_struct_User(value2, add(headStart, 320))\n        abi_encode_struct_User(value3, add(headStart, 480))\n        mstore(add(headStart, 640), value4)\n        mstore(add(headStart, 672), value5)\n        mstore(add(headStart, 704), value6)\n        mstore(add(headStart, 736), value7)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBEB8314C GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBEB8314C EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xE788CEE5 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0xEDF501AD EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0xAFF3B697 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x6386C1C7 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x259EE752 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x32E96203 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x121C JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 SWAP1 SWAP2 MSTORE SWAP2 DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD SWAP4 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AC PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x12BC JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AC PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0x544 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x6BA JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x129A JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x1EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x237 PUSH2 0x232 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0x8D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x136E JUMP JUMPDEST PUSH2 0x1AC PUSH2 0xA48 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x1AC PUSH2 0xAAE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EF JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x282 CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST PUSH2 0x2AD PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0x121C JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x129A JUMP JUMPDEST PUSH2 0xDAE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE DUP2 DUP2 MSTORE DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC SLOAD DUP2 MSTORE PUSH32 0x17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3ED SLOAD DUP2 DUP5 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD DUP1 DUP7 ADD DUP7 MSTORE PUSH32 0xABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE05 SLOAD DUP2 MSTORE PUSH32 0xABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE06 SLOAD DUP2 DUP7 ADD SWAP1 DUP2 MSTORE DUP7 MLOAD DUP1 DUP9 ADD DUP9 MSTORE PUSH32 0x91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A7 SLOAD DUP2 MSTORE PUSH32 0x91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A8 SLOAD DUP2 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP7 MSTORE PUSH1 0x4 DUP8 MSTORE DUP8 MLOAD DUP1 DUP10 ADD DUP10 MSTORE PUSH32 0x2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA0 SLOAD DUP2 MSTORE PUSH32 0x2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA1 SLOAD DUP2 DUP10 ADD SWAP1 DUP2 MSTORE DUP10 MLOAD SWAP7 MLOAD DUP8 MSTORE SWAP5 MLOAD SWAP8 DUP7 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP2 MLOAD SWAP7 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP5 MLOAD PUSH1 0x60 DUP4 ADD MSTORE SWAP4 MLOAD PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xA0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x4D1 PUSH2 0x4B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x1AC PUSH2 0x4F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x11FA JUMP JUMPDEST PUSH2 0xFA2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x52C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 ADD SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5AB DUP3 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP9 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x5EE SWAP1 DUP5 SWAP1 PUSH2 0x13CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x641 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x655 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x679 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP PUSH32 0x34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7 DUP3 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6AD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x103A JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x74D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDD08195B9BDD59DA0819195C1BDCDA5D PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x759 DUP3 DUP5 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x767 DUP3 DUP7 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP9 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP2 SWAP3 POP SWAP1 TIMESTAMP LT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x64 PUSH1 0x2 SLOAD DUP4 PUSH2 0x7A9 SWAP2 SWAP1 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0x7B3 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP10 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 TIMESTAMP SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x7F1 SWAP1 DUP5 SWAP1 PUSH2 0x1428 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP6 PUSH2 0x812 DUP5 DUP7 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x858 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x890 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP5 PUSH1 0x0 DUP9 PUSH1 0x40 MLOAD PUSH2 0x8C5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8DD PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x8E5 PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x8ED PUSH2 0x11AF JUMP JUMPDEST PUSH2 0x8F5 PUSH2 0x11AF JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP1 DUP4 MSTORE DUP2 DUP6 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP1 DUP3 ADD DUP6 MSTORE DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP1 DUP5 ADD SLOAD DUP4 DUP9 ADD MSTORE PUSH1 0x2 DUP1 DUP6 ADD SLOAD DUP5 DUP9 ADD MSTORE DUP5 DUP10 ADD SLOAD PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x4 SWAP6 DUP7 ADD SLOAD PUSH1 0x80 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 DUP13 MSTORE DUP8 DUP11 MSTORE DUP9 DUP13 KECCAK256 DUP10 MLOAD DUP1 DUP8 ADD DUP12 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP7 ADD SLOAD DUP2 DUP14 ADD MSTORE DUP2 DUP6 ADD SLOAD DUP2 DUP13 ADD MSTORE DUP2 DUP14 ADD SLOAD DUP2 DUP6 ADD MSTORE SWAP1 DUP9 ADD SLOAD DUP2 DUP4 ADD MSTORE DUP4 DUP14 MSTORE DUP9 DUP12 MSTORE DUP10 DUP14 KECCAK256 DUP11 MLOAD DUP1 DUP9 ADD DUP13 MSTORE DUP2 SLOAD DUP2 MSTORE DUP2 DUP8 ADD SLOAD DUP2 DUP15 ADD MSTORE DUP2 DUP7 ADD SLOAD DUP2 DUP14 ADD MSTORE DUP2 DUP15 ADD SLOAD DUP2 DUP7 ADD MSTORE SWAP1 DUP10 ADD SLOAD DUP2 DUP5 ADD MSTORE DUP13 DUP15 MSTORE SWAP9 DUP12 MSTORE DUP10 DUP14 KECCAK256 DUP11 MLOAD SWAP7 DUP8 ADD DUP12 MSTORE DUP1 SLOAD DUP8 MSTORE SWAP5 DUP6 ADD SLOAD SWAP11 DUP7 ADD SWAP11 SWAP1 SWAP11 MSTORE SWAP2 DUP4 ADD SLOAD SWAP8 DUP5 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP8 DUP2 ADD SLOAD SWAP6 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 SWAP1 SWAP2 ADD SLOAD SWAP5 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 DUP1 DUP1 DUP1 PUSH2 0xA14 DUP10 DUP3 PUSH2 0xD0C JUMP JUMPDEST SWAP4 POP PUSH2 0xA21 DUP10 PUSH1 0x1 PUSH2 0xD0C JUMP JUMPDEST SWAP3 POP PUSH2 0xA2E DUP10 PUSH1 0x2 PUSH2 0xD0C JUMP JUMPDEST SWAP2 POP PUSH2 0xA3B DUP10 PUSH1 0x3 PUSH2 0xD0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP4 SWAP6 SWAP8 POP SWAP2 SWAP4 SWAP6 SWAP8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x6EC PUSH1 0x0 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH2 0x6EC PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB39 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB5D SWAP2 SWAP1 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBB7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBDB SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0xC39 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x139BC81858DD1A5D994819195C1BDCDA5D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC45 DUP3 DUP5 PUSH2 0xD0C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xC7D SWAP1 DUP5 SWAP1 PUSH2 0x13CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP8 DUP6 MSTORE SWAP1 SWAP2 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 TIMESTAMP SWAP2 ADD SSTORE MLOAD PUSH32 0xE311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873 SWAP1 PUSH2 0x6AD SWAP1 DUP5 SWAP1 DUP7 SWAP1 DUP6 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP6 DUP6 MSTORE SWAP1 SWAP2 MSTORE DUP3 KECCAK256 ADD SLOAD DUP2 SWAP1 PUSH2 0xD3D SWAP1 TIMESTAMP PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 SWAP1 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0xD80 DUP5 DUP7 PUSH2 0x1409 JUMP JUMPDEST PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST PUSH2 0xD94 SWAP2 SWAP1 PUSH2 0x13E7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDA2 DUP3 DUP7 PUSH2 0x1409 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE86 SWAP2 SWAP1 PUSH2 0x1246 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0xEC7 JUMPI PUSH2 0xEBA DUP2 DUP4 PUSH2 0xD0C JUMP JUMPDEST PUSH2 0xEC4 SWAP1 DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0xEFA SWAP1 DUP5 SWAP1 PUSH2 0x13CF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 TIMESTAMP PUSH1 0x2 DUP3 ADD DUP2 SWAP1 SSTORE SWAP4 ADD DUP4 SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xF44 SWAP2 PUSH2 0x13CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP1 PUSH2 0x6AD SWAP1 DUP4 SWAP1 DUP6 SWAP1 DUP8 SWAP1 PUSH2 0x1318 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP1 PUSH2 0x1339 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1031 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x523 JUMP JUMPDEST PUSH2 0xBDB DUP2 PUSH2 0x10D7 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1174 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x523 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x10BA CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x11F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1215 DUP3 PUSH2 0x11DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x122F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1238 DUP4 PUSH2 0x11DE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1215 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x127A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH2 0x300 DUP2 ADD PUSH2 0x137D DUP3 DUP12 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x138A PUSH1 0xA0 DUP4 ADD DUP11 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x1398 PUSH2 0x140 DUP4 ADD DUP10 PUSH2 0x12E8 JUMP JUMPDEST PUSH2 0x13A6 PUSH2 0x1E0 DUP4 ADD DUP9 PUSH2 0x12E8 JUMP JUMPDEST DUP6 PUSH2 0x280 DUP4 ADD MSTORE DUP5 PUSH2 0x2A0 DUP4 ADD MSTORE DUP4 PUSH2 0x2C0 DUP4 ADD MSTORE DUP3 PUSH2 0x2E0 DUP4 ADD MSTORE SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x13E2 JUMPI PUSH2 0x13E2 PUSH2 0x143F JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1404 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1423 JUMPI PUSH2 0x1423 PUSH2 0x143F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x143A JUMPI PUSH2 0x143A PUSH2 0x143F JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF EXTCODECOPY 0xD8 GASLIMIT 0xAB 0xC8 CALLDATALOAD SLT 0xB2 BYTE SWAP1 0xC1 MSIZE 0xD2 0xD8 PUSH4 0x4F7380C6 0xF8 0xDA BYTE SAR PUSH10 0x2F0980968AB3E264736F PUSH13 0x63430008070033000000000000 ",
							"sourceMap": "224:5936:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;708:68;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8740:25:5;;;8796:2;8781:18;;8774:34;;;;8824:18;;;8817:34;;;;8882:2;8867:18;;8860:34;8925:3;8910:19;;8903:35;8727:3;8712:19;708:68:4;;;;;;;;5712:187;;;;;;:::i;:::-;;:::i;:::-;;3388:486;;;;;;:::i;:::-;;:::i;1820:64::-;;;:::i;2602:780::-;;;;;;:::i;:::-;;:::i;317:27::-;;;;;-1:-1:-1;;;;;317:27:4;;;;;;-1:-1:-1;;;;;2505:32:5;;;2487:51;;2475:2;2460:18;317:27:4;2341:203:5;1098:84:1;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1098:84;;4081:14:5;;4074:22;4056:41;;4044:2;4029:18;1098:84:1;3916:187:5;4799:630:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;1668:101:0:-;;;:::i;1750:60:4:-;;;:::i;6022:136::-;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;3880:438:4;;;;;;:::i;:::-;;:::i;5905:111::-;;;;;;:::i;:::-;;:::i;4324:465::-;;;;;;:::i;:::-;;:::i;:::-;;;8192:25:5;;;8180:2;8165:18;4324:465:4;8046:177:5;1891:705:4;;;;;;:::i;:::-;;:::i;5435:271::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5575:21:4;;;;;;;5584:12;5575:21;;;;;;;;;;;5606;;;;;;;5615:12;5606:21;;;;;;;;;;;5637;;;;;;;5646:12;5637:21;;;;;;;;;;;5692:1;5682:12;;;5584:9;5682:12;;5673:21;;;;;;;5682:12;5673:21;;;;;;;;;;;5435:271;;1943:12:5;;1931:25;;1988:23;;1972:14;;;1965:47;;;;1943:12;;6975:18;;;1931:25;;;;1988:23;;1972:14;;;1965:47;1943:12;;7050:3;7035:19;;1931:25;1988:23;;1972:14;;;1965:47;1943:12;;7111:3;7096:19;;1931:25;1988:23;;1972:14;;;1965:47;6879:3;6864:19;5435:271:4;6485:637:5;782:42:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;8402:25:5;;;8458:2;8443:18;;8436:34;;;;8375:18;782:42:4;8228:248:5;1918:198:0;;;;;;:::i;:::-;;:::i;5712:187:4:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;5816:16:4::1;::::0;;;:9:::1;:16;::::0;;;;;:27;;;5853::::1;;:39:::0;5712:187::o;3388:486::-;3459:10;3438:18;3487:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;3479:78;;;;-1:-1:-1;;;3479:78:4;;5994:2:5;3479:78:4;;;5976:21:5;6033:2;6013:18;;;6006:30;-1:-1:-1;;;6052:18:5;;;6045:47;6109:18;;3479:78:4;5792:341:5;3479:78:4;3568:15;3586:36;3603:10;3615:6;3586:16;:36::i;:::-;-1:-1:-1;;;;;3633:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;3682:15;3633:46;;;:64;;;;3707:44;;:55;;3568:54;;-1:-1:-1;3568:54:4;;3707:44;;3633:28;3707:55;;3568:54;;3707:55;:::i;:::-;;;;-1:-1:-1;;3773:13:4;;:43;;-1:-1:-1;;;3773:43:4;;-1:-1:-1;;;;;3479:32:5;;;3773:43:4;;;3461:51:5;3528:18;;;3521:34;;;3773:13:4;;;;:22;;3434:18:5;;3773:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3832:35;3839:10;3851:6;3859:7;3832:35;;;;;;;;:::i;:::-;;;;;;;;3428:446;;3388:486;:::o;1820:64::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1867:10:4::1;:8;:10::i;:::-;1820:64::o:0;2602:780::-;2693:10;2672:18;2721:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;:55;-1:-1:-1;2721:55:4;2713:86;;;;-1:-1:-1;;;2713:86:4;;6340:2:5;2713:86:4;;;6322:21:5;6379:2;6359:18;;;6352:30;-1:-1:-1;;;6398:18:5;;;6391:48;6456:18;;2713:86:4;6138:342:5;2713:86:4;2810:15;2828:36;2845:10;2857:6;2828:16;:36::i;:::-;2810:54;-1:-1:-1;2874:22:4;2899:17;2810:54;2899:7;:17;:::i;:::-;-1:-1:-1;;;;;2959:28:4;;2927:19;2959:28;;;:16;:28;;;;;;;;:36;;;;;;;;:47;;;2874:42;;-1:-1:-1;2927:19:4;3009:15;-1:-1:-1;2956:149:4;;;3091:3;3071:16;;3054:14;:33;;;;:::i;:::-;3053:41;;;;:::i;:::-;3039:55;;2956:149;-1:-1:-1;;;;;3115:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;3164:15;3115:46;;;:64;;;;3197:55;;3245:7;;3115:28;3197:55;;3245:7;;3197:55;:::i;:::-;;;;-1:-1:-1;;3263:13:4;;-1:-1:-1;;;;;3263:13:4;:22;3286:10;3298:28;3315:11;3298:14;:28;:::i;:::-;3263:64;;-1:-1:-1;;;;;;3263:64:4;;;;;;;-1:-1:-1;;;;;3479:32:5;;;3263:64:4;;;3461:51:5;3528:18;;;3521:34;3434:18;;3263:64:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3343:32;3352:10;3364:1;3367:7;3343:32;;;;;;;;:::i;:::-;;;;;;;;2662:720;;;;2602:780;;:::o;4799:630::-;4857:18;;:::i;:::-;4878;;:::i;:::-;4898;;:::i;:::-;4918;;:::i;:::-;-1:-1:-1;;;;;;;;5048:23:4;;4938:21;5048:23;;;:16;:23;;;;;;;;:26;;;;;;;;;5039:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5093:26;;;;;;;;;5084:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5138:26;;;;;;;;;5129:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5185:26;;;;;;;;;5176:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5039;;-1:-1:-1;5084:35:4;;4938:21;;;5240:26;5065:5;4938:21;5240:16;:26::i;:::-;5224:42;;5292:26;5309:5;5316:1;5292:16;:26::i;:::-;5276:42;;5344:26;5361:5;5368:1;5344:16;:26::i;:::-;5328:42;;5396:26;5413:5;5420:1;5396:16;:26::i;:::-;5380:42;;4799:630;;;;;;;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;1750:60:4:-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1795:8:4::1;:6;:8::i;6022:136::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6077:13:4::1;::::0;6112:38:::1;::::0;-1:-1:-1;;;6112:38:4;;6144:4:::1;6112:38;::::0;::::1;2487:51:5::0;-1:-1:-1;;;;;6077:13:4;;::::1;::::0;:22:::1;::::0;6100:10:::1;::::0;6077:13;;6112:23:::1;::::0;2460:18:5;;6112:38:4::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6077:74;::::0;-1:-1:-1;;;;;;6077:74:4::1;::::0;;;;;;-1:-1:-1;;;;;3479:32:5;;;6077:74:4::1;::::0;::::1;3461:51:5::0;3528:18;;;3521:34;3434:18;;6077:74:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6022:136::o:0;3880:438::-;3954:10;3933:18;3982:28;;;:16;:28;;;;;;;;:36;;;;;;;;:44;3974:78;;;;-1:-1:-1;;;3974:78:4;;5994:2:5;3974:78:4;;;5976:21:5;6033:2;6013:18;;;6006:30;-1:-1:-1;;;6052:18:5;;;6045:47;6109:18;;3974:78:4;5792:341:5;3974:78:4;4063:15;4081:36;4098:10;4110:6;4081:16;:36::i;:::-;-1:-1:-1;;;;;4128:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;:55;;4063:54;;-1:-1:-1;4063:54:4;;4128:36;;:28;:55;;4063:54;;4128:55;:::i;:::-;;;;-1:-1:-1;;;;;;;4193:28:4;;;;;;:16;:28;;;;;;;;:36;;;;;;;;;;4242:15;4193:46;;:64;4273:38;;;;;4210:10;;4222:6;;4303:7;;4273:38;:::i;5905:111::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5983:16:4::1;:26:::0;5905:111::o;4324:465::-;-1:-1:-1;;;;;4460:23:4;;4403:7;4460:23;;;:16;:23;;;;;;;;:31;;;;;;;;:41;;4403:7;;4442:59;;:15;:59;:::i;:::-;-1:-1:-1;;;;;4529:23:4;;4511:15;4529:23;;;:16;:23;;;;;;;;:31;;;;;;;;:39;4593:9;:17;;;;;:21;4421:80;;-1:-1:-1;4529:39:4;4593:21;4680:8;4671:5;4654:13;4593:21;4529:39;4654:13;:::i;:::-;4653:23;;;;:::i;:::-;4652:36;;;;:::i;:::-;4625:63;-1:-1:-1;4698:21:4;4722:29;4625:63;4722:10;:29;:::i;:::-;4698:53;4324:465;-1:-1:-1;;;;;;;;4324:465:4:o;1891:705::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;5288:2:5;1403:38:1;;;5270:21:5;5327:2;5307:18;;;5300:30;-1:-1:-1;;;5346:18:5;;;5339:46;5402:18;;1403:38:1;5086:340:5;1403:38:1;2022:13:4::1;::::0;:62:::1;::::0;-1:-1:-1;;;2022:62:4;;1994:10:::1;2022:62;::::0;::::1;2789:34:5::0;;;2069:4:4::1;2839:18:5::0;;;2832:43;2891:18;;;2884:34;;;1994:10:4;-1:-1:-1;;;;;2022:13:4::1;::::0;:26:::1;::::0;2724:18:5;;2022:62:4::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;2098:28:4;::::1;2145:1;2098:28:::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;:44;:48;2095:124:::1;;2172:36;2189:10;2201:6;2172:16;:36::i;:::-;2161:47;::::0;;::::1;:::i;:::-;;;2095:124;-1:-1:-1::0;;;;;2229:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;:55;;2277:7;;2229:28;:55:::1;::::0;2277:7;;2229:55:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;2294:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;2341:15:::1;2294:44;::::0;::::1;:62:::0;;;2366:46;::::1;:64:::0;;;2508:9:::1;:17:::0;;;;;;:28:::1;;::::0;2490:46:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;2440:28:4;::::1;;::::0;;;:16:::1;:28;::::0;;;;;;;:36;;;;;;;;;;:47:::1;;:96:::0;;;;2552:37;::::1;::::0;::::1;::::0;2457:10;;2469:6;;2581:7;;2552:37:::1;:::i;1918:198:0:-:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4881:2:5;1998:73:0::1;::::0;::::1;4863:21:5::0;4920:2;4900:18;;;4893:30;4959:34;4939:18;;;4932:62;-1:-1:-1;;;5010:18:5;;;5003:36;5056:19;;1998:73:0::1;4679:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;2110:117:1:-:0;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;4532:2:5;1669:41:1;;;4514:21:5;4571:2;4551:18;;;4544:30;-1:-1:-1;;;4590:18:5;;;4583:50;4650:18;;1669:41:1;4330:344:5;1669:41:1;2178:5:::1;2168:15:::0;;-1:-1:-1;;;;2168:15:1::1;::::0;;2198:22:::1;719:10:3::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;2505:32:5;;;2487:51;;2475:2;2460:18;2198:22:1::1;;;;;;;2110:117::o:0;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;5288:2:5;1403:38:1;;;5270:21:5;5327:2;5307:18;;;5300:30;-1:-1:-1;;;5346:18:5;;;5339:46;5402:18;;1403:38:1;5086:340:5;1403:38:1;1922:7:::1;:14:::0;;-1:-1:-1;;;;1922:14:1::1;-1:-1:-1::0;;;1922:14:1::1;::::0;;1951:20:::1;1958:12;719:10:3::0;;640:96;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:5:-;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:5:o;383:254::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;627:2;612:18;;;;599:32;;-1:-1:-1;;;383:254:5:o;642:277::-;709:6;762:2;750:9;741:7;737:23;733:32;730:52;;;778:1;775;768:12;730:52;810:9;804:16;863:5;856:13;849:21;842:5;839:32;829:60;;885:1;882;875:12;924:180;983:6;1036:2;1024:9;1015:7;1011:23;1007:32;1004:52;;;1052:1;1049;1042:12;1004:52;-1:-1:-1;1075:23:5;;924:180;-1:-1:-1;924:180:5:o;1109:184::-;1179:6;1232:2;1220:9;1211:7;1207:23;1203:32;1200:52;;;1248:1;1245;1238:12;1200:52;-1:-1:-1;1271:16:5;;1109:184;-1:-1:-1;1109:184:5:o;1298:248::-;1366:6;1374;1427:2;1415:9;1406:7;1402:23;1398:32;1395:52;;;1443:1;1440;1433:12;1395:52;-1:-1:-1;;1466:23:5;;;1536:2;1521:18;;;1508:32;;-1:-1:-1;1298:248:5:o;1551:316::-;1628:6;1636;1644;1697:2;1685:9;1676:7;1672:23;1668:32;1665:52;;;1713:1;1710;1703:12;1665:52;-1:-1:-1;;1736:23:5;;;1806:2;1791:18;;1778:32;;-1:-1:-1;1857:2:5;1842:18;;;1829:32;;1551:316;-1:-1:-1;1551:316:5:o;2023:313::-;2099:5;2093:12;2088:3;2081:25;2155:4;2148:5;2144:16;2138:23;2131:4;2126:3;2122:14;2115:47;2211:4;2204:5;2200:16;2194:23;2187:4;2182:3;2178:14;2171:47;2267:4;2260:5;2256:16;2250:23;2243:4;2238:3;2234:14;2227:47;2323:4;2316:5;2312:16;2306:23;2299:4;2294:3;2290:14;2283:47;;;2023:313::o;2929:353::-;-1:-1:-1;;;;;3157:32:5;;;;3139:51;;3221:2;3206:18;;3199:34;;;;3264:2;3249:18;;3242:34;3127:2;3112:18;;2929:353::o;5431:356::-;5633:2;5615:21;;;5652:18;;;5645:30;5711:34;5706:2;5691:18;;5684:62;5778:2;5763:18;;5431:356::o;7127:914::-;7625:3;7610:19;;7638:41;7614:9;7661:6;7638:41;:::i;:::-;7688:51;7734:3;7723:9;7719:19;7711:6;7688:51;:::i;:::-;7748;7794:3;7783:9;7779:19;7771:6;7748:51;:::i;:::-;7808;7854:3;7843:9;7839:19;7831:6;7808:51;:::i;:::-;7896:6;7890:3;7879:9;7875:19;7868:35;7940:6;7934:3;7923:9;7919:19;7912:35;7984:6;7978:3;7967:9;7963:19;7956:35;8028:6;8022:3;8011:9;8007:19;8000:35;7127:914;;;;;;;;;;;:::o;8949:128::-;8989:3;9020:1;9016:6;9013:1;9010:13;9007:39;;;9026:18;;:::i;:::-;-1:-1:-1;9062:9:5;;8949:128::o;9082:217::-;9122:1;9148;9138:132;;9192:10;9187:3;9183:20;9180:1;9173:31;9227:4;9224:1;9217:15;9255:4;9252:1;9245:15;9138:132;-1:-1:-1;9284:9:5;;9082:217::o;9304:168::-;9344:7;9410:1;9406;9402:6;9398:14;9395:1;9392:21;9387:1;9380:9;9373:17;9369:45;9366:71;;;9417:18;;:::i;:::-;-1:-1:-1;9457:9:5;;9304:168::o;9477:125::-;9517:4;9545:1;9542;9539:8;9536:34;;;9550:18;;:::i;:::-;-1:-1:-1;9587:9:5;;9477:125::o;9607:127::-;9668:10;9663:3;9659:20;9656:1;9649:31;9699:4;9696:1;9689:15;9723:4;9720:1;9713:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1051800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptedToken()": "2382",
								"calculateRewards(address,uint256)": "infinite",
								"changeEarlyWithdrawFee(uint256)": "24575",
								"changeLevelValues(uint256,uint256,uint256)": "46737",
								"claim(uint256)": "infinite",
								"compound(uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"getLevelsInfo()": "17677",
								"getUserInfo(address)": "infinite",
								"levelInfo(uint256)": "4665",
								"owner()": "2398",
								"pause()": "29802",
								"paused()": "2376",
								"renounceOwnership()": "28225",
								"transferOwnership(address)": "28419",
								"unpause()": "29840",
								"userLevelDeposit(address,uint256)": "11166",
								"withdraw(uint256,uint256)": "infinite",
								"withdrawTokens()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 224,
									"end": 6160,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 378,
									"end": 380,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 351,
									"end": 380,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 351,
									"end": 380,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1143,
									"end": 1699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 991,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1182,
									"end": 1212,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1264,
									"end": 1273,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1264,
									"end": 1276,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1264,
									"end": 1276,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1283,
									"end": 1288,
									"name": "PUSH",
									"source": 4,
									"value": "8E94"
								},
								{
									"begin": 1264,
									"end": 1276,
									"name": "PUSH",
									"source": 4,
									"value": "17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC"
								},
								{
									"begin": 1264,
									"end": 1288,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1324,
									"end": 1331,
									"name": "PUSH",
									"source": 4,
									"value": "278D00"
								},
								{
									"begin": 1298,
									"end": 1321,
									"name": "PUSH",
									"source": 4,
									"value": "17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3ED"
								},
								{
									"begin": 1298,
									"end": 1331,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1403,
									"end": 1408,
									"name": "PUSH",
									"source": 4,
									"value": "B239"
								},
								{
									"begin": 1384,
									"end": 1396,
									"name": "PUSH",
									"source": 4,
									"value": "ABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE05"
								},
								{
									"begin": 1384,
									"end": 1408,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1444,
									"end": 1451,
									"name": "PUSH",
									"source": 4,
									"value": "76A700"
								},
								{
									"begin": 1418,
									"end": 1441,
									"name": "PUSH",
									"source": 4,
									"value": "ABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE06"
								},
								{
									"begin": 1418,
									"end": 1451,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1523,
									"end": 1528,
									"name": "PUSH",
									"source": 4,
									"value": "D5DE"
								},
								{
									"begin": 1504,
									"end": 1516,
									"name": "PUSH",
									"source": 4,
									"value": "91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A7"
								},
								{
									"begin": 1504,
									"end": 1528,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1564,
									"end": 1572,
									"name": "PUSH",
									"source": 4,
									"value": "ED4E00"
								},
								{
									"begin": 1538,
									"end": 1561,
									"name": "PUSH",
									"source": 4,
									"value": "91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A8"
								},
								{
									"begin": 1538,
									"end": 1572,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1634,
									"end": 1635,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1624,
									"end": 1636,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1624,
									"end": 1636,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1643,
									"end": 1648,
									"name": "PUSH",
									"source": 4,
									"value": "11D28"
								},
								{
									"begin": 1624,
									"end": 1636,
									"name": "PUSH",
									"source": 4,
									"value": "2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA0"
								},
								{
									"begin": 1624,
									"end": 1648,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1684,
									"end": 1692,
									"name": "PUSH",
									"source": 4,
									"value": "1E13380"
								},
								{
									"begin": 1658,
									"end": 1681,
									"name": "PUSH",
									"source": 4,
									"value": "2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA1"
								},
								{
									"begin": 1658,
									"end": 1692,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 224,
									"end": 6160,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200f3cd845abc83512b21a90c159d2d8634f7380c6f8da1a1d692f0980968ab3e264736f6c63430008070033",
									".code": [
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "BEB8314C"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "BEB8314C"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "E788CEE5"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "EDF501AD"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "8D8F2ADB"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "AA5F7E26"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "AFF3B697"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "451C3D80"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "6386C1C7"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "259EE752"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "32E96203"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "379607F5"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "3F4BA83A"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 224,
											"end": 6160,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8740,
											"end": 8765,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8765,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8740,
											"end": 8765,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8798,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8781,
											"end": 8799,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 8781,
											"end": 8799,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8774,
											"end": 8808,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8774,
											"end": 8808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8774,
											"end": 8808,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 8774,
											"end": 8808,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8824,
											"end": 8842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8851,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8851,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8882,
											"end": 8884,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8867,
											"end": 8885,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8867,
											"end": 8885,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8860,
											"end": 8894,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8925,
											"end": 8928,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8910,
											"end": 8929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8910,
											"end": 8929,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8903,
											"end": 8938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8727,
											"end": 8730,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 8712,
											"end": 8731,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 708,
											"end": 776,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 708,
											"end": 776,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 708,
											"end": 776,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1820,
											"end": 1884,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1820,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1820,
											"end": 1884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 1884,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 317,
											"end": 344,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 317,
											"end": 344,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2538,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2477,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 317,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 2341,
											"end": 2544,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4095,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4081,
											"end": 4095,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4096,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4056,
											"end": 4097,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4056,
											"end": 4097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4044,
											"end": 4046,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3916,
											"end": 4103,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1750,
											"end": 1810,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1750,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1750,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1750,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1750,
											"end": 1810,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6022,
											"end": 6158,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 6022,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 6022,
											"end": 6158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6022,
											"end": 6158,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8192,
											"end": 8217,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8192,
											"end": 8217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8182,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8165,
											"end": 8183,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 8046,
											"end": 8223,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5435,
											"end": 5706,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 5435,
											"end": 5706,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5584,
											"end": 5596,
											"name": "PUSH",
											"source": 4,
											"value": "17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3EC"
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "PUSH",
											"source": 4,
											"value": "17EF568E3E12AB5B9C7254A8D58478811DE00F9E6EB34345ACD53BF8FD09D3ED"
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5575,
											"end": 5596,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5615,
											"end": 5627,
											"name": "PUSH",
											"source": 4,
											"value": "ABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE05"
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "PUSH",
											"source": 4,
											"value": "ABD6E7CB50984FF9C2F3E18A2660C3353DADF4E3291DEEB275DAE2CD1E44FE06"
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5606,
											"end": 5627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5646,
											"end": 5658,
											"name": "PUSH",
											"source": 4,
											"value": "91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A7"
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "PUSH",
											"source": 4,
											"value": "91DA3FD0782E51C6B3986E9E672FD566868E71F3DBC2D6C2CD6FBB3E361AF2A8"
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5637,
											"end": 5658,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5692,
											"end": 5693,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5682,
											"end": 5694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5682,
											"end": 5694,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 5682,
											"end": 5694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5584,
											"end": 5593,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5682,
											"end": 5694,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5682,
											"end": 5694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5682,
											"end": 5694,
											"name": "PUSH",
											"source": 4,
											"value": "2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA0"
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "PUSH",
											"source": 4,
											"value": "2E174C10E159EA99B867CE3205125C24A42D128804E4070ED6FCC8CC98166AA1"
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5706,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5706,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "SWAP8",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7035,
											"end": 7054,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7054,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7111,
											"end": 7114,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 7096,
											"end": 7115,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7096,
											"end": 7115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1931,
											"end": 1956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1988,
											"end": 2011,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1972,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1965,
											"end": 2012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6879,
											"end": 6882,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6864,
											"end": 6883,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5706,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 6485,
											"end": 7122,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 782,
											"end": 824,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 824,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 782,
											"end": 824,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8402,
											"end": 8427,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8427,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8458,
											"end": 8460,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8443,
											"end": 8461,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8443,
											"end": 8461,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8436,
											"end": 8470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8436,
											"end": 8470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8436,
											"end": 8470,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8436,
											"end": 8470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8375,
											"end": 8393,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 782,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 8228,
											"end": 8476,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5825,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5832,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5816,
											"end": 5843,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5853,
											"end": 5880,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5853,
											"end": 5892,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5712,
											"end": 5899,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3469,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3456,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3503,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3515,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3523,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3523,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3523,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3487,
											"end": 3531,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5994,
											"end": 5996,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 5997,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6035,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6013,
											"end": 6031,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6013,
											"end": 6031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6006,
											"end": 6036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81858DD1A5D994819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6092,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5792,
											"end": 6133,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3479,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3583,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3586,
											"end": 3622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3603,
											"end": 3613,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3615,
											"end": 3621,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3586,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3586,
											"end": 3622,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3586,
											"end": 3622,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 3586,
											"end": 3622,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3669,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3679,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3679,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3679,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3697,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3697,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3697,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3751,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3707,
											"end": 3751,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3622,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3622,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3568,
											"end": 3622,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3622,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3751,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3633,
											"end": 3661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3622,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 3622,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3707,
											"end": 3762,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3479,
											"end": 3511,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3511,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3461,
											"end": 3512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3795,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3773,
											"end": 3795,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3773,
											"end": 3816,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "PUSH",
											"source": 4,
											"value": "34FCBAC0073D7C3D388E51312FAF357774904998EEB8FCA628B9E6F65EE1CBF7"
										},
										{
											"begin": 3839,
											"end": 3849,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3851,
											"end": 3857,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3832,
											"end": 3867,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3428,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3428,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3388,
											"end": 3874,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1820,
											"end": 1884,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1820,
											"end": 1884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1867,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1867,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1867,
											"end": 1877,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1867,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1867,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1820,
											"end": 1884,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2703,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2737,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2749,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2757,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2757,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2757,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2757,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2757,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2757,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2757,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2765,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2721,
											"end": 2776,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 2721,
											"end": 2776,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6342,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6322,
											"end": 6343,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6379,
											"end": 6381,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6352,
											"end": 6382,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD08195B9BDD59DA0819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6398,
											"end": 6416,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6398,
											"end": 6416,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6391,
											"end": 6439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6456,
											"end": 6474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6138,
											"end": 6480,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 2713,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2810,
											"end": 2825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2845,
											"end": 2855,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2828,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2828,
											"end": 2864,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2828,
											"end": 2864,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 2828,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2810,
											"end": 2864,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2810,
											"end": 2864,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2906,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2899,
											"end": 2916,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2899,
											"end": 2916,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 2899,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2927,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2975,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2987,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2995,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2995,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2995,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2995,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2995,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 2995,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 3006,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2959,
											"end": 3006,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 3006,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2916,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2874,
											"end": 2916,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3009,
											"end": 3024,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2956,
											"end": 3105,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2956,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2956,
											"end": 3105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3091,
											"end": 3094,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3071,
											"end": 3087,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3071,
											"end": 3087,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3068,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 3054,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3053,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3053,
											"end": 3094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3053,
											"end": 3094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3053,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 3053,
											"end": 3094,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3053,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 3053,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3039,
											"end": 3094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2956,
											"end": 3105,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 2956,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3131,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3151,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3151,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3151,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3164,
											"end": 3179,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3161,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3179,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3252,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3252,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3115,
											"end": 3143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3252,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3245,
											"end": 3252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3197,
											"end": 3252,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3263,
											"end": 3276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3276,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3285,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3286,
											"end": 3296,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3315,
											"end": 3326,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3312,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3298,
											"end": 3326,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3298,
											"end": 3326,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 3298,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3479,
											"end": 3511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3511,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3511,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3461,
											"end": 3512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3263,
											"end": 3327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "PUSH",
											"source": 4,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 3352,
											"end": 3362,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3365,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3374,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3375,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 3382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 3382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 3382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 3382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2602,
											"end": 3382,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 4898,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 4918,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5064,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5071,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5119,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5119,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5119,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5119,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5119,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5119,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5119,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5164,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5129,
											"end": 5164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "DUP13",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "DUP15",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "DUP14",
											"source": 4
										},
										{
											"begin": 5185,
											"end": 5211,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP11",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP11",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5176,
											"end": 5211,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5074,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5084,
											"end": 5119,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5065,
											"end": 5070,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4938,
											"end": 4959,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5240,
											"end": 5256,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5240,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5224,
											"end": 5266,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5224,
											"end": 5266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5292,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5309,
											"end": 5314,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5292,
											"end": 5318,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5292,
											"end": 5318,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5292,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5318,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5276,
											"end": 5318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5344,
											"end": 5370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5361,
											"end": 5366,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5368,
											"end": 5369,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5344,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5344,
											"end": 5370,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5344,
											"end": 5370,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5344,
											"end": 5370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5370,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5328,
											"end": 5370,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5413,
											"end": 5418,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5421,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5396,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 5396,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5422,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 4799,
											"end": 5429,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1750,
											"end": 1810,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1750,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1795,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1795,
											"end": 1803,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6022,
											"end": 6158,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 6022,
											"end": 6158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6077,
											"end": 6090,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6077,
											"end": 6090,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6144,
											"end": 6148,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2487,
											"end": 2538,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6090,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6110,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6100,
											"end": 6110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6090,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6090,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6135,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 6112,
											"end": 6135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6112,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3479,
											"end": 3511,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3511,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3479,
											"end": 3511,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3461,
											"end": 3512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3521,
											"end": 3555,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3434,
											"end": 3452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6077,
											"end": 6151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6158,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3880,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 3951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 3998,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4010,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4018,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4018,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4018,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4018,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4018,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3982,
											"end": 4026,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5994,
											"end": 5996,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5976,
											"end": 5997,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6035,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 6013,
											"end": 6031,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6013,
											"end": 6031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6013,
											"end": 6031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6006,
											"end": 6036,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81858DD1A5D994819195C1BDCDA5D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6052,
											"end": 6070,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6045,
											"end": 6092,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6109,
											"end": 6127,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5792,
											"end": 6133,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3974,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 4098,
											"end": 4108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4110,
											"end": 4116,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4081,
											"end": 4117,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4081,
											"end": 4117,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 4081,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4144,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4117,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4117,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4063,
											"end": 4117,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4117,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4117,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4063,
											"end": 4117,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4183,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4209,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4221,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4229,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4242,
											"end": 4257,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4239,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4239,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4257,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4273,
											"end": 4311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4273,
											"end": 4311,
											"name": "PUSH",
											"source": 4,
											"value": "E311A2C6DBFB0153EC3A8A5BDCA09070B3E5F60768FDC10A20453F38D186873"
										},
										{
											"begin": 4273,
											"end": 4311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4273,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 4273,
											"end": 4311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4220,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4210,
											"end": 4220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4222,
											"end": 4228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4310,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4310,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4273,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 4273,
											"end": 4311,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5983,
											"end": 5999,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5983,
											"end": 6009,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5905,
											"end": 6016,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4476,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4491,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4491,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4491,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4491,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4491,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4491,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4501,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4501,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4403,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4442,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4442,
											"end": 4501,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4442,
											"end": 4457,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4442,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 4442,
											"end": 4501,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4442,
											"end": 4501,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4442,
											"end": 4501,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4511,
											"end": 4526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4545,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4552,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4560,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4568,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4602,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4593,
											"end": 4610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4610,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4610,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4610,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4614,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4501,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4421,
											"end": 4501,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4529,
											"end": 4568,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4593,
											"end": 4614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4680,
											"end": 4688,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 4671,
											"end": 4676,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 4654,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4593,
											"end": 4614,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4529,
											"end": 4568,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4654,
											"end": 4667,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4654,
											"end": 4667,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4654,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4653,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 4653,
											"end": 4676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4653,
											"end": 4676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4653,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4653,
											"end": 4676,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4653,
											"end": 4676,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 4653,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4652,
											"end": 4688,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 4688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 4652,
											"end": 4688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4652,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 4652,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 4688,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4698,
											"end": 4719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4625,
											"end": 4688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4722,
											"end": 4732,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4722,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4698,
											"end": 4751,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4324,
											"end": 4789,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1891,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5290,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5291,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5329,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5300,
											"end": 5330,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2789,
											"end": 2823,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2823,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2823,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2069,
											"end": 2073,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2839,
											"end": 2857,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2839,
											"end": 2857,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2832,
											"end": 2875,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2918,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2918,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2884,
											"end": 2918,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1994,
											"end": 2004,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2048,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 2022,
											"end": 2048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2742,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2724,
											"end": 2742,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2022,
											"end": 2084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2145,
											"end": 2146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2126,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2134,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2142,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2146,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2095,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2095,
											"end": 2219,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2201,
											"end": 2207,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2172,
											"end": 2188,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2172,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2161,
											"end": 2208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2208,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2161,
											"end": 2208,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2208,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2161,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2208,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2095,
											"end": 2219,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2095,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2245,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2265,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2257,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2229,
											"end": 2284,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2310,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2330,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2341,
											"end": 2356,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2338,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2294,
											"end": 2338,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2338,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2294,
											"end": 2356,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2412,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2412,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2430,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2366,
											"end": 2430,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2517,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2508,
											"end": 2525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2525,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2525,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2525,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2525,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2525,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2536,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2508,
											"end": 2536,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2508,
											"end": 2536,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 2490,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2456,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2468,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2476,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2487,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2440,
											"end": 2487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2536,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2536,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2440,
											"end": 2536,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2552,
											"end": 2589,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2552,
											"end": 2589,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 2552,
											"end": 2589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2552,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2552,
											"end": 2589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2467,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2581,
											"end": 2588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2552,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2552,
											"end": 2589,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4881,
											"end": 4883,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4863,
											"end": 4884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4920,
											"end": 4922,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 4918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4893,
											"end": 4923,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4959,
											"end": 4993,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4939,
											"end": 4957,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4932,
											"end": 4994,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5003,
											"end": 5039,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5056,
											"end": 5075,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5056,
											"end": 5075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4679,
											"end": 5081,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4535,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4571,
											"end": 4573,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4551,
											"end": 4569,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4544,
											"end": 4574,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4633,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4650,
											"end": 4668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4330,
											"end": 4674,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2505,
											"end": 2537,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2487,
											"end": 2538,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2475,
											"end": 2477,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2478,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5288,
											"end": 5290,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5291,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5327,
											"end": 5329,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5307,
											"end": 5325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5300,
											"end": 5330,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5346,
											"end": 5364,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5339,
											"end": 5385,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5086,
											"end": 5426,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "150"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 5,
											"value": "265"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 5,
											"value": "270"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "271"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 631,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 599,
											"end": 631,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 383,
											"end": 637,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 642,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 715,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 762,
											"end": 764,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 750,
											"end": 759,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 741,
											"end": 748,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 737,
											"end": 760,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 733,
											"end": 765,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 778,
											"end": 779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 768,
											"end": 780,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 730,
											"end": 782,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 730,
											"end": 782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 819,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 820,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 856,
											"end": 869,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 849,
											"end": 870,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 847,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 839,
											"end": 871,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 829,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 829,
											"end": 889,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 885,
											"end": 886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 875,
											"end": 887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 983,
											"end": 989,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1038,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1024,
											"end": 1033,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1015,
											"end": 1022,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1011,
											"end": 1034,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1007,
											"end": 1039,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1052,
											"end": 1053,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1049,
											"end": 1050,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1042,
											"end": 1054,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 1004,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1075,
											"end": 1098,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 924,
											"end": 1104,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1232,
											"end": 1234,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1220,
											"end": 1229,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1211,
											"end": 1218,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1203,
											"end": 1235,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1246,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1250,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1200,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1271,
											"end": 1287,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1271,
											"end": 1287,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1109,
											"end": 1293,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1372,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1374,
											"end": 1380,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1406,
											"end": 1413,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1402,
											"end": 1425,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1398,
											"end": 1430,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1444,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1441,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 1395,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1466,
											"end": 1489,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1538,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1540,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1540,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1298,
											"end": 1546,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1644,
											"end": 1650,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1697,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1676,
											"end": 1683,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1672,
											"end": 1695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 1665,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1759,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1806,
											"end": 1808,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1791,
											"end": 1809,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1809,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1810,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1810,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1860,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1861,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1551,
											"end": 1867,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2023,
											"end": 2336,
											"name": "tag",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 2023,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2104,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2105,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2088,
											"end": 2091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2081,
											"end": 2106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2155,
											"end": 2159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2153,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2144,
											"end": 2160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2138,
											"end": 2161,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2135,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2129,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2115,
											"end": 2162,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2215,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2204,
											"end": 2209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2200,
											"end": 2216,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2194,
											"end": 2217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2191,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2182,
											"end": 2185,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2178,
											"end": 2192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2171,
											"end": 2218,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2260,
											"end": 2265,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2243,
											"end": 2247,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2238,
											"end": 2241,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2234,
											"end": 2248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2274,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2323,
											"end": 2327,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2306,
											"end": 2329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2303,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2290,
											"end": 2304,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 2330,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 2330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 2330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2336,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2929,
											"end": 3282,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2929,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3157,
											"end": 3189,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3189,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3157,
											"end": 3189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3190,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3139,
											"end": 3190,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3223,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3233,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3264,
											"end": 3266,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3267,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3276,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3127,
											"end": 3129,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3112,
											"end": 3130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2929,
											"end": 3282,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5431,
											"end": 5787,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5431,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5633,
											"end": 5635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5645,
											"end": 5675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5711,
											"end": 5745,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5684,
											"end": 5746,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5787,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7625,
											"end": 7628,
											"name": "PUSH",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 7610,
											"end": 7629,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7610,
											"end": 7629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 7614,
											"end": 7623,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7661,
											"end": 7667,
											"name": "DUP12",
											"source": 5
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7734,
											"end": 7737,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 7723,
											"end": 7732,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7719,
											"end": 7738,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 7717,
											"name": "DUP11",
											"source": 5
										},
										{
											"begin": 7688,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 7688,
											"end": 7739,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7688,
											"end": 7739,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 7688,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7748,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7794,
											"end": 7797,
											"name": "PUSH",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7783,
											"end": 7792,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7779,
											"end": 7798,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7771,
											"end": 7777,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 7748,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 7748,
											"end": 7799,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7748,
											"end": 7799,
											"name": "tag",
											"source": 5,
											"value": "308"
										},
										{
											"begin": 7748,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7854,
											"end": 7857,
											"name": "PUSH",
											"source": 5,
											"value": "1E0"
										},
										{
											"begin": 7843,
											"end": 7852,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7839,
											"end": 7858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7831,
											"end": 7837,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7808,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "285"
										},
										{
											"begin": 7808,
											"end": 7859,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7808,
											"end": 7859,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 7808,
											"end": 7859,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7896,
											"end": 7902,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7890,
											"end": 7893,
											"name": "PUSH",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 7879,
											"end": 7888,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7875,
											"end": 7894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7868,
											"end": 7903,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7940,
											"end": 7946,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7934,
											"end": 7937,
											"name": "PUSH",
											"source": 5,
											"value": "2A0"
										},
										{
											"begin": 7923,
											"end": 7932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 7938,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7947,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7984,
											"end": 7990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7978,
											"end": 7981,
											"name": "PUSH",
											"source": 5,
											"value": "2C0"
										},
										{
											"begin": 7967,
											"end": 7976,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7963,
											"end": 7982,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 7991,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8022,
											"end": 8025,
											"name": "PUSH",
											"source": 5,
											"value": "2E0"
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8007,
											"end": 8026,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8000,
											"end": 8035,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "SWAP10",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "SWAP9",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7127,
											"end": 8041,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8949,
											"end": 9077,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 8949,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 8992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9020,
											"end": 9021,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9016,
											"end": 9022,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9013,
											"end": 9014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9010,
											"end": 9023,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9007,
											"end": 9046,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9007,
											"end": 9046,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 9007,
											"end": 9046,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 9026,
											"end": 9044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9026,
											"end": 9044,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9026,
											"end": 9044,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 9026,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9062,
											"end": 9071,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9062,
											"end": 9071,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8949,
											"end": 9077,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9082,
											"end": 9299,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 9082,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9122,
											"end": 9123,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9148,
											"end": 9149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9138,
											"end": 9270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 9138,
											"end": 9270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9202,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 9187,
											"end": 9190,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9183,
											"end": 9203,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 9180,
											"end": 9181,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9173,
											"end": 9204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9227,
											"end": 9231,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 9224,
											"end": 9225,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9217,
											"end": 9232,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9255,
											"end": 9259,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9245,
											"end": 9260,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9138,
											"end": 9270,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 9138,
											"end": 9270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9284,
											"end": 9293,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 9284,
											"end": 9293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9082,
											"end": 9299,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9304,
											"end": 9472,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 9304,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9344,
											"end": 9351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9410,
											"end": 9411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9406,
											"end": 9407,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9402,
											"end": 9408,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9398,
											"end": 9412,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 9395,
											"end": 9396,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9392,
											"end": 9413,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9380,
											"end": 9389,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9373,
											"end": 9390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9414,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9437,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9366,
											"end": 9437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 9366,
											"end": 9437,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 9417,
											"end": 9435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9457,
											"end": 9466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9304,
											"end": 9472,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9477,
											"end": 9602,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 9477,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9517,
											"end": 9521,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9545,
											"end": 9546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9542,
											"end": 9543,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9539,
											"end": 9547,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9536,
											"end": 9570,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9536,
											"end": 9570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 9536,
											"end": 9570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 9550,
											"end": 9568,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9587,
											"end": 9596,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 9602,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9607,
											"end": 9734,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 9607,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9668,
											"end": 9678,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 9663,
											"end": 9666,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 9659,
											"end": 9679,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 9656,
											"end": 9657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9649,
											"end": 9680,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9699,
											"end": 9703,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 9696,
											"end": 9697,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9689,
											"end": 9704,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9723,
											"end": 9727,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9720,
											"end": 9721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9728,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptedToken()": "451c3d80",
							"calculateRewards(address,uint256)": "beb8314c",
							"changeEarlyWithdrawFee(uint256)": "aff3b697",
							"changeLevelValues(uint256,uint256,uint256)": "32e96203",
							"claim(uint256)": "379607f5",
							"compound(uint256)": "aa5f7e26",
							"deposit(uint256,uint256)": "e2bbb158",
							"getLevelsInfo()": "e788cee5",
							"getUserInfo(address)": "6386c1c7",
							"levelInfo(uint256)": "edf501ad",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"userLevelDeposit(address,uint256)": "259ee752",
							"withdraw(uint256,uint256)": "441a3e70",
							"withdrawTokens()": "8d8f2adb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Compound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"class\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"calculateRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newFee\",\"type\":\"uint256\"}],\"name\":\"changeEarlyWithdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_lockTime\",\"type\":\"uint256\"}],\"name\":\"changeLevelValues\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLevelsInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.Level\",\"name\":\"level3\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level0\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level1\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level2\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"internalType\":\"struct AcesStaking.User\",\"name\":\"level3\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"level0Rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level1Rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level2Rewards\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level3Rewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userLevelDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"started\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastClaim\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"AcesStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"staking.sol\":{\"keccak256\":\"0x6833d0df62118922125807b85cc9497f5eca0a0b576f976951d3a42024ce1d23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://455b995c4d3cdecd73cabc73f094246c48db67652b7062ef6c665718d2576a0e\",\"dweb:/ipfs/Qmbpu4eNBdya8fUcaTeKrLEm4rYfGJxUeVCc594bodniF8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "staking.sol:AcesStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 122,
								"contract": "staking.sol:AcesStaking",
								"label": "_paused",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 308,
								"contract": "staking.sol:AcesStaking",
								"label": "acceptedToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)274"
							},
							{
								"astId": 311,
								"contract": "staking.sol:AcesStaking",
								"label": "earlyWithdrawFee",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 334,
								"contract": "staking.sol:AcesStaking",
								"label": "userLevelDeposit",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(User)322_storage))"
							},
							{
								"astId": 339,
								"contract": "staking.sol:AcesStaking",
								"label": "levelInfo",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_struct(Level)327_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)274": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_struct(User)322_storage))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => struct AcesStaking.User))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_struct(User)322_storage)"
							},
							"t_mapping(t_uint256,t_struct(Level)327_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.Level)",
								"numberOfBytes": "32",
								"value": "t_struct(Level)327_storage"
							},
							"t_mapping(t_uint256,t_struct(User)322_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AcesStaking.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)322_storage"
							},
							"t_struct(Level)327_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.Level",
								"members": [
									{
										"astId": 324,
										"contract": "staking.sol:AcesStaking",
										"label": "APY",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 326,
										"contract": "staking.sol:AcesStaking",
										"label": "lockPeriod",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(User)322_storage": {
								"encoding": "inplace",
								"label": "struct AcesStaking.User",
								"members": [
									{
										"astId": 313,
										"contract": "staking.sol:AcesStaking",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 315,
										"contract": "staking.sol:AcesStaking",
										"label": "claimed",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 317,
										"contract": "staking.sol:AcesStaking",
										"label": "started",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 319,
										"contract": "staking.sol:AcesStaking",
										"label": "lastClaim",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 321,
										"contract": "staking.sol:AcesStaking",
										"label": "unlockTime",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 297,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								296
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Pausable": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 297,
							"src": "115:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "617:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								296
							],
							"name": "Pausable",
							"nameLocation": "605:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 115,
									"name": "Paused",
									"nameLocation": "715:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:1"
									},
									"src": "709:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 120,
									"name": "Unpaused",
									"nameLocation": "826:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:1"
									},
									"src": "820:32:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "858:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 121,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "971:32:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "981:15:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:1"
									},
									"scope": 196,
									"src": "957:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1151:31:1",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "1161:14:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:1"
									},
									"scope": 196,
									"src": "1098:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1393:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 144,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1412:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:1"
											},
											{
												"id": 150,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 152,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:1"
									},
									"src": "1368:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1659:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 163,
									"name": "whenPaused",
									"nameLocation": "1646:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:1"
									},
									"src": "1637:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1912:66:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1946:25:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1898:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 196,
									"src": "1863:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2158:69:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2207:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "2193:27:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "2147:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:1"
									},
									"scope": 196,
									"src": "2110:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "587:1642:1",
							"usedErrors": []
						}
					],
					"src": "90:2140:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 208,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 217,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 274,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 274,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 274,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 274,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 274,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 274,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 275,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 281,
												"id": 284,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 296,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 290,
												"id": 293,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 296,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"AcesStaking": [
							1005
						],
						"Context": [
							296
						],
						"IERC20": [
							274
						],
						"Ownable": [
							104
						],
						"Pausable": [
							196
						]
					},
					"id": 1006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1006,
							"sourceUnit": 275,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1006,
							"sourceUnit": 105,
							"src": "114:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1006,
							"sourceUnit": 197,
							"src": "167:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 302,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "248:7:4"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "248:7:4"
								},
								{
									"baseName": {
										"id": 304,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "257:8:4"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "257:8:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1005,
							"linearizedBaseContracts": [
								1005,
								196,
								104,
								296
							],
							"name": "AcesStaking",
							"nameLocation": "233:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "451c3d80",
									"id": 308,
									"mutability": "mutable",
									"name": "acceptedToken",
									"nameLocation": "331:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "317:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$274",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 307,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 306,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 274,
											"src": "317:6:4"
										},
										"referencedDeclaration": 274,
										"src": "317:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$274",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 311,
									"mutability": "mutable",
									"name": "earlyWithdrawFee",
									"nameLocation": "359:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "351:29:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 309,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "351:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 310,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "378:2:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "AcesStaking.User",
									"id": 322,
									"members": [
										{
											"constant": false,
											"id": 313,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "453:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 322,
											"src": "445:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 312,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 315,
											"mutability": "mutable",
											"name": "claimed",
											"nameLocation": "478:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 322,
											"src": "470:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 314,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "470:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 317,
											"mutability": "mutable",
											"name": "started",
											"nameLocation": "503:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 322,
											"src": "495:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 316,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "495:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 319,
											"mutability": "mutable",
											"name": "lastClaim",
											"nameLocation": "528:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 322,
											"src": "520:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 318,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "520:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 321,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "555:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 322,
											"src": "547:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 320,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "547:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "430:4:4",
									"nodeType": "StructDefinition",
									"scope": 1005,
									"src": "423:149:4",
									"visibility": "public"
								},
								{
									"canonicalName": "AcesStaking.Level",
									"id": 327,
									"members": [
										{
											"constant": false,
											"id": 324,
											"mutability": "mutable",
											"name": "APY",
											"nameLocation": "611:3:4",
											"nodeType": "VariableDeclaration",
											"scope": 327,
											"src": "603:11:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "603:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 326,
											"mutability": "mutable",
											"name": "lockPeriod",
											"nameLocation": "632:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 327,
											"src": "624:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 325,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "624:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Level",
									"nameLocation": "587:5:4",
									"nodeType": "StructDefinition",
									"scope": 1005,
									"src": "580:69:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "259ee752",
									"id": 334,
									"mutability": "mutable",
									"name": "userLevelDeposit",
									"nameLocation": "760:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "708:68:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
										"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
									},
									"typeName": {
										"id": 333,
										"keyType": {
											"id": 328,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "716:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "708:44:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
											"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User))"
										},
										"valueType": {
											"id": 332,
											"keyType": {
												"id": 329,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "735:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "727:24:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
												"typeString": "mapping(uint256 => struct AcesStaking.User)"
											},
											"valueType": {
												"id": 331,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 330,
													"name": "User",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 322,
													"src": "746:4:4"
												},
												"referencedDeclaration": 322,
												"src": "746:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$322_storage_ptr",
													"typeString": "struct AcesStaking.User"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "edf501ad",
									"id": 339,
									"mutability": "mutable",
									"name": "levelInfo",
									"nameLocation": "815:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1005,
									"src": "782:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
										"typeString": "mapping(uint256 => struct AcesStaking.Level)"
									},
									"typeName": {
										"id": 338,
										"keyType": {
											"id": 335,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "790:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "782:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
											"typeString": "mapping(uint256 => struct AcesStaking.Level)"
										},
										"valueType": {
											"id": 337,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 336,
												"name": "Level",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "801:5:4"
											},
											"referencedDeclaration": 327,
											"src": "801:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Level_$327_storage_ptr",
												"typeString": "struct AcesStaking.Level"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 347,
									"name": "Deposit",
									"nameLocation": "852:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "869:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "861:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "883:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "875:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "898:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "890:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:45:4"
									},
									"src": "846:60:4"
								},
								{
									"anonymous": false,
									"id": 355,
									"name": "Withdraw",
									"nameLocation": "917:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "935:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "927:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "927:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "949:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "941:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "941:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "964:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "956:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "956:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:45:4"
									},
									"src": "911:61:4"
								},
								{
									"anonymous": false,
									"id": 363,
									"name": "Claim",
									"nameLocation": "983:5:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "998:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "990:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "1012:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1004:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1027:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1019:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:45:4"
									},
									"src": "977:58:4"
								},
								{
									"anonymous": false,
									"id": 371,
									"name": "Compound",
									"nameLocation": "1046:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1064:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1056:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "1078:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1070:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1070:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1093:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1085:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1055:45:4"
									},
									"src": "1040:61:4"
								},
								{
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "1172:527:4",
										"statements": [
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 376,
														"name": "acceptedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1182:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 378,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "1205:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 377,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1198:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$274_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1198:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"src": "1182:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$274",
														"typeString": "contract IERC20"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "1182:30:4"
											},
											{
												"expression": {
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 382,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1264:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 384,
															"indexExpression": {
																"hexValue": "30",
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1274:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1264:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "APY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 324,
														"src": "1264:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3336353030",
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1283:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_36500_by_1",
															"typeString": "int_const 36500"
														},
														"value": "36500"
													},
													"src": "1264:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "1264:24:4"
											},
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 389,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1298:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 391,
															"indexExpression": {
																"hexValue": "30",
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1308:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1298:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "1298:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3330",
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1324:7:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2592000_by_1",
															"typeString": "int_const 2592000"
														},
														"value": "30"
													},
													"src": "1298:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1298:33:4"
											},
											{
												"expression": {
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 396,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1384:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 398,
															"indexExpression": {
																"hexValue": "31",
																"id": 397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1394:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1384:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "APY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 324,
														"src": "1384:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3435363235",
														"id": 400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1403:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_45625_by_1",
															"typeString": "int_const 45625"
														},
														"value": "45625"
													},
													"src": "1384:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 402,
												"nodeType": "ExpressionStatement",
												"src": "1384:24:4"
											},
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 403,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1418:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 405,
															"indexExpression": {
																"hexValue": "31",
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1428:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1418:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "1418:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3930",
														"id": 407,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1444:7:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7776000_by_1",
															"typeString": "int_const 7776000"
														},
														"value": "90"
													},
													"src": "1418:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1418:33:4"
											},
											{
												"expression": {
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 410,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1504:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 412,
															"indexExpression": {
																"hexValue": "32",
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1514:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1504:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "APY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 324,
														"src": "1504:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3534373530",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1523:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_54750_by_1",
															"typeString": "int_const 54750"
														},
														"value": "54750"
													},
													"src": "1504:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "1504:24:4"
											},
											{
												"expression": {
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 417,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1538:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 419,
															"indexExpression": {
																"hexValue": "32",
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1548:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1538:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 420,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "1538:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313830",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1564:8:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15552000_by_1",
															"typeString": "int_const 15552000"
														},
														"value": "180"
													},
													"src": "1538:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1538:34:4"
											},
											{
												"expression": {
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 424,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1624:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 426,
															"indexExpression": {
																"hexValue": "33",
																"id": 425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1634:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1624:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "APY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 324,
														"src": "1624:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3733303030",
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1643:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_73000_by_1",
															"typeString": "int_const 73000"
														},
														"value": "73000"
													},
													"src": "1624:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "1624:24:4"
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 431,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "1658:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 433,
															"indexExpression": {
																"hexValue": "33",
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1668:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1658:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "1658:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "333635",
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1684:8:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "1658:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "1658:34:4"
											}
										]
									},
									"id": 439,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1163:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1155:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1155:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1154:17:4"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1172:0:4"
									},
									"scope": 1005,
									"src": "1143:556:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 447,
										"nodeType": "Block",
										"src": "1785:25:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 444,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "1795:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1795:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "1795:8:4"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 448,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 442,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 441,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1775:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1775:9:4"
										}
									],
									"name": "pause",
									"nameLocation": "1759:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1765:2:4"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1785:0:4"
									},
									"scope": 1005,
									"src": "1750:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1857:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 453,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1867:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1867:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1867:10:4"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 451,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 450,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1847:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1847:9:4"
										}
									],
									"name": "unpause",
									"nameLocation": "1829:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1837:2:4"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:0:4"
									},
									"scope": 1005,
									"src": "1820:64:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "1963:633:4",
										"statements": [
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "1981:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "1973:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 466,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1973:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"expression": {
														"id": 468,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1994:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1994:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1973:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2049:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 477,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2069:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AcesStaking_$1005",
																		"typeString": "contract AcesStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AcesStaking_$1005",
																		"typeString": "contract AcesStaking"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2061:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2061:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2061:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "2076:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 471,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "2022:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 273,
														"src": "2022:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "2022:62:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 482,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2098:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 484,
																"indexExpression": {
																	"id": 483,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2115:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2098:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 486,
															"indexExpression": {
																"id": 485,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2127:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2098:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 313,
														"src": "2098:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2145:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2098:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 498,
												"nodeType": "IfStatement",
												"src": "2095:124:4",
												"trueBody": {
													"id": 497,
													"nodeType": "Block",
													"src": "2147:72:4",
													"statements": [
														{
															"expression": {
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 490,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 459,
																	"src": "2161:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 492,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "2189:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 493,
																			"name": "_level",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 461,
																			"src": "2201:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 491,
																		"name": "calculateRewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "2172:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2172:36:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2161:47:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "2161:47:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 499,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2229:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 502,
																"indexExpression": {
																	"id": 500,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2246:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2229:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 503,
															"indexExpression": {
																"id": 501,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2258:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2229:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 313,
														"src": "2229:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 505,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2277:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2229:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "2229:55:4"
											},
											{
												"expression": {
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 508,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2294:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 511,
																"indexExpression": {
																	"id": 509,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2311:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2294:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 512,
															"indexExpression": {
																"id": 510,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2323:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2294:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "started",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "2294:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 514,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2341:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2341:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2294:62:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "2294:62:4"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 518,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2366:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 521,
																"indexExpression": {
																	"id": 519,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2383:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2366:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 522,
															"indexExpression": {
																"id": 520,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2395:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2366:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "2366:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 524,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2415:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2415:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2366:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "2366:64:4"
											},
											{
												"expression": {
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 528,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2440:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 531,
																"indexExpression": {
																	"id": 529,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "2457:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2440:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 532,
															"indexExpression": {
																"id": 530,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 461,
																"src": "2469:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2440:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 533,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "2440:47:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 534,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2490:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2490:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 536,
																	"name": "levelInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "2508:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																		"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																	}
																},
																"id": 538,
																"indexExpression": {
																	"id": 537,
																	"name": "_level",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 461,
																	"src": "2518:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2508:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Level_$327_storage",
																	"typeString": "struct AcesStaking.Level storage ref"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lockPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 326,
															"src": "2508:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2490:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2440:96:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2440:96:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 544,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "2561:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 545,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "2573:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 546,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "2581:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 543,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2552:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2552:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "EmitStatement",
												"src": "2547:42:4"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 463,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1949:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1949:13:4"
										}
									],
									"name": "deposit",
									"nameLocation": "1900:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "1909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "1934:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "1926:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1908:33:4"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1963:0:4"
									},
									"scope": 1005,
									"src": "1891:705:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 644,
										"nodeType": "Block",
										"src": "2662:720:4",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "2680:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "2672:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 557,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2672:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 561,
												"initialValue": {
													"expression": {
														"id": 559,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2693:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2693:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2672:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 563,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 334,
																			"src": "2721:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 565,
																		"indexExpression": {
																			"id": 564,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "2738:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2721:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 567,
																	"indexExpression": {
																		"id": 566,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 554,
																		"src": "2750:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2721:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$322_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 313,
																"src": "2721:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 569,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 552,
																"src": "2769:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2721:55:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206465706f736974",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2778:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															},
															"value": "Not enough deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f590fe492392193b72dae80349f2495c2dde071365bbcc9712199fdb44b2e33e",
																"typeString": "literal_string \"Not enough deposit\""
															}
														],
														"id": 562,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2713:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2713:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "2713:86:4"
											},
											{
												"assignments": [
													575
												],
												"declarations": [
													{
														"constant": false,
														"id": 575,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2818:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "2810:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 574,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2810:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 580,
												"initialValue": {
													"arguments": [
														{
															"id": 577,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "2845:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "2857:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 576,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2828:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2810:54:4"
											},
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "withdrawAmount",
														"nameLocation": "2882:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "2874:22:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2874:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 583,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "2899:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 584,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "2909:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2874:42:4"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "withdrawFee",
														"nameLocation": "2935:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 644,
														"src": "2927:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2927:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"nodeType": "VariableDeclarationStatement",
												"src": "2927:19:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 590,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "2959:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 592,
																"indexExpression": {
																	"id": 591,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "2976:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2959:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 594,
															"indexExpression": {
																"id": 593,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "2988:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2959:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 321,
														"src": "2959:47:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"id": 596,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3009:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 597,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3009:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2959:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 609,
												"nodeType": "IfStatement",
												"src": "2956:149:4",
												"trueBody": {
													"id": 608,
													"nodeType": "Block",
													"src": "3025:80:4",
													"statements": [
														{
															"expression": {
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 599,
																	"name": "withdrawFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "3039:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 600,
																					"name": "withdrawAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "3054:14:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 601,
																					"name": "earlyWithdrawFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 311,
																					"src": "3071:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3054:33:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 603,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3053:35:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3091:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "3053:41:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3039:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 607,
															"nodeType": "ExpressionStatement",
															"src": "3039:55:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 610,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "3115:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 613,
																"indexExpression": {
																	"id": 611,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "3132:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3115:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 614,
															"indexExpression": {
																"id": 612,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "3144:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3115:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "3115:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 616,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3164:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3164:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3115:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "3115:64:4"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 620,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "3197:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 623,
																"indexExpression": {
																	"id": 621,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "3214:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3197:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 624,
															"indexExpression": {
																"id": 622,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "3226:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3197:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 313,
														"src": "3197:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 626,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "3245:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3197:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "3197:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "3286:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 633,
																"name": "withdrawAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "3298:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 634,
																"name": "withdrawFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "3315:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3298:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 629,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3263:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "3263:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3263:64:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "3263:64:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 639,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "3352:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3364:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 641,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 552,
															"src": "3367:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 638,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "3343:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3343:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "EmitStatement",
												"src": "3338:37:4"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2611:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2629:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2621:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "2646:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2638:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2620:33:4"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2662:0:4"
									},
									"scope": 1005,
									"src": "2602:780:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "3428:446:4",
										"statements": [
											{
												"assignments": [
													651
												],
												"declarations": [
													{
														"constant": false,
														"id": 651,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "3446:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "3438:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 650,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3438:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"initialValue": {
													"expression": {
														"id": 652,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3459:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3459:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3438:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 656,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 334,
																			"src": "3487:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 658,
																		"indexExpression": {
																			"id": 657,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "3504:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3487:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 660,
																	"indexExpression": {
																		"id": 659,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 647,
																		"src": "3516:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3487:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$322_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 661,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 313,
																"src": "3487:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3534:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3487:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3537:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3479:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3479:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 666,
												"nodeType": "ExpressionStatement",
												"src": "3479:78:4"
											},
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "3576:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "3568:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 667,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3568:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"arguments": [
														{
															"id": 670,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3603:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 671,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "3615:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 669,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "3586:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3586:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3568:54:4"
											},
											{
												"expression": {
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 674,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "3633:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 677,
																"indexExpression": {
																	"id": 675,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "3650:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3633:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 678,
															"indexExpression": {
																"id": 676,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "3662:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3633:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "3633:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 680,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3682:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3682:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3633:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 683,
												"nodeType": "ExpressionStatement",
												"src": "3633:64:4"
											},
											{
												"expression": {
													"id": 691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 684,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "3707:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 687,
																"indexExpression": {
																	"id": 685,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 651,
																	"src": "3724:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3707:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 688,
															"indexExpression": {
																"id": 686,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "3736:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3707:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 315,
														"src": "3707:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 690,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "3755:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3707:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 692,
												"nodeType": "ExpressionStatement",
												"src": "3707:55:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3796:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "3808:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 693,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3773:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "3773:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3773:43:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "3773:43:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 701,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "3839:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "3851:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 703,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "3859:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 700,
														"name": "Claim",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "3832:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3832:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "EmitStatement",
												"src": "3827:40:4"
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "3397:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "3412:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "3404:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3404:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3403:16:4"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3428:0:4"
									},
									"scope": 1005,
									"src": "3388:486:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "3923:395:4",
										"statements": [
											{
												"assignments": [
													713
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "3941:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "3933:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 712,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3933:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 716,
												"initialValue": {
													"expression": {
														"id": 714,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3954:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3954:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3933:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 718,
																			"name": "userLevelDeposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 334,
																			"src": "3982:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																				"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																			}
																		},
																		"id": 720,
																		"indexExpression": {
																			"id": 719,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 713,
																			"src": "3999:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3982:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																			"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																		}
																	},
																	"id": 722,
																	"indexExpression": {
																		"id": 721,
																		"name": "_level",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 709,
																		"src": "4011:6:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3982:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$322_storage",
																		"typeString": "struct AcesStaking.User storage ref"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 313,
																"src": "3982:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4029:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3982:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20616374697665206465706f736974",
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4032:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															},
															"value": "No active deposit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c5dbdd9ca3f47c7d0552c03b41dea12786f12c80c484f39488edd8c581f1f269",
																"typeString": "literal_string \"No active deposit\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3974:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3974:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "3974:78:4"
											},
											{
												"assignments": [
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "4071:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "4063:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 729,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4063:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 732,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "4098:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "4110:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 731,
														"name": "calculateRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "4081:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4081:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4063:54:4"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 736,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "4128:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 739,
																"indexExpression": {
																	"id": 737,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "4145:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4128:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 740,
															"indexExpression": {
																"id": 738,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "4157:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4128:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 313,
														"src": "4128:44:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 742,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "4176:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4128:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "4128:55:4"
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 745,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "4193:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 748,
																"indexExpression": {
																	"id": 746,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 713,
																	"src": "4210:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4193:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 749,
															"indexExpression": {
																"id": 747,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "4222:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4193:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "4193:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 751,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4242:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4242:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4193:64:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "4193:64:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 756,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 713,
															"src": "4283:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 757,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "4295:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 758,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "4303:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 755,
														"name": "Compound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "4273:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "EmitStatement",
												"src": "4268:43:4"
											}
										]
									},
									"functionSelector": "aa5f7e26",
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "compound",
									"nameLocation": "3889:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "3907:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3899:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3899:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3898:16:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3923:0:4"
									},
									"scope": 1005,
									"src": "3880:438:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "4411:378:4",
										"statements": [
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "4429:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "4421:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4421:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 782,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 773,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4442:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4442:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 775,
																	"name": "userLevelDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 334,
																	"src": "4460:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																		"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																	}
																},
																"id": 777,
																"indexExpression": {
																	"id": 776,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "4477:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4460:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
																}
															},
															"id": 779,
															"indexExpression": {
																"id": 778,
																"name": "_level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "4484:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4460:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$322_storage",
																"typeString": "struct AcesStaking.User storage ref"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastClaim",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 319,
														"src": "4460:41:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4442:59:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4421:80:4"
											},
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "4519:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "4511:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 783,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 791,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"baseExpression": {
																"id": 785,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "4529:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 787,
															"indexExpression": {
																"id": 786,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "4546:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4529:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 789,
														"indexExpression": {
															"id": 788,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "4553:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4529:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$322_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 313,
													"src": "4529:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4511:57:4"
											},
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "APY",
														"nameLocation": "4587:3:4",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "4579:11:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4579:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 798,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 794,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "4593:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 796,
														"indexExpression": {
															"id": 795,
															"name": "_level",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "4603:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4593:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$327_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "APY",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 324,
													"src": "4593:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4579:35:4"
											},
											{
												"assignments": [
													800
												],
												"declarations": [
													{
														"constant": false,
														"id": 800,
														"mutability": "mutable",
														"name": "rewardsPerSecond",
														"nameLocation": "4633:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "4625:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 799,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4625:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 810,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "4654:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 802,
																				"name": "APY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "4664:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4654:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 804,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4653:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4671:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "4653:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 807,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4652:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4680:8:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "4652:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4625:63:4"
											},
											{
												"assignments": [
													812
												],
												"declarations": [
													{
														"constant": false,
														"id": 812,
														"mutability": "mutable",
														"name": "rewardsEarned",
														"nameLocation": "4706:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 819,
														"src": "4698:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 811,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4698:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "timeStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "4722:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 814,
														"name": "rewardsPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "4735:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4722:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4698:53:4"
											},
											{
												"expression": {
													"id": 817,
													"name": "rewardsEarned",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 812,
													"src": "4769:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 770,
												"id": 818,
												"nodeType": "Return",
												"src": "4762:20:4"
											}
										]
									},
									"functionSelector": "beb8314c",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRewards",
									"nameLocation": "4333:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4359:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "4351:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4351:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "_level",
												"nameLocation": "4374:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "4366:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4350:31:4"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "4403:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4403:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4402:9:4"
									},
									"scope": 1005,
									"src": "4324:465:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "5029:400:4",
										"statements": [
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "level0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "5039:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$322_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 846,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "5048:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 848,
															"indexExpression": {
																"id": 847,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5065:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5048:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 850,
														"indexExpression": {
															"hexValue": "30",
															"id": 849,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5072:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5048:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$322_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "5039:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$322_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "5039:35:4"
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 853,
														"name": "level1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "5084:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$322_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 854,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "5093:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 856,
															"indexExpression": {
																"id": 855,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5110:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5093:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 858,
														"indexExpression": {
															"hexValue": "31",
															"id": 857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5117:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5093:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$322_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "5084:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$322_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "5084:35:4"
											},
											{
												"expression": {
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 861,
														"name": "level2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5129:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$322_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 862,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "5138:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 864,
															"indexExpression": {
																"id": 863,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5155:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5138:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 866,
														"indexExpression": {
															"hexValue": "32",
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5162:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5138:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$322_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "5129:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$322_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "5129:35:4"
											},
											{
												"expression": {
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 869,
														"name": "level3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "5176:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$322_memory_ptr",
															"typeString": "struct AcesStaking.User memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 870,
																"name": "userLevelDeposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "5185:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$_$",
																	"typeString": "mapping(address => mapping(uint256 => struct AcesStaking.User storage ref))"
																}
															},
															"id": 872,
															"indexExpression": {
																"id": 871,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5202:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5185:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_User_$322_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.User storage ref)"
															}
														},
														"id": 874,
														"indexExpression": {
															"hexValue": "33",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5209:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5185:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$322_storage",
															"typeString": "struct AcesStaking.User storage ref"
														}
													},
													"src": "5176:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$322_memory_ptr",
														"typeString": "struct AcesStaking.User memory"
													}
												},
												"id": 876,
												"nodeType": "ExpressionStatement",
												"src": "5176:35:4"
											},
											{
												"expression": {
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 877,
														"name": "level0Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5224:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 879,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5257:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "30",
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5264:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 878,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "5240:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5240:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5224:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 883,
												"nodeType": "ExpressionStatement",
												"src": "5224:42:4"
											},
											{
												"expression": {
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 884,
														"name": "level1Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "5276:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 886,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5309:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "31",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5316:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"id": 885,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "5292:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5292:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5276:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "5276:42:4"
											},
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 891,
														"name": "level2Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 841,
														"src": "5328:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 893,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5361:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "32",
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5368:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																}
															],
															"id": 892,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "5344:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5344:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5328:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "5328:42:4"
											},
											{
												"expression": {
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 898,
														"name": "level3Rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "5380:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 900,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "5413:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "33",
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5420:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																}
															],
															"id": 899,
															"name": "calculateRewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "5396:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5396:26:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5380:42:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "5380:42:4"
											}
										]
									},
									"functionSelector": "6386c1c7",
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserInfo",
									"nameLocation": "4808:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "4828:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4820:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4820:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4819:15:4"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "level0",
												"nameLocation": "4869:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4857:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$322_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 825,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 824,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "4857:4:4"
													},
													"referencedDeclaration": 322,
													"src": "4857:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$322_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "level1",
												"nameLocation": "4890:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4878:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$322_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 828,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 827,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "4878:4:4"
													},
													"referencedDeclaration": 322,
													"src": "4878:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$322_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "level2",
												"nameLocation": "4910:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4898:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$322_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 831,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 830,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "4898:4:4"
													},
													"referencedDeclaration": 322,
													"src": "4898:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$322_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "level3",
												"nameLocation": "4930:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4918:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_User_$322_memory_ptr",
													"typeString": "struct AcesStaking.User"
												},
												"typeName": {
													"id": 834,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 833,
														"name": "User",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 322,
														"src": "4918:4:4"
													},
													"referencedDeclaration": 322,
													"src": "4918:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$322_storage_ptr",
														"typeString": "struct AcesStaking.User"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "level0Rewards",
												"nameLocation": "4946:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4938:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4938:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "level1Rewards",
												"nameLocation": "4969:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4961:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4961:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "level2Rewards",
												"nameLocation": "4992:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "4984:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4984:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "level3Rewards",
												"nameLocation": "5015:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5007:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5007:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4856:173:4"
									},
									"scope": 1005,
									"src": "4799:630:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "5565:141:4",
										"statements": [
											{
												"expression": {
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 921,
														"name": "level0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "5575:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 922,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5584:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 924,
														"indexExpression": {
															"hexValue": "30",
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5594:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5584:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$327_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "5575:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "5575:21:4"
											},
											{
												"expression": {
													"id": 931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 927,
														"name": "level1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "5606:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 928,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5615:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 930,
														"indexExpression": {
															"hexValue": "31",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5625:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5615:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$327_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "5606:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 932,
												"nodeType": "ExpressionStatement",
												"src": "5606:21:4"
											},
											{
												"expression": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 933,
														"name": "level2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "5637:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 934,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5646:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 936,
														"indexExpression": {
															"hexValue": "32",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5656:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5646:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$327_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "5637:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "5637:21:4"
											},
											{
												"expression": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 939,
														"name": "level3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "5673:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
															"typeString": "struct AcesStaking.Level memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 940,
															"name": "levelInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5682:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
															}
														},
														"id": 942,
														"indexExpression": {
															"hexValue": "33",
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5692:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5682:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Level_$327_storage",
															"typeString": "struct AcesStaking.Level storage ref"
														}
													},
													"src": "5673:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
														"typeString": "struct AcesStaking.Level memory"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "5673:21:4"
											}
										]
									},
									"functionSelector": "e788cee5",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLevelsInfo",
									"nameLocation": "5444:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5457:2:4"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "level0",
												"nameLocation": "5495:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5482:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 909,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 908,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 327,
														"src": "5482:5:4"
													},
													"referencedDeclaration": 327,
													"src": "5482:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$327_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "level1",
												"nameLocation": "5516:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5503:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 912,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 911,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 327,
														"src": "5503:5:4"
													},
													"referencedDeclaration": 327,
													"src": "5503:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$327_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "level2",
												"nameLocation": "5537:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5524:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 915,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 914,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 327,
														"src": "5524:5:4"
													},
													"referencedDeclaration": 327,
													"src": "5524:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$327_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "level3",
												"nameLocation": "5558:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "5545:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Level_$327_memory_ptr",
													"typeString": "struct AcesStaking.Level"
												},
												"typeName": {
													"id": 918,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 917,
														"name": "Level",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 327,
														"src": "5545:5:4"
													},
													"referencedDeclaration": 327,
													"src": "5545:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Level_$327_storage_ptr",
														"typeString": "struct AcesStaking.Level"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5481:84:4"
									},
									"scope": 1005,
									"src": "5435:271:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "5806:93:4",
										"statements": [
											{
												"expression": {
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 957,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "5816:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 959,
															"indexExpression": {
																"id": 958,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "5826:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5816:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 960,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "APY",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 324,
														"src": "5816:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 961,
														"name": "_APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "5839:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5816:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 963,
												"nodeType": "ExpressionStatement",
												"src": "5816:27:4"
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 964,
																"name": "levelInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 339,
																"src": "5853:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Level_$327_storage_$",
																	"typeString": "mapping(uint256 => struct AcesStaking.Level storage ref)"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 965,
																"name": "level",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 948,
																"src": "5863:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5853:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Level_$327_storage",
																"typeString": "struct AcesStaking.Level storage ref"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lockPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 326,
														"src": "5853:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "_lockTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "5883:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5853:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "5853:39:4"
											}
										]
									},
									"functionSelector": "32e96203",
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 955,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 954,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5796:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5796:9:4"
										}
									],
									"name": "changeLevelValues",
									"nameLocation": "5721:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "level",
												"nameLocation": "5747:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5739:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "_APY",
												"nameLocation": "5762:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5754:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5754:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "_lockTime",
												"nameLocation": "5776:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "5768:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5738:48:4"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5806:0:4"
									},
									"scope": 1005,
									"src": "5712:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "5973:43:4",
										"statements": [
											{
												"expression": {
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 979,
														"name": "earlyWithdrawFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "5983:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 980,
														"name": "_newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "6002:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5983:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "5983:26:4"
											}
										]
									},
									"functionSelector": "aff3b697",
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 977,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 976,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5963:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5963:9:4"
										}
									],
									"name": "changeEarlyWithdrawFee",
									"nameLocation": "5914:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "_newFee",
												"nameLocation": "5945:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5937:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5937:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5936:17:4"
									},
									"returnParameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5973:0:4"
									},
									"scope": 1005,
									"src": "5905:111:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "6067:91:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 992,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6100:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6100:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 998,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6144:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AcesStaking_$1005",
																				"typeString": "contract AcesStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AcesStaking_$1005",
																				"typeString": "contract AcesStaking"
																			}
																		],
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6136:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 996,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6136:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6136:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 994,
																	"name": "acceptedToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "6112:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$274",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 231,
																"src": "6112:23:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6112:38:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 989,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "6077:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 241,
														"src": "6077:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6077:74:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "6077:74:4"
											}
										]
									},
									"functionSelector": "8d8f2adb",
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 987,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 986,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6057:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "6057:9:4"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "6031:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6045:2:4"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6067:0:4"
									},
									"scope": 1005,
									"src": "6022:136:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1006,
							"src": "224:5936:4",
							"usedErrors": []
						}
					],
					"src": "32:6128:4"
				},
				"id": 4
			}
		}
	}
}